import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { EntryPoint, EntryPointInterface } from "../../../../@account-abstraction/contracts/core/EntryPoint";
type EntryPointConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class EntryPoint__factory extends ContractFactory {
    constructor(...args: EntryPointConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<EntryPoint & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): EntryPoint__factory;
    static readonly bytecode = "0x60a0604052346200003657620000146200005d565b6040516142396200011582396080518181816119490152613e6f015261423990f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b62000067620000b1565b6040516102f081016001600160401b03811182821017620000ab576200009482916102f06200434e843990565b03906000f08015620000a557608052565b62000051565b6200003b565b620000bb620000bd565b565b620000bb620000fe565b620000d7620000d7620000d79290565b90565b620000d76001620000c7565b90620000d7620000d7620000fa92620000c7565b9055565b620000bb6200010c620000da565b6002620000e656fe60806040526004361015610023575b361561001957600080fd5b6100216124d6565b005b60003560e01c806242dc531461014257806301ffc9a71461013d5780630396cb60146101385780630bd28e3b146101335780631b2e01b81461012e578063205c28781461012957806322cdde4c1461012457806335567e1a1461011f5780635287ce121461011a57806370a0823114610115578063765e827f14610110578063850aaf621461010b5780639b249f6914610106578063b760faf914610101578063bb9fe6bf146100fc578063c23a5cea146100f7578063dbed18e0146100f25763fc7e286d0361000e576109e8565b6108b5565b61089d565b610885565b610867565b610851565b610816565b6107c8565b610748565b610721565b6106a0565b610685565b610638565b6105f9565b610522565b6104da565b610480565b61041b565b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761017e57604052565b610147565b9061019761019060405190565b928361015d565b565b6001600160401b03811161017e57602090601f01601f19160190565b0190565b90826000939282370152565b909291926101da6101d582610199565b610183565b93818552818301116101f4576101979160208501906101b9565b600080fd5b9080601f830112156101f457816020610214933591016101c5565b90565b6001600160a01b031690565b61022c81610217565b036101f457565b9050359061019782610223565b8061022c565b9050359061019782610240565b919091610140818403126101f45761031861026f610140610183565b9361027a8184610233565b85526102898160208501610246565b602086015261029b8160408501610246565b60408601526102ad8160608501610246565b60608601526102bf8160808501610246565b60808601526102d18160a08501610246565b60a08601526102e38160c08501610246565b60c08601526102f58160e08501610233565b60e086015261010061030982828601610246565b90860152610120809301610246565b90830152565b91906101c0838203126101f457610388906101a061033c60a0610183565b946103478382610253565b8652610357836101408301610246565b602087015261036a836101608301610246565b604087015261037d836101808301610246565b606087015201610246565b6080830152565b909182601f830112156101f4578135916001600160401b0383116101f45760200192600183028401116101f457565b91610200838303126101f45782356001600160401b0381116101f457826103e69185016101f9565b926103f4836020830161031e565b926101e08201356001600160401b0381116101f457610413920161038f565b9091565b9052565b346101f45761044b61043a6104313660046103be565b92919091610b3c565b6040515b9182918290815260200190565b0390f35b6001600160e01b0319811661022c565b905035906101978261044f565b906020828203126101f4576102149161045f565b346101f45761044b61049b61049636600461046c565b610cfc565b60405191829182901515815260200190565b63ffffffff811661022c565b90503590610197826104ad565b906020828203126101f457610214916104b9565b6104ed6104e83660046104c6565b6110e7565b604051005b6001600160c01b03811661022c565b90503590610197826104f2565b906020828203126101f45761021491610501565b346101f4576104ed61053536600461050e565b61123d565b91906040838203126101f4576102149060206105568286610233565b9401610501565b61021490610217906001600160a01b031682565b6102149061055d565b61021490610571565b9061058d9061057a565b600052602052604060002090565b610214906105af906001600160c01b031682565b6001600160c01b031690565b9061058d9061059b565b610214916008021c81565b9061021491546105c5565b6105f4610214926105ef6000936001610583565b6105bb565b6105d0565b346101f45761044b61043a61060f36600461053a565b906105db565b91906040838203126101f4576102149060206106318286610233565b9401610246565b346101f4576104ed61064b366004610615565b90611355565b90816101209103126101f45790565b906020828203126101f45781356001600160401b0381116101f4576102149201610651565b346101f45761044b61043a61069b366004610660565b61142a565b346101f45761044b61043a6106b636600461053a565b906114b8565b906020828203126101f45761021491610233565b60a0810192916101979190805182526020808201511515908301526040808201516001600160701b03169083015260608082015163ffffffff169083015260809081015165ffffffffffff16910152565b346101f45761044b61073c6107373660046106bc565b6115be565b604051918291826106d0565b346101f45761044b61043a61075e3660046106bc565b6115da565b909182601f830112156101f4578135916001600160401b0383116101f45760200192602083028401116101f457565b916040838303126101f45782356001600160401b0381116101f457826107bf602094610214938701610763565b94909501610233565b346101f4576104ed6107db366004610792565b91611850565b9190916040818403126101f4576107f88382610233565b9260208201356001600160401b0381116101f457610413920161038f565b346101f4576108263660046107e1565b91611888565b906020828203126101f45781356001600160401b0381116101f457610413920161038f565b346101f45761086136600461082c565b9061193d565b6104ed6108753660046106bc565b611a01565b60009103126101f457565b346101f45761089536600461087a565b6104ed611b20565b346101f4576104ed6108b03660046106bc565b611d05565b346101f4576104ed6108c8366004610792565b916124cb565b6102149081565b61021490546108ce565b610214905b60ff1690565b61021490546108df565b6102149060081c5b6001600160701b031690565b61021490546108f4565b6102149060781c5b63ffffffff1690565b6102149054610912565b6102149060981c5b65ffffffffffff1690565b610214905461092d565b610955906000610583565b61095e816108d5565b9161096b600183016108ea565b9161097860018201610908565b916102146001610989818501610923565b9301610940565b90959492610197946109cd6109da926109bd6080966109b460a088019c6000890152565b15156020870152565b6001600160701b03166040850152565b63ffffffff166060830152565b019065ffffffffffff169052565b346101f45761044b610a036109fe3660046106bc565b61094a565b91610a1095939560405190565b95869586610990565b15610a2057565b60405162461bcd60e51b81526020600482015260176024820152764141393220696e7465726e616c2063616c6c206f6e6c7960481b6044820152606490fd5b0390fd5b6102146102146102149290565b634e487b7160e01b600052601260045260246000fd5b90610a90565b9190565b908115610a9b570490565b610a70565b610214612710610a63565b6102149051610217565b610214610800610a63565b60005b838110610ad35750506000910152565b8181015183820152602001610ac3565b610b04610b0d6020936101b593610af8815190565b80835293849260200190565b95869101610ac0565b601f01601f191690565b9081526102149160408201915b6020818403910152610ae3565b6102149136916101c5565b905a93610b62610b53610b4e3061057a565b610217565b610b5c33610217565b14610a19565b815194610b70606087015190565b93610b96610b865a610b82603f610a63565b0290565b610b906040610a63565b90610a86565b610bba610a8c610214610bb2610bad60a08d015190565b8a0190565b6101b5610aa0565b10610ceb576102149660008096610bcf845190565b610bdb610a8c84610a63565b11610c0b575b5050505090610bff610bf6610c05935a900390565b60808501510190565b94610b31565b916125b2565b610c2f610c339183850195610c28610c2288610aab565b95610a63565b80956124df565b1590565b610c3e575b80610be1565b610c0594939650610c55610c50610ab5565b6124f2565b90610c61610214835190565b11610c7a575b505050610bff610bf66001959293610c38565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a20190610cca610cc4610cc06020610cba610cb4828d015190565b98610aab565b96015190565b9590565b9361057a565b93610ce0610cd760405190565b92839283610b17565b0390a3388080610c67565b63deaddead60e01b60005260206000fd5b6001600160e01b0319811663307e35b760e11b1490633e84f02160e01b63cf28ef9760e01b63122a0e9b60e31b8415610d83575b508315610d6c575b508215610d55575b508115610d4b575090565b610214915061280d565b6001600160e01b0319808316911614915038610d40565b6001600160e01b0319838116911614925038610d38565b6001600160e01b0319848116911614935038610d30565b61091a6102146102149290565b15610dae57565b60405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152606490fd5b15610dfa57565b60405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606490fd5b6102149081906001600160701b031681565b634e487b7160e01b600052601160045260246000fd5b9190610e72565b9290565b8201809211610e7d57565b610e51565b15610e8957565b60405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b6044820152606490fd5b15610eca57565b60405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b6044820152606490fd5b6108fc6102146102149290565b61021460a0610183565b6109356102146102149290565b90600019905b9181191691161790565b90610f44610214610f4b92610a63565b8254610f24565b9055565b9060ff90610f2a565b90610f68610214610f4b92151590565b8254610f4f565b90610100600160781b039060081b610f2a565b610214906108fc906001600160701b031682565b90610fa6610214610f4b92610f82565b8254610f6f565b9063ffffffff60781b9060781b610f2a565b61091a6102146102149263ffffffff1690565b90610fe2610214610f4b92610fbf565b8254610fad565b9065ffffffffffff60981b9060981b610f2a565b6109356102146102149265ffffffffffff1690565b90611022610214610f4b92610ffd565b8254610fe9565b906110a56080600161019794611049611043600087015190565b82610f34565b019261106161105b6020830151151590565b85610f58565b61107e61107860408301516001600160701b031690565b85610f96565b611098611092606083015163ffffffff1690565b85610fd2565b015165ffffffffffff1690565b90611012565b9061019791611029565b6102146102146102149263ffffffff1690565b610417906110b5565b90815260408101929161019791602001906110c8565b7fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0160009161120a61111b6102143386610583565b9361113561112882610d9a565b63ffffffff851611610da7565b6112056111ac8261117761116860018a0161116361115561091a83610923565b63ffffffff8b161015610df3565b610908565b6111723491610e3f565b610e67565b9761118b61118483610a63565b8a11610e82565b6111a661119e6001600160701b03610e3f565b8a1115610ec3565b016108d5565b916111d76111b988610f00565b6111cb6111c4610f0d565b9584870152565b600160208601526109bd565b63ffffffff851660608401526111fe6111ef82610f17565b65ffffffffffff166080850152565b3390610583565b6110ab565b6112133361057a565b9261122961122060405190565b928392836110d1565b0390a2565b6000198114610e7d5760010190565b61124f610197916105ef336001610583565b61126061125b826108d5565b61122e565b90610f34565b1561126d57565b60405162461bcd60e51b8152602060048201526019602482015278576974686472617720616d6f756e7420746f6f206c6172676560381b6044820152606490fd5b91908203918211610e7d57565b6104179061057a565b9160206101979294936112df604082019660008301906112bb565b0152565b906112f06101d583610199565b918252565b3d1561130f576113043d6112e3565b903d6000602084013e565b606090565b1561131b57565b60405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b6044820152606490fd5b6000610197926113e2829361139b846113716102143383610583565b01611389611381610214836108d5565b861115611266565b61126085611396836108d5565b6112ae565b6113a43361057a565b7fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb6113ce60405190565b806113da8786836112c4565b0390a261057a565b906113ec60405190565b90818003925af16113fb6112f5565b50611314565b61041790610217565b9081526060810193926101979290916040916112df906020830190611401565b61146a61144261145e9261143c600090565b5061282b565b61144b3061057a565b604051938492602084019246918461140a565b9081038252038261015d565b61147c611475825190565b9160200190565b2090565b6102149081906001600160c01b031681565b6108e46102146102149290565b610214906114b3610a8c6102149460ff1690565b901b90565b6114e46114de6114d9846105ef6114f4956114d1600090565b506001610583565b6108d5565b92611480565b6114ee6040611492565b9061149f565b1790565b611500610f0d565b9060005b8252602080808080860160005b815201600081520160005b8152016000905250565b6102146114f8565b906101976115a6600161153f610f0d565b9461155061154c826108d5565b8752565b61156761155e8383016108ea565b15156020880152565b611585611575838301610908565b6001600160701b03166040880152565b6115a0611593838301610923565b63ffffffff166060880152565b01610940565b65ffffffffffff166080840152565b6102149061152e565b6115d5610214916115cd611526565b506000610583565b6115b5565b60006111a6610214926115eb600090565b5082610583565b90611605929161160061283e565b611757565b61019761287e565b6001600160401b03811161017e5760208091020190565b906112f06101d58361160d565b610214610140610183565b611644611631565b906000825260208080808080808080808b01600081520160008152016000815201600081520160008152016000611511565b61021461163c565b611686610f0d565b90611504611676565b61021461167e565b60005b8281106116a657505050565b6020906116b161168f565b818401520161169a565b906101976116d16116cb84611624565b9361160d565b601f190160208401611697565b634e487b7160e01b600052603260045260246000fd5b906116fd825190565b81101561170e576020809102010190565b6116de565b90359061011e1936829003018212156101f4570190565b9082101561170e5760206102149202810190611713565b6102176102146102149290565b61021490611741565b9192919080611765816116bb565b9060009561177287610a63565b828110156117bb57806117b06117a061178e6117b694886116f4565b5161179a848a8c61172a565b846128f3565b6117a98c61174e565b9184612b1e565b60010190565b611772565b509391956117cb90959195610a63565b937fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f9726117f660405190565b600090a1845b865b86101561183f576118376118306117fe926101b58b6118288b611822818d8d61172a565b926116f4565b51908b612e4b565b9660010190565b9590506117fc565b945092509450506101979250613184565b9061019792916115f2565b90916101b590839080936101b9565b90916102149261185b565b9015158152610214916040820191610b24565b60009283926118a261189960405190565b9283928361186a565b03915af46118ae6112f5565b90610a5f6118bb60405190565b632650415560e21b815292839260048401611875565b9050519061019782610223565b906020828203126101f457610214916118d1565b9190610b0d81611909816101b59560209181520190565b80956101b9565b6020808252610214939101916118f2565b6040513d6000823e3d90fd5b6020810192916101979190611401565b61199d916020916119727f000000000000000000000000000000000000000000000000000000000000000061057a565b61057a565b90600061197e60405190565b80968195829461199263570e1a3660e01b90565b845260048401611910565b03925af180156119fc57610a5f916000916119cd575b50604051633653dc0360e11b81529182916004830161192d565b6119ef915060203d6020116119f5575b6119e7818361015d565b8101906118de565b386119b3565b503d6119dd565b611921565b7f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4611229611a32610cc434856131cd565b9261043e60405190565b15611a4357565b60405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b6044820152606490fd5b15611a7c57565b60405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b6044820152606490fd5b6109356102146102149263ffffffff1690565b611ae19065ffffffffffff165b9165ffffffffffff1690565b019065ffffffffffff8211610e7d57565b6102146102146102149265ffffffffffff1690565b61041790611af2565b6020810192916101979190611b07565b6000611ba36001611b346102143385610583565b0191611b5f611b4284610923565b611b58611b4e84610d9a565b9163ffffffff1690565b1415611a3c565b611b70611b6b846108ea565b611a75565b611b93611b7c42610f17565b611b8d611b8886610923565b611ab5565b90611ac8565b92611b9e8482611012565b610f58565b7ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a611229611bd03361057a565b92611bda60405190565b91829182611b10565b15611bea57565b60405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606490fd5b15611c2d57565b60405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606490fd5b15611c7957565b60405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606490fd5b15611cc557565b60405162461bcd60e51b81526020600482015260186024820152776661696c656420746f207769746864726177207374616b6560401b6044820152606490fd5b6101979060008091611dea6001611d1f6102143386610583565b0191611db7611d35611d3085610908565b610e3f565b93611d49611d4287610a63565b8611611be3565b611d67611d5582610940565b611d61611ad589610f17565b11611c26565b611d84611d7382610940565b611d7d4291611af2565b1115611c72565b611d96611d9087610d9a565b82610fd2565b611da8611da287610f17565b82611012565b611db186610f00565b90610f96565b611dc03361057a565b7fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda36113ce60405190565b90611df460405190565b90818003925af1611e036112f5565b50611cbe565b906116059291611e1761283e565b612108565b903590605e1936829003018212156101f4570190565b9082101561170e5760206102149202810190611e1c565b903590601e1936829003018212156101f457018035906001600160401b0382116101f4576020019160208202360383136101f457565b61021490610217565b61022c81611e7f565b3561021481611e88565b15611ea257565b60405162461bcd60e51b815260206004820152601760248201527620a09c9b1034b73b30b634b21030b3b3b932b3b0ba37b960491b6044820152606490fd5b903590601e1936829003018212156101f457018035906001600160401b0382116101f457602001913682900383136101f457565b50610214906020810190610233565b50610214906020810190610246565b9035601e1936839003018112156101f45701602081359101916001600160401b0382116101f4573682900383136101f457565b6102149161204861203c611fdc611fc16101208501611f8f611f888880611f15565b8790611401565b611fa6611f9f6020890189611f24565b6020880152565b611fb36040880188611f33565b9087830360408901526118f2565b611fce6060870187611f33565b9086830360608801526118f2565b611ff3611fec6080870187611f24565b6080860152565b61200a61200360a0870187611f24565b60a0860152565b61202161201a60c0870187611f24565b60c0860152565b61202e60e0860186611f33565b9085830360e08701526118f2565b92610100810190611f33565b916101008185039101526118f2565b9061021491611f66565b903561011e1936839003018112156101f4570190565b81835291602001908161208d6020830284019490565b92836000925b8484106120a35750505050505090565b90919293949560206120cf6120c883856001950388526120c38b88612061565b612057565b9860200190565b940194019294939190612093565b92906120fa90610214959360408601918683036000880152612077565b9260208185039101526118f2565b9290809360009261211884610a63565b95865b8188101561227c5761212e888686611e32565b61213a87820182611e49565b9161214a61196d60208301611e91565b9060019061216d61215d610b4e8461174e565b61216685610217565b1415611e9b565b612179610b4e8c61174e565b61218284610217565b036121ae575b5050509161219b6121a1926121a8945090565b90610e67565b9760010190565b9661211b565b8060406121bc920190611ee1565b90833b156101f4576121ed918c916121d360405190565b9384928392632dd8113360e01b84528a8a600486016120dd565b0381865afa9081612250575b5061223d5761221a57509161219b6121a1926121a8945b9294819450612188565b610a5f9061222760405190565b63086a9f7560e41b81529182916004830161192d565b50509161219b6121a1926121a894612210565b61226f908c8d3d10612275575b612267818361015d565b81019061087a565b386121f9565b503d61225d565b61228c91949395929697506116bb565b9061229681610a63565b80915b858310156123505784956122b4846020978a9c9b959c611e32565b966122cd6122c4848a018a611e49565b98909901611e91565b98879a6122d985610a63565b955b8c87101561232c576123246121a18e9f61125b8f8f8f8f9161230f8f612315936123088961231d976116f4565b519361172a565b866128f3565b91909261057a565b918d612b1e565b969d506122db565b955095929950959750955061234391985060010190565b9197909695949295612299565b9592949150509594957fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f97261238360405190565b600090a161239085610a63565b809581925b805b84101561247e576123fa6123b18588889d9c9b969d611e32565b6123c361196d61196d60208401611e91565b7f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d6123ed60405190565b600090a283810190611e49565b969095879a61240885610a63565b9a5b8c8c10156124535761244a6124438e9f61243d908f8f8f8f6118228f91946124359361219b9661172a565b51908d612e4b565b9861122e565b9c60010190565b9b969d5061240a565b949b50949b99509461239792975061246d91965060010190565b939495905098969198979097612395565b5091509450610197959350612498925061196d915061174e565b7f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d6124c260405190565b600090a2613184565b906101979291611e09565b61019733611a01565b600093849392909160208451940192f190565b3d90808211612517575b50604051906020810182016040528082526000602083013e90565b9050386124fc565b634e487b7160e01b600052602160045260246000fd5b6003111561253f57565b61251f565b9061019782612535565b61021490612544565b6104179061254e565b6112df61258f6060936101979698979561258260808601926000870190612557565b8482036020860152610ae3565b966040830152565b602080825261021492910190610ae3565b610214600a610a63565b9193909290915a908451926125c6846131fd565b906125d360e08601610aab565b6000986125e2610b4e8b61174e565b6125eb83610217565b0361270157505061260c906101b56126048a8801610aab565b955b5a900390565b61262781956101b560a0612621606084015190565b92015190565b61263a61263560808a015190565b830390565b908181116126cd575b50505083025b80612655604088015190565b938185101561269e5750505061267461266e6002612544565b91612544565b0361268f57610197929394819561268a816132dc565b613256565b63deadaa5160e01b8552602085fd5b61019796979392986126c061266e926126ba856126c696990390565b906131cd565b50612544565b1490613256565b6126499396506126ee6126e66126f894936101b5930390565b610b826125a8565b610b906064610a63565b93903880612643565b819592919561270e825190565b61271a610a8c8d610a63565b1161272e575b50506101b561260c92612606565b8285029061273c6002612544565b61274588612544565b03612751575b50612720565b61196d61275d9161057a565b637c627b2161276d60a08b015190565b90823b156101f4578d8993612798926127a38b849861278b60405190565b9a8b998a98899660e01b90565b865260048601612560565b0393f190816127f1575b506127e5576127be565b923861274b565b610a5f6127cc610c50610ab5565b604051632b5e552f60e21b815291829160048301612597565b6101b561260c926127b7565b612807908b3d8d1161227557612267818361015d565b386127ad565b6128276301ffc9a760e01b5b916001600160e01b03191690565b1490565b61146a9061337e565b6102146002610a63565b61284860026108d5565b612850612834565b90811461286257610197906002610f34565b604051633ee5aeb560e01b8152600490fd5b6102146001610a63565b610197612889612874565b6002610f34565b6102149081906001600160781b031681565b156128a957565b60405162461bcd60e51b815260206004820152601860248201527741413934206761732076616c756573206f766572666c6f7760401b6044820152606490fd5b3561021481610240565b9290916000925a8251612906818461347a565b6129196129128461142a565b6020860152565b60408101519661297861292d60c084015190565b6060840151608085015160a08601519061294961010088015190565b928d6129576101208a015190565b95171717171717612971610a8c6001600160781b03612890565b11156128a2565b6129818261359c565b9061298f898388888561366b565b986129aa610c2f61299f86610aab565b60208701519061389f565b612ac2576129bd610a8c610e6e5a880390565b11612a66576129d060e060609401610aab565b6129e66129e0610b4e600061174e565b91610217565b03612a25575b50926101b560a0612a19608095612606612a12612a20976102148c9b60406101979e0152565b60608a0152565b92016128e9565b910152565b6102149750612a20925060a0612a19608095612606612a1286612a528b988d6101979e9d6101b59a6139ac565b9e9099505096999a505050955050506129ec565b610a5f90612a7360405190565b631101335b60e11b815291829160048301908152604060208201819052601e908201527f41413236206f76657220766572696669636174696f6e4761734c696d69740000606082015260800190565b610a5f82612acf60405190565b631101335b60e11b815291829160048301908152604060208201819052601a908201527f4141323520696e76616c6964206163636f756e74206e6f6e6365000000000000606082015260800190565b92612b35612b2e6129e093613ba7565b9390610217565b03612c7357612c1d57612b4790613ba7565b90612b586129e0610b4e600061174e565b03612bca57612b645750565b610a5f90612b7160405190565b631101335b60e11b8152918291600483019081526040602082018190526021908201527f41413332207061796d61737465722065787069726564206f72206e6f742064756060820152606560f81b608082015260a00190565b610a5f82612bd760405190565b631101335b60e11b8152918291600483019081526040602082018190526014908201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b610a5f82612c2a60405190565b631101335b60e11b81529182916004830190815260406020820181905260179082015276414132322065787069726564206f72206e6f742064756560481b606082015260800190565b610a5f83612c8060405190565b631101335b60e11b8152918291600483019081526040602082018190526014908201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b612cdf612cd96102149263ffffffff1690565b60e01b90565b6001600160e01b03191690565b906101208061019793612d0760008201516000860190611401565b612d1660208201516020860152565b612d2560408201516040860152565b612d3460608201516060860152565b612d4360808201516080860152565b612d5260a082015160a0860152565b612d6160c082015160c0860152565b612d7360e082015160e0860190611401565b612d84610100820151610100860152565b0151910152565b906101a0608061019793612da760008201516000860190612cec565b612db76020820151610140860152565b612dc76040820151610160860152565b612d846060820151610180860152565b61020080825261021495939192612dff92612df4928501916118f2565b936020830190612d8b565b6101e0818403910152610ae3565b92916020612e2a6101979360408701908782036000890152611f66565b940152565b6102008082526102149492612dff91612df49190840190610ae3565b9092916000905a91612e61610214606084015190565b9050612f3660206000600460405199612e7d6060820182611ee1565b91908789600094600381116130e8575b638dd7712f60e01b95612e9f87612819565b1488146130b35750612ee89250612f209491508593612ec189612eda93015190565b90612ecb60405190565b9586948b860190815201612e0d565b87820181038252038261015d565b612f128789612ef96242dc53612cc6565b93612f0360405190565b9687958a870190815201612e2f565b85820181038252038261015d565b828151910182305af16000519760405215151590565b612f41575b50505050565b909192939450612f4f600090565b3d6020146130a4575b63deaddead60e01b8103612fb457610a5f85612f7360405190565b631101335b60e11b815291829160048301908152604060208201819052600f908201526e41413935206f7574206f662067617360881b606082015260800190565b9293509091612fc963deadaa5160e01b610a8c565b03613010575061300590612fed612fe36000945a906112ae565b608083015161219b565b90612ff9604082015190565b938161268a86936132dc565b905b38808080612f3b565b61309661308c61309e94613025602086015190565b600086017ff62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792613063602061305c6000855101610aab565b9351015190565b92613075610cc4610e6e610c50610ab5565b93613082610cd760405190565b0390a35a906112ae565b608084015161219b565b9160026125b2565b90613007565b5060206000803e600051612f58565b6130e39550612f129394506130ca6242dc53612cc6565b946130d460405190565b9788968b880190815201612dd7565b612f20565b83359550612e8d565b156130f857565b60405162461bcd60e51b81526020600482015260186024820152774141393020696e76616c69642062656e656669636961727960401b6044820152606490fd5b1561313f57565b60405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606490fd5b6000610197926131ae829361196d61319e610b4e8661174e565b6131a78361057a565b14156130f1565b906131b860405190565b90818003925af16131c76112f5565b50613138565b6131f660006131eb610214610214946131e4600090565b5083610583565b0192611172846108d5565b8092610f34565b61320f61012061262161010084015190565b808214613223576102149190480190613c1d565b5090565b6112df6101979461324f606094989795613246608086019a6000870152565b15156020850152565b6040830152565b9192907f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f906000613288602086015190565b9401936132d761329b6000875101610aab565b946132c46132be6132be610cc060206132b760e08d5101610aab565b9b51015190565b9761057a565b976132ce60405190565b94859485613227565b0390a4565b60006132e9602083015190565b91017f67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e61333861332e610cc4610cc060206133276000885101610aab565b9651015190565b9361043e60405190565b0390a3565b959391989796949290986101008701996000880161335a91611401565b602087015260408601526060850152608084015260a083015260c082015260e00152565b61021461338a82613c2f565b613396602084016128e9565b9061145e6133b06133aa6040870187611ee1565b90613c4a565b946133c16133aa6060830183611ee1565b906133ce608082016128e9565b6133da60a083016128e9565b906133f86133aa6133ed60c086016128e9565b9460e0810190611ee1565b9361340260405190565b998a9860208a01988961333d565b3561021481610223565b9061041790610217565b6102146034610a63565b1561343557565b60405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606490fd5b6135159061349061348a82613410565b8461341a565b6134a661349f602083016128e9565b6020850152565b6134cf6134c86134c06134bb608085016128e9565b613ca9565b606087015290565b6040850152565b6134e56134de60a083016128e9565b60c0850152565b61350b6135036134fa6134bb60c085016128e9565b61010087015290565b610120850152565b60e0810190611ee1565b600092918161352385610a63565b81111561356a57610197945061355b60e09361038895936135566135649461354f610a8c610214613424565b101561342e565b613d93565b60a08501529094565b0161341a565b50505060a06135908361358b6135826101979661174e565b60e0860161341a565b610a63565b916112df836080830152565b61021490610b826101006126216135d86135cf6135c66135bd604088015190565b60608801510190565b60808701510190565b60a08601510190565b60c08501510190565b9050519061019782610240565b906020828203126101f457610214916135e1565b6040906112df6136246101979597969460608401908482036000860152611f66565b966020830152565b908152606060208201819052600d908201526c10504c8cc81c995d995c9d1959609a1b60808201526102149160a082015b916040818403910152610ae3565b8251600096959194939091906136a460e061368585610aab565b9461369e6136966040890189611ee1565b90868c613e25565b01610aab565b60009485936136b285610a63565b926136c26129e0610b4e8861174e565b14948561381e575b61370890602094956136de61196d8a61057a565b906137136136f1886319822f7c93015190565b986136fb60405190565b998a988997889560e01b90565b855260048501613602565b0393f1600091816137ed575b506137e657506137b7565b6137345750505050565b6102146137419183610583565b019161374c836108d5565b90818311613761575061300792919003611260565b610a5f9061376e60405190565b631101335b60e11b8152918291600483019081526040602082018190526017908201527610504c8c48191a591b89dd081c185e481c1c99599d5b99604a1b606082015260800190565b846137c3610c50610ab5565b90610a5f6137d060405190565b6365c8fd4d60e01b81529283926004840161362c565b965061372a565b61381091925060203d602011613817575b613808818361015d565b8101906135ee565b903861371f565b503d6137fe565b6137089060209461382e896115da565b8b81111561384157505b945090506136ca565b8b039050613838565b6102149061385e610a8c6102149460ff1690565b901c90565b6105af6102146102149290565b61387d6102146102149290565b6001600160401b031690565b610214610214610214926001600160401b031690565b90610a8c6138e2612827926138b2600090565b506105ef6138da6138d46138cf6138c96040611492565b8561384a565b613863565b92613870565b956001610583565b926138f96138ef856108d5565b946112608661122e565b613889565b9092919261390e6101d582610199565b93818552818301116101f457610197916020850190610ac0565b9080601f830112156101f4578151610214926020016138fe565b91906040838203126101f4578251906001600160401b0382116101f457602061397082610214948701613928565b94016135e1565b908152606060208201819052600d908201526c10504cccc81c995d995c9d1959609a1b60808201526102149160a0820161365d565b9093916060946000945a916000840151936139c960e08601610aab565b9460006139d96102148883610583565b016139e3816108d5565b858110613b4b57613a1661196d613a1060806000989796613a0b613708976112608d8d990390565b015190565b9961057a565b92613a41613a2a60206352b7512c93015190565b97613a3460405190565b9889978896879560e01b90565b039288f180600080939092613b26575b50613b115750506001613ae257610a8c610e6e613a6e925a900390565b11613a765750565b610a5f90613a8360405190565b631101335b60e11b8152918291600483019081526040602082018190526027908201527f41413336206f766572207061796d6173746572566572696669636174696f6e47606082015266185cd31a5b5a5d60ca1b608082015260a00190565b82613aee610c50610ab5565b90610a5f613afb60405190565b6365c8fd4d60e01b815292839260048401613977565b96509450613a6e90610a8c90610e6e90612606565b9092613b4492503d8091833e613b3c818361015d565b810190613942565b9138613a51565b610a5f89613b5860405190565b631101335b60e11b815291829160048301908152604060208201819052601e908201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000606082015260800190565b600090613bb382610a63565b8114613c1257613bc5613bf191614162565b91613be1613bdc604085015165ffffffffffff1690565b611af2565b42118015613bf4575b9201610aab565b91565b50613c0b613bdc602085015165ffffffffffff1690565b4210613bea565b5090610a8c8261174e565b9080821015613c2a575090565b905090565b613c4561021491613c3e600090565b5035610571565b610571565b816040519182372090565b61021490613c69906001600160801b031682565b6001600160801b031690565b6102149060801c613c55565b61021490610a63565b613c696102146102149290565b6102149081906001600160801b031681565b90610214613cdf613cd9613cd4613cce6001600160801b03198716613c75565b613c75565b95613c81565b613c8a565b93613c97565b92613c97565b6102146014610a63565b909392938483116101f45784116101f4578101920390565b356bffffffffffffffffffffffff19169060148110613d24575090565b613d41906bffffffffffffffffffffffff19906014036008021b90565b1690565b6102149060601c61055d565b61021490613d45565b6102146024610a63565b356001600160801b0319169060108110613d7c575090565b6001600160801b03196010919091036008021b1690565b9091610214613cdf613dfc613cc9613de7613dac613ce5565b96613dcb613dc6613dc08a60008d86613cef565b90613d07565b613d51565b97613ded613cc9613de78c613dde613d5a565b94859187613cef565b90613d64565b99613df6613424565b92613cef565b9394613c97565b916020610197929493613e1e60408201966000830190611401565b0190611401565b9092909181600092613e39610a8c85610a63565b03613e46575b5050505050565b82850192613e5681855101610aab565b94853b613e65610a8c84610a63565b036140da57613e937f000000000000000000000000000000000000000000000000000000000000000061057a565b6020613ebf63570e1a36613ea960408a51015190565b9086613eb460405190565b958694859360e01b90565b835282613ed08b8d60048401611910565b0393f19081156119fc576000916140bb575b50613eef610b4e8461174e565b613ef882610217565b1461405f57613f0687610217565b613f0f82610217565b03614004573b613f21610a8c84610a63565b14613fa95750610e6e60e0613f7e6020613f78613dc6613dc07fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d9a99613f8699613f6d610cc49a610a63565b90613df66014610a63565b99015190565b945101610aab565b93613f9c613f9360405190565b92839283613e03565b0390a33880808080613e3f565b610a5f90613fb660405190565b631101335b60e11b81529182916004830190815260406020808301829052908201527f4141313520696e6974436f6465206d757374206372656174652073656e646572606082015260800190565b610a5f8261401160405190565b631101335b60e11b81529182916004830190815260406020808301829052908201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572606082015260800190565b610a5f8261406c60405190565b631101335b60e11b815291829160048301908152604060208201819052601b908201527f4141313320696e6974436f6465206661696c6564206f72204f4f470000000000606082015260800190565b6140d4915060203d6020116119f5576119e7818361015d565b38613ee2565b610a5f906140e760405190565b631101335b60e11b815291829160048301908152604060208201819052601f908201527f414131302073656e64657220616c726561647920636f6e737472756374656400606082015260800190565b6102146060610183565b614148614136565b9060008252602080808401600061151c565b610214614140565b61416a61415a565b5061021461417a613c4583611741565b9161419661419161418b60a0611492565b8361384a565b610f17565b90816141a5611ad56000610f17565b146141f5575b6141c56141916141e6926141bf60d0611492565b9061384a565b6141d76141d0614136565b958661341a565b65ffffffffffff166020850152565b65ffffffffffff166040830152565b65ffffffffffff91506141ab56fea2646970667358221220b9ac9882b27dca959dfc8f47e91453e8278760684dc5046adcdc52484fe0c72e64736f6c6343000818003360806040523461001a576040516102d061002082396102d090f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c63570e1a3603610057576100aa565b909182601f830112156100575781359167ffffffffffffffff831161005757602001926001830284011161005757565b600080fd5b9060208282031261005757813567ffffffffffffffff8111610057576100829201610027565b9091565b6001600160a01b031690565b90565b6001600160a01b03909116815260200190565b565b34610057576100d26100c66100c036600461005c565b9061022c565b60405191829182610095565b0390f35b6100926100926100929290565b90939293848311610057578411610057578101920390565b356bffffffffffffffffffffffff19169060148110610118575090565b610135906bffffffffffffffffffffffff19906014036008021b90565b1690565b61009290610086906001600160a01b031682565b6100929060601c610139565b6100929061014d565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761019a57604052565b610162565b906100a86101ac60405190565b9283610178565b67ffffffffffffffff811161019a57602090601f01601f19160190565b90826000939282370152565b909291926101f16101ec826101b3565b61019f565b9381855281830111610057576100a89160208501906101d0565b6100929136916101dc565b6100866100926100929290565b61009290610216565b61027392916020916102796000958693610245856100d6565b8161026d61026861026261025960146100d6565b8095858b6100e3565b906100fb565b610159565b956100e3565b9061020b565b90828483519301915af1825192901561028f5750565b61009291925061022356fea2646970667358221220e2f8404bf8a5f5a52b66d574f50f826a5dea6a9173b44ee66dc8c868f4c90e5364736f6c63430008180033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "ret";
            readonly type: "bytes";
        }];
        readonly name: "DelegateAndRevert";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "opIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "reason";
            readonly type: "string";
        }];
        readonly name: "FailedOp";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "opIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "reason";
            readonly type: "string";
        }, {
            readonly internalType: "bytes";
            readonly name: "inner";
            readonly type: "bytes";
        }];
        readonly name: "FailedOpWithRevert";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "returnData";
            readonly type: "bytes";
        }];
        readonly name: "PostOpReverted";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyGuardReentrantCall";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "SenderAddressResult";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "aggregator";
            readonly type: "address";
        }];
        readonly name: "SignatureValidationFailed";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "userOpHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "factory";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "paymaster";
            readonly type: "address";
        }];
        readonly name: "AccountDeployed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [];
        readonly name: "BeforeExecution";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "totalDeposit";
            readonly type: "uint256";
        }];
        readonly name: "Deposited";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "userOpHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "revertReason";
            readonly type: "bytes";
        }];
        readonly name: "PostOpRevertReason";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "aggregator";
            readonly type: "address";
        }];
        readonly name: "SignatureAggregatorChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "totalStaked";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "unstakeDelaySec";
            readonly type: "uint256";
        }];
        readonly name: "StakeLocked";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "withdrawTime";
            readonly type: "uint256";
        }];
        readonly name: "StakeUnlocked";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "withdrawAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "StakeWithdrawn";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "userOpHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "paymaster";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "actualGasCost";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "actualGasUsed";
            readonly type: "uint256";
        }];
        readonly name: "UserOperationEvent";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "userOpHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }];
        readonly name: "UserOperationPrefundTooLow";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "userOpHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "revertReason";
            readonly type: "bytes";
        }];
        readonly name: "UserOperationRevertReason";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "withdrawAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "Withdrawn";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "unstakeDelaySec";
            readonly type: "uint32";
        }];
        readonly name: "addStake";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "delegateAndRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "depositTo";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "deposits";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "deposit";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "staked";
            readonly type: "bool";
        }, {
            readonly internalType: "uint112";
            readonly name: "stake";
            readonly type: "uint112";
        }, {
            readonly internalType: "uint32";
            readonly name: "unstakeDelaySec";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint48";
            readonly name: "withdrawTime";
            readonly type: "uint48";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "getDepositInfo";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "deposit";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "staked";
                readonly type: "bool";
            }, {
                readonly internalType: "uint112";
                readonly name: "stake";
                readonly type: "uint112";
            }, {
                readonly internalType: "uint32";
                readonly name: "unstakeDelaySec";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint48";
                readonly name: "withdrawTime";
                readonly type: "uint48";
            }];
            readonly internalType: "struct IStakeManager.DepositInfo";
            readonly name: "info";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "uint192";
            readonly name: "key";
            readonly type: "uint192";
        }];
        readonly name: "getNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "initCode";
            readonly type: "bytes";
        }];
        readonly name: "getSenderAddress";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "initCode";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes32";
                readonly name: "accountGasLimits";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "preVerificationGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "gasFees";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "paymasterAndData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct PackedUserOperation";
            readonly name: "userOp";
            readonly type: "tuple";
        }];
        readonly name: "getUserOpHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "nonce";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "initCode";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "callData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "accountGasLimits";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "preVerificationGas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "gasFees";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "paymasterAndData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly internalType: "struct PackedUserOperation[]";
                readonly name: "userOps";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "contract IAggregator";
                readonly name: "aggregator";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IEntryPoint.UserOpsPerAggregator[]";
            readonly name: "opsPerAggregator";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "address payable";
            readonly name: "beneficiary";
            readonly type: "address";
        }];
        readonly name: "handleAggregatedOps";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "initCode";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes32";
                readonly name: "accountGasLimits";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "preVerificationGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "gasFees";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "paymasterAndData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct PackedUserOperation[]";
            readonly name: "ops";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "address payable";
            readonly name: "beneficiary";
            readonly type: "address";
        }];
        readonly name: "handleOps";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint192";
            readonly name: "key";
            readonly type: "uint192";
        }];
        readonly name: "incrementNonce";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "callData";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "nonce";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "verificationGasLimit";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "callGasLimit";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "paymasterVerificationGasLimit";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "paymasterPostOpGasLimit";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "preVerificationGas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "paymaster";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "maxFeePerGas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "maxPriorityFeePerGas";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct EntryPoint.MemoryUserOp";
                readonly name: "mUserOp";
                readonly type: "tuple";
            }, {
                readonly internalType: "bytes32";
                readonly name: "userOpHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "prefund";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "contextOffset";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "preOpGas";
                readonly type: "uint256";
            }];
            readonly internalType: "struct EntryPoint.UserOpInfo";
            readonly name: "opInfo";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "context";
            readonly type: "bytes";
        }];
        readonly name: "innerHandleOp";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "actualGasCost";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "uint192";
            readonly name: "";
            readonly type: "uint192";
        }];
        readonly name: "nonceSequenceNumber";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "unlockStake";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "withdrawAddress";
            readonly type: "address";
        }];
        readonly name: "withdrawStake";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "withdrawAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "withdrawAmount";
            readonly type: "uint256";
        }];
        readonly name: "withdrawTo";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): EntryPointInterface;
    static connect(address: string, runner?: ContractRunner | null): EntryPoint;
}
export {};
