"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestCompoundInterest__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "principal",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "feeRate",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "rate",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "defaultRate",
                type: "uint256",
            },
        ],
        name: "computeDebt",
        outputs: [
            {
                internalType: "uint256",
                name: "debt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "interest",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x60806040523461001a5760405161025a610020823961025a90f35b600080fdfe6080604052600436101561001257600080fd5b6357f2412360003560e01c146100b9575b600080fd5b905035905b565b60e081830312610023576100438282610028565b926100518360208401610028565b9261005f8160408501610028565b9261006d8260608301610028565b9261009561007e8460808501610028565b9360c061008e8260a08701610028565b9401610028565b90565b90815260608101939261002d9290916040916100b5906020830152565b0152565b34610023576100ea6100db6100cf36600461002f565b95949094939193610156565b60405191939193849384610098565b0390f35b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761012657604052565b6100ee565b9091606082840312610023578151602083015160409093015190935090565b6040513d6000823e3d90fd5b90919392956101d09060609661016a600090565b5073__$77148ab089d148baeff4bae8a4e175f76c$__9561018a60405190565b998a98899788976325d7f05f60e11b89526004890190815260e081019796959094909390929091602086015260408501526060840152608083015260a082015260c00152565b03915af4801561021f5760008080919390926101ed575b50909192565b915050610212915060603d606011610218575b61020a8183610104565b81019061012b565b386101e7565b503d610200565b61014a56fea2646970667358221220c2c5510948bd375f337fe4d7a4c17a190349dbe3383f1678e5b99245accd13bf64736f6c63430008180033";
const isSuperArgs = (xs) => {
    return (typeof xs[0] === "string" ||
        Array.isArray(xs[0]) ||
        "_isInterface" in xs[0]);
};
class TestCompoundInterest__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            const [linkLibraryAddresses, signer] = args;
            super(_abi, TestCompoundInterest__factory.linkBytecode(linkLibraryAddresses), signer);
        }
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$77148ab089d148baeff4bae8a4e175f76c\\$__", "g"), linkLibraryAddresses["contracts/lib/CompoundInterest.sol:CompoundInterest"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.TestCompoundInterest__factory = TestCompoundInterest__factory;
TestCompoundInterest__factory.bytecode = _bytecode;
TestCompoundInterest__factory.abi = _abi;
