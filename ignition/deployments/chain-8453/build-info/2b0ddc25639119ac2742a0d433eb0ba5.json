{
  "id": "2b0ddc25639119ac2742a0d433eb0ba5",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.24",
  "solcLongVersion": "0.8.24+commit.e11b9ed9",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.20;\n\nimport {OwnableUpgradeable} from \"./OwnableUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is specified at deployment time in the constructor for `Ownable`. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable2Step\n    struct Ownable2StepStorage {\n        address _pendingOwner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable2Step\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant Ownable2StepStorageLocation = 0x237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00;\n\n    function _getOwnable2StepStorage() private pure returns (Ownable2StepStorage storage $) {\n        assembly {\n            $.slot := Ownable2StepStorageLocation\n        }\n    }\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    function __Ownable2Step_init() internal onlyInitializing {\n    }\n\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        Ownable2StepStorage storage $ = _getOwnable2StepStorage();\n        return $._pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        Ownable2StepStorage storage $ = _getOwnable2StepStorage();\n        $._pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        Ownable2StepStorage storage $ = _getOwnable2StepStorage();\n        delete $._pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        if (pendingOwner() != sender) {\n            revert OwnableUnauthorizedAccount(sender);\n        }\n        _transferOwnership(sender);\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "contracts/Errors.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nerror InvalidLien();\nerror LienIsCurrent();\nerror LienIsDefaulted();\n\nerror TakerIsNotBorrower();\nerror MakerIsNotBorrower();\nerror InsufficientAskAmount();\nerror BidCannotBorrow();\n\nerror CurrencyMismatch();\nerror CollectionMismatch();\nerror TokenMismatch();\n\nerror InvalidCriteria();\nerror InvalidToken();\n\nerror RequiresAskSide();\nerror RequiresBidSide();\nerror RequiresNakedBidSide();\n\nerror InvalidFee();\nerror InvalidRate();\nerror InvalidLoanAmount();\nerror InsufficientOffer();\nerror InvalidPermitOfferHash();\n\nerror OfferExpired();\nerror OfferUnavailable();\n\nerror InvalidSignature();\nerror InvalidVParameter();\nerror ERC6492DeployFailed(bytes err);\n\nerror InvalidAssetFactory();\nerror SellerNotAskWhitelisted();\nerror SellerNotBidWhitelisted();\n\nerror InvalidEscrow();\nerror EscrowLocked();\n\nerror CannotTakeSoftOffer();\nerror CannotTakeHardOffer();\n\nerror OnlyKettle();\n\nerror InvalidMarketOffer();\nerror InvalidLoanOffer();\n\nerror PlaceholderAlreadyEscrowed();\n\nerror InvalidRebate();\n\nerror InvalidTaker();\n\nerror CannotRedeemFromBid();\nerror InvalidAdmin();\nerror InvalidCollection();\nerror InvalidTokenId();\nerror InvalidRedemptionCharge();\n"
      },
      "contracts/EscrowController.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\";\n\nimport \"./interfaces/IEscrowController.sol\";\n\nimport \"./KettleAccess.sol\";\n\nimport \"./Structs.sol\";\nimport \"./Errors.sol\";\n\ncontract EscrowController is IEscrowController, Initializable, Ownable2StepUpgradeable, KettleAccess {\n    address public TOKEN_SUPPLIER;\n\n    uint256 public escrowIndex;\n    uint256 public lockTime;\n    bool public whitelistOnly;\n\n    mapping(uint256 => bytes32) public escrows;\n    mapping(uint256 => bool) public escrowedTokens;\n    mapping(address => bool) public whitelistedAskMakers;\n    mapping(address => bool) public whitelistedBidTakers;\n\n    uint256[50] private _gap;\n\n    function __EscrowController_init(address owner) public initializer {\n        __Ownable2Step_init();\n\n        escrowIndex = 1;\n        lockTime = 30 days;\n        whitelistOnly = true;\n\n        _transferOwnership(owner);\n    }\n\n    // ===============================\n    //             SETTERS\n    // ===============================\n\n    function setTokenSupplier(address _tokenSupplier) external onlyOwner {\n        TOKEN_SUPPLIER = _tokenSupplier;\n    }\n\n    function setLockTime(uint256 time) external onlyOwner {\n        lockTime = time;\n    }\n\n    function setWhitelistOnly(bool _whitelistOnly) external onlyOwner {\n        whitelistOnly = _whitelistOnly;\n    }\n\n    function whitelistedAskMaker(address user, bool whitelisted) external onlyOwner {\n        whitelistedAskMakers[user] = whitelisted;\n        emit AskMakerWhitelisted(user, whitelisted);\n    }\n\n    function whitelistBidTaker(address user, bool whitelisted) external onlyOwner {\n        whitelistedBidTakers[user] = whitelisted;\n        emit BidTakerWhitelisted(user, whitelisted);\n    }\n\n    function setEscrowedToken(uint256 placeholder, bool escrowed) external onlyOwner {\n        escrowedTokens[placeholder] = escrowed;\n        emit PlaceholderEscrowed(placeholder, escrowed);\n    }\n\n    // ===============================\n    //        EXTERNAL METHODS\n    // ===============================\n\n    function openEscrow(\n        uint256 placeholder,\n        uint256 rebate,\n        bool withRedemption,\n        bytes32 redemptionHash,\n        uint256 redemptionCharge,\n        address buyer,\n        address seller,\n        MarketOffer calldata offer\n    ) external onlyKettle returns (uint256 escrowId) {\n        if (escrowedTokens[placeholder]) revert PlaceholderAlreadyEscrowed();\n\n        if (whitelistOnly) {\n            if (offer.side == Side.ASK && !whitelistedAskMakers[seller]) revert SellerNotAskWhitelisted();\n            if (offer.side == Side.BID && !whitelistedBidTakers[buyer]) revert SellerNotBidWhitelisted();\n        }\n\n        if (!withRedemption && redemptionCharge > 0) revert InvalidRedemptionCharge();\n        if (withRedemption && redemptionCharge == 0 && redemptionHash == bytes32(0)) revert InvalidRedemptionCharge();\n\n        Escrow memory escrow = Escrow({\n            side: offer.side,\n            placeholder: placeholder,\n            buyer: buyer,\n            seller: seller,\n            collection: offer.collateral.collection,\n            identifier: offer.collateral.identifier,\n            currency: offer.terms.currency,\n            amount: offer.terms.amount,\n            recipient: offer.fee.recipient,\n            fee: offer.fee.rate,\n            rebate: rebate,\n            withRedemption: withRedemption,\n            redemptionHash: redemptionHash,\n            redemptionCharge: redemptionCharge,\n            timestamp: block.timestamp,\n            lockTime: lockTime\n        });\n\n        unchecked {\n            escrowId = escrowIndex++;\n        }\n\n        escrows[escrowIndex] = _hashEscrow(escrow);\n        escrowedTokens[placeholder] = true;\n\n        emit EscrowOpened({\n            escrowId: escrowIndex++,\n            escrow: escrow\n        });\n    }\n\n    function settleEscrow(uint256 escrowId, Escrow calldata escrow, uint256 tokenId) external onlyKettle validEscrow(escrowId, escrow) {\n        delete escrows[escrowId];\n        emit EscrowSettled({ escrowId: escrowId, tokenId: tokenId });\n    }\n\n    function claimEscrow(uint256 escrowId, Escrow calldata escrow) external onlyKettle validEscrow(escrowId, escrow) escrowUnlocked(escrow) {\n        delete escrows[escrowId];\n        emit EscrowClaimed({ escrowId: escrowId });\n    }\n\n    function rejectEscrow(uint256 escrowId, Escrow calldata escrow, bool returnRebate) external onlyKettle validEscrow(escrowId, escrow) {\n        delete escrows[escrowId];\n        emit EscrowRejected({ escrowId: escrowId, rebateReturned: returnRebate });\n    }\n\n    function hashEscrow(Escrow memory escrow) external pure returns (bytes32 _hash) {\n        _hash = _hashEscrow(escrow);\n    }\n\n    // ===============================\n    //             HELPERS\n    // ===============================\n\n    function _hashEscrow(Escrow memory escrow) internal pure returns (bytes32 _hash) {\n        _hash = keccak256(abi.encode(escrow));\n    }\n\n    // ===============================\n    //             MODIFIERS\n    // ===============================\n\n    modifier validEscrow(uint256 escrowId, Escrow memory escrow) {\n        if (!(escrows[escrowId] == _hashEscrow(escrow))) revert InvalidEscrow();\n        _;\n    }\n\n    modifier escrowUnlocked(Escrow memory escrow) {\n        if(escrow.timestamp + escrow.lockTime > block.timestamp) revert EscrowLocked();\n        _;\n    }\n}\n"
      },
      "contracts/interfaces/IEscrowController.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"../Structs.sol\";\n\ninterface IEscrowController {\n\n    function TOKEN_SUPPLIER() external view returns (address);\n\n    function openEscrow(\n        uint256 placeholder,\n        uint256 rebate,\n        bool withRedemption,\n        bytes32 redemptionHash,\n        uint256 redemptionCharge,\n        address buyer,\n        address seller,\n        MarketOffer calldata offer\n    ) external returns (uint256);\n\n    function settleEscrow(uint256 escrowId, Escrow calldata escrow, uint256 tokenId) external;\n    function claimEscrow(uint256 escrowId, Escrow calldata escrow) external;\n    function rejectEscrow(uint256 escrowId, Escrow calldata escrow, bool returnRebate) external;\n\n    event EscrowOpened(uint256 indexed escrowId, Escrow escrow);\n    event EscrowSettled(uint256 indexed escrowId, uint256 indexed tokenId);\n    event EscrowClaimed(uint256 indexed escrowId);\n    event EscrowRejected(uint256 indexed escrowId, bool indexed rebateReturned);\n\n    event AskMakerWhitelisted(address indexed maker, bool indexed whitelisted);\n    event BidTakerWhitelisted(address indexed taker, bool indexed whitelisted);\n    event PlaceholderEscrowed(uint256 indexed placeholder, bool indexed escrowed);\n}\n"
      },
      "contracts/KettleAccess.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\";\nimport \"./Errors.sol\";\n\ncontract KettleAccess is Ownable2StepUpgradeable {\n\n    address public kettle;\n\n    function setKettle(address _kettle) onlyOwner external {\n        kettle = _kettle;\n    }\n\n    modifier onlyKettle() {\n        if (msg.sender != kettle) {\n            revert OnlyKettle();\n        }\n        _;\n    }\n}\n"
      },
      "contracts/Structs.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { IERC721 } from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nenum OfferKind { LOAN, MARKET }\nenum Criteria { SIMPLE, PROOF }\nenum Side { BID, ASK }\n\nstruct Lien {\n    address borrower;\n    IERC721 collection;\n    uint256 tokenId;\n    IERC20 currency;\n    uint256 principal;\n    uint256 rate;\n    uint256 defaultRate;\n    uint256 duration;\n    uint256 gracePeriod;\n    address recipient;\n    uint256 fee;\n    uint256 startTime;\n}\n\nstruct Collateral {\n    Criteria criteria;\n    IERC721 collection;\n    uint256 identifier;\n}\n\nstruct FeeTerms {\n    address recipient;\n    uint256 rate;\n}\n\n// ====================================\n//            LOAN OFFER\n// ====================================\n\nstruct LoanOfferTerms {\n    IERC20 currency;\n    uint256 amount;\n    uint256 maxAmount;\n    uint256 minAmount;\n    uint256 rate;\n    uint256 defaultRate;\n    uint256 duration;\n    uint256 gracePeriod;\n}\n\nstruct LoanOffer {\n    OfferKind kind;\n    bool soft;\n    Side side;\n    address maker;\n    address taker;\n    Collateral collateral;\n    LoanOfferTerms terms;\n    FeeTerms fee;\n    uint256 expiration;\n    uint256 salt;\n}\n\n// ====================================\n//            MARKET OFFER\n// ====================================\n\nstruct MarketOfferTerms {\n    IERC20 currency;\n    uint256 amount;\n    uint256 rebate;\n}\n\nstruct MarketOffer {\n    OfferKind kind;\n    bool soft;\n    Side side;\n    address maker;\n    address taker;\n    Collateral collateral;\n    MarketOfferTerms terms;\n    FeeTerms fee;\n    uint256 expiration;\n    uint256 salt;\n}\n\n// ====================================\n//              ESCROW\n// ====================================\n\nstruct Escrow {\n    Side side;\n    uint256 placeholder;\n    uint256 identifier;\n    address buyer;\n    address seller;\n    IERC721 collection;\n    IERC20 currency;\n    uint256 amount;\n    address recipient;\n    uint256 fee;\n    uint256 rebate;\n    bytes32 redemptionHash;\n    bool withRedemption;\n    uint256 redemptionCharge;\n    uint256 timestamp;\n    uint256 lockTime;\n}\n\n// ====================================\n//              REDEMPTION\n// ====================================\n\nstruct RedemptionCharge {\n  address redeemer;\n  IERC721 collection;\n  uint256 tokenId;\n  IERC20 currency;\n  uint256 amount;\n  uint256 expiration;\n  uint256 salt;\n}\n\nstruct Asset {\n  IERC721 collection;\n  uint256 tokenId;\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 100,
        "details": {
          "yulDetails": {
            "optimizerSteps": "u"
          }
        }
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "storageLayout"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
          "exportedSymbols": {
            "Initializable": [
              585
            ],
            "Ownable2StepUpgradeable": [
              136
            ],
            "OwnableUpgradeable": [
              331
            ]
          },
          "id": 137,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
              "file": "./OwnableUpgradeable.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 137,
              "sourceUnit": 332,
              "src": "133:60:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "OwnableUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 331,
                    "src": "141:18:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../proxy/utils/Initializable.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 137,
              "sourceUnit": 586,
              "src": "194:63:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 585,
                    "src": "202:13:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 7,
                    "name": "Initializable",
                    "nameLocations": [
                      "757:13:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 585,
                    "src": "757:13:0"
                  },
                  "id": 8,
                  "nodeType": "InheritanceSpecifier",
                  "src": "757:13:0"
                },
                {
                  "baseName": {
                    "id": 9,
                    "name": "OwnableUpgradeable",
                    "nameLocations": [
                      "772:18:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 331,
                    "src": "772:18:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "772:18:0"
                }
              ],
              "canonicalName": "Ownable2StepUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 6,
                "nodeType": "StructuredDocumentation",
                "src": "259:452:0",
                "text": " @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is specified at deployment time in the constructor for `Ownable`. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."
              },
              "fullyImplemented": true,
              "id": 136,
              "linearizedBaseContracts": [
                136,
                331,
                631,
                585
              ],
              "name": "Ownable2StepUpgradeable",
              "nameLocation": "730:23:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Ownable2StepUpgradeable.Ownable2StepStorage",
                  "documentation": {
                    "id": 11,
                    "nodeType": "StructuredDocumentation",
                    "src": "797:70:0",
                    "text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable2Step"
                  },
                  "id": 14,
                  "members": [
                    {
                      "constant": false,
                      "id": 13,
                      "mutability": "mutable",
                      "name": "_pendingOwner",
                      "nameLocation": "917:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 14,
                      "src": "909:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "909:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Ownable2StepStorage",
                  "nameLocation": "879:19:0",
                  "nodeType": "StructDefinition",
                  "scope": 136,
                  "src": "872:65:0",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 17,
                  "mutability": "constant",
                  "name": "Ownable2StepStorageLocation",
                  "nameLocation": "1084:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1059:121:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307832333765313538323232653365363936386237326239646230643830343361616366303734616439663635306630643136303662346438326565343332633030",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1114:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_16053720875717120191110171845200109550086765943194951757191984851604933389312_by_1",
                      "typeString": "int_const 1605...(69 digits omitted)...9312"
                    },
                    "value": "0x237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 24,
                    "nodeType": "Block",
                    "src": "1275:86:0",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "1294:61:0",
                          "nodeType": "YulBlock",
                          "src": "1294:61:0",
                          "statements": [
                            {
                              "nativeSrc": "1308:37:0",
                              "nodeType": "YulAssignment",
                              "src": "1308:37:0",
                              "value": {
                                "name": "Ownable2StepStorageLocation",
                                "nativeSrc": "1318:27:0",
                                "nodeType": "YulIdentifier",
                                "src": "1318:27:0"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "1308:6:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1308:6:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 21,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "1308:6:0",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 17,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1318:27:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 23,
                        "nodeType": "InlineAssembly",
                        "src": "1285:70:0"
                      }
                    ]
                  },
                  "id": 25,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getOwnable2StepStorage",
                  "nameLocation": "1196:23:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1219:2:0"
                  },
                  "returnParameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "1272:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "1244:29:0",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                          "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
                        },
                        "typeName": {
                          "id": 20,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 19,
                            "name": "Ownable2StepStorage",
                            "nameLocations": [
                              "1244:19:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 14,
                            "src": "1244:19:0"
                          },
                          "referencedDeclaration": 14,
                          "src": "1244:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                            "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1243:31:0"
                  },
                  "scope": 136,
                  "src": "1187:174:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700",
                  "id": 31,
                  "name": "OwnershipTransferStarted",
                  "nameLocation": "1373:24:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1414:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "1398:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1398:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 29,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1445:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "1429:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1429:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1397:57:0"
                  },
                  "src": "1367:88:0"
                },
                {
                  "body": {
                    "id": 36,
                    "nodeType": "Block",
                    "src": "1518:7:0",
                    "statements": []
                  },
                  "id": 37,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 34,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 33,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "1501:16:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 494,
                        "src": "1501:16:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1501:16:0"
                    }
                  ],
                  "name": "__Ownable2Step_init",
                  "nameLocation": "1470:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1489:2:0"
                  },
                  "returnParameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:0:0"
                  },
                  "scope": 136,
                  "src": "1461:64:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 42,
                    "nodeType": "Block",
                    "src": "1598:7:0",
                    "statements": []
                  },
                  "id": 43,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 40,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 39,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "1581:16:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 494,
                        "src": "1581:16:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1581:16:0"
                    }
                  ],
                  "name": "__Ownable2Step_init_unchained",
                  "nameLocation": "1540:29:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1569:2:0"
                  },
                  "returnParameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1598:0:0"
                  },
                  "scope": 136,
                  "src": "1531:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 58,
                    "nodeType": "Block",
                    "src": "1742:106:0",
                    "statements": [
                      {
                        "assignments": [
                          51
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "1780:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 58,
                            "src": "1752:29:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                              "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
                            },
                            "typeName": {
                              "id": 50,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 49,
                                "name": "Ownable2StepStorage",
                                "nameLocations": [
                                  "1752:19:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14,
                                "src": "1752:19:0"
                              },
                              "referencedDeclaration": 14,
                              "src": "1752:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                                "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 52,
                            "name": "_getOwnable2StepStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "1784:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Ownable2StepStorage_$14_storage_ptr_$",
                              "typeString": "function () pure returns (struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer)"
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1784:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                            "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1752:57:0"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 55,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "1826:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                              "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1828:13:0",
                          "memberName": "_pendingOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1826:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 48,
                        "id": 57,
                        "nodeType": "Return",
                        "src": "1819:22:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 44,
                    "nodeType": "StructuredDocumentation",
                    "src": "1610:65:0",
                    "text": " @dev Returns the address of the pending owner."
                  },
                  "functionSelector": "e30c3978",
                  "id": 59,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pendingOwner",
                  "nameLocation": "1689:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1701:2:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 59,
                        "src": "1733:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1733:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1732:9:0"
                  },
                  "scope": 136,
                  "src": "1680:168:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    301
                  ],
                  "body": {
                    "id": 86,
                    "nodeType": "Block",
                    "src": "2120:168:0",
                    "statements": [
                      {
                        "assignments": [
                          70
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 70,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "2158:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 86,
                            "src": "2130:29:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                              "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
                            },
                            "typeName": {
                              "id": 69,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 68,
                                "name": "Ownable2StepStorage",
                                "nameLocations": [
                                  "2130:19:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14,
                                "src": "2130:19:0"
                              },
                              "referencedDeclaration": 14,
                              "src": "2130:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                                "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 73,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 71,
                            "name": "_getOwnable2StepStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "2162:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Ownable2StepStorage_$14_storage_ptr_$",
                              "typeString": "function () pure returns (struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer)"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2162:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                            "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2130:57:0"
                      },
                      {
                        "expression": {
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 74,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "2197:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                                "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2199:13:0",
                            "memberName": "_pendingOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "2197:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 77,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "2215:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2197:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79,
                        "nodeType": "ExpressionStatement",
                        "src": "2197:26:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 81,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 242,
                                "src": "2263:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2263:7:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 83,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "2272:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 80,
                            "name": "OwnershipTransferStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "2238:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2238:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85,
                        "nodeType": "EmitStatement",
                        "src": "2233:48:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 60,
                    "nodeType": "StructuredDocumentation",
                    "src": "1854:182:0",
                    "text": " @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 87,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 66,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 65,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2110:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 226,
                        "src": "2110:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2110:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2050:17:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 64,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2101:8:0"
                  },
                  "parameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2076:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 87,
                        "src": "2068:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2068:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2067:18:0"
                  },
                  "returnParameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2120:0:0"
                  },
                  "scope": 136,
                  "src": "2041:247:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    330
                  ],
                  "body": {
                    "id": 110,
                    "nodeType": "Block",
                    "src": "2544:150:0",
                    "statements": [
                      {
                        "assignments": [
                          96
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 96,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "2582:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 110,
                            "src": "2554:29:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                              "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
                            },
                            "typeName": {
                              "id": 95,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 94,
                                "name": "Ownable2StepStorage",
                                "nameLocations": [
                                  "2554:19:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14,
                                "src": "2554:19:0"
                              },
                              "referencedDeclaration": 14,
                              "src": "2554:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                                "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 99,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 97,
                            "name": "_getOwnable2StepStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "2586:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Ownable2StepStorage_$14_storage_ptr_$",
                              "typeString": "function () pure returns (struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer)"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2586:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                            "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2554:57:0"
                      },
                      {
                        "expression": {
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2621:22:0",
                          "subExpression": {
                            "expression": {
                              "id": 100,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "2628:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
                                "typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
                              }
                            },
                            "id": 101,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2630:13:0",
                            "memberName": "_pendingOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "2628:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 103,
                        "nodeType": "ExpressionStatement",
                        "src": "2621:22:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 107,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "2678:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 104,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "2653:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_Ownable2StepUpgradeable_$136_$",
                                "typeString": "type(contract super Ownable2StepUpgradeable)"
                              }
                            },
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2659:18:0",
                            "memberName": "_transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 330,
                            "src": "2653:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2653:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 109,
                        "nodeType": "ExpressionStatement",
                        "src": "2653:34:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 88,
                    "nodeType": "StructuredDocumentation",
                    "src": "2294:173:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."
                  },
                  "id": 111,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2481:18:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 92,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2535:8:0"
                  },
                  "parameters": {
                    "id": 91,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 90,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2508:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "2500:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2500:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2499:18:0"
                  },
                  "returnParameters": {
                    "id": 93,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2544:0:0"
                  },
                  "scope": 136,
                  "src": "2472:222:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 134,
                    "nodeType": "Block",
                    "src": "2816:187:0",
                    "statements": [
                      {
                        "assignments": [
                          116
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 116,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "2834:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 134,
                            "src": "2826:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 115,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2826:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 119,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 117,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "2843:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2843:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2826:29:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 120,
                              "name": "pendingOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "2869:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2869:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 122,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "2887:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2869:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 129,
                        "nodeType": "IfStatement",
                        "src": "2865:96:0",
                        "trueBody": {
                          "id": 128,
                          "nodeType": "Block",
                          "src": "2895:66:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 125,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "2943:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 124,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 167,
                                  "src": "2916:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2916:34:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 127,
                              "nodeType": "RevertStatement",
                              "src": "2909:41:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 131,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "2989:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 130,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              111
                            ],
                            "referencedDeclaration": 111,
                            "src": "2970:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2970:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 133,
                        "nodeType": "ExpressionStatement",
                        "src": "2970:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 112,
                    "nodeType": "StructuredDocumentation",
                    "src": "2700:69:0",
                    "text": " @dev The new owner accepts the ownership transfer."
                  },
                  "functionSelector": "79ba5097",
                  "id": 135,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptOwnership",
                  "nameLocation": "2783:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2798:2:0"
                  },
                  "returnParameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2816:0:0"
                  },
                  "scope": 136,
                  "src": "2774:229:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 137,
              "src": "712:2293:0",
              "usedErrors": [
                167,
                172,
                348,
                351
              ],
              "usedEvents": [
                31,
                178,
                356
              ]
            }
          ],
          "src": "107:2899:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              631
            ],
            "Initializable": [
              585
            ],
            "OwnableUpgradeable": [
              331
            ]
          },
          "id": 332,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 138,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
              "file": "../utils/ContextUpgradeable.sol",
              "id": 140,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 332,
              "sourceUnit": 632,
              "src": "128:67:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 139,
                    "name": "ContextUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 631,
                    "src": "136:18:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../proxy/utils/Initializable.sol",
              "id": 142,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 332,
              "sourceUnit": 586,
              "src": "196:63:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 141,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 585,
                    "src": "204:13:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 144,
                    "name": "Initializable",
                    "nameLocations": [
                      "789:13:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 585,
                    "src": "789:13:1"
                  },
                  "id": 145,
                  "nodeType": "InheritanceSpecifier",
                  "src": "789:13:1"
                },
                {
                  "baseName": {
                    "id": 146,
                    "name": "ContextUpgradeable",
                    "nameLocations": [
                      "804:18:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 631,
                    "src": "804:18:1"
                  },
                  "id": 147,
                  "nodeType": "InheritanceSpecifier",
                  "src": "804:18:1"
                }
              ],
              "canonicalName": "OwnableUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 143,
                "nodeType": "StructuredDocumentation",
                "src": "261:487:1",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 331,
              "linearizedBaseContracts": [
                331,
                631,
                585
              ],
              "name": "OwnableUpgradeable",
              "nameLocation": "767:18:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "OwnableUpgradeable.OwnableStorage",
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "829:65:1",
                    "text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
                  },
                  "id": 151,
                  "members": [
                    {
                      "constant": false,
                      "id": 150,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "939:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "931:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 149,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "931:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "OwnableStorage",
                  "nameLocation": "906:14:1",
                  "nodeType": "StructDefinition",
                  "scope": 331,
                  "src": "899:53:1",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 154,
                  "mutability": "constant",
                  "name": "OwnableStorageLocation",
                  "nameLocation": "1094:22:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 331,
                  "src": "1069:116:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1119:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
                      "typeString": "int_const 6517...(69 digits omitted)...7328"
                    },
                    "value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 161,
                    "nodeType": "Block",
                    "src": "1270:81:1",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "1289:56:1",
                          "nodeType": "YulBlock",
                          "src": "1289:56:1",
                          "statements": [
                            {
                              "nativeSrc": "1303:32:1",
                              "nodeType": "YulAssignment",
                              "src": "1303:32:1",
                              "value": {
                                "name": "OwnableStorageLocation",
                                "nativeSrc": "1313:22:1",
                                "nodeType": "YulIdentifier",
                                "src": "1313:22:1"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "1303:6:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1303:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 158,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "1303:6:1",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 154,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1313:22:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 160,
                        "nodeType": "InlineAssembly",
                        "src": "1280:65:1"
                      }
                    ]
                  },
                  "id": 162,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getOwnableStorage",
                  "nameLocation": "1201:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1219:2:1"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "1267:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "1244:24:1",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
                          "typeString": "struct OwnableUpgradeable.OwnableStorage"
                        },
                        "typeName": {
                          "id": 157,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 156,
                            "name": "OwnableStorage",
                            "nameLocations": [
                              "1244:14:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 151,
                            "src": "1244:14:1"
                          },
                          "referencedDeclaration": 151,
                          "src": "1244:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1243:26:1"
                  },
                  "scope": 331,
                  "src": "1192:159:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 163,
                    "nodeType": "StructuredDocumentation",
                    "src": "1357:85:1",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 167,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "1453:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1488:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 167,
                        "src": "1480:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1480:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1479:17:1"
                  },
                  "src": "1447:50:1"
                },
                {
                  "documentation": {
                    "id": 168,
                    "nodeType": "StructuredDocumentation",
                    "src": "1503:82:1",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 172,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "1596:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 170,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1624:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "1616:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1616:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1615:15:1"
                  },
                  "src": "1590:41:1"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 178,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1643:20:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 174,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1680:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1664:29:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1711:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1695:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1695:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:57:1"
                  },
                  "src": "1637:84:1"
                },
                {
                  "body": {
                    "id": 190,
                    "nodeType": "Block",
                    "src": "1919:55:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 187,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "1954:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 186,
                            "name": "__Ownable_init_unchained",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "1929:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1929:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:38:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 179,
                    "nodeType": "StructuredDocumentation",
                    "src": "1727:115:1",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 191,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 184,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 183,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "1902:16:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 494,
                        "src": "1902:16:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1902:16:1"
                    }
                  ],
                  "name": "__Ownable_init",
                  "nameLocation": "1856:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1879:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "1871:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1871:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1870:22:1"
                  },
                  "returnParameters": {
                    "id": 185,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1919:0:1"
                  },
                  "scope": 331,
                  "src": "1847:127:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 217,
                    "nodeType": "Block",
                    "src": "2062:153:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 198,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "2076:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2100:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2092:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 199,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2092:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2092:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2076:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 212,
                        "nodeType": "IfStatement",
                        "src": "2072:95:1",
                        "trueBody": {
                          "id": 211,
                          "nodeType": "Block",
                          "src": "2104:63:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 207,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2153:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 206,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2145:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 205,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2145:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 208,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2145:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 204,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 172,
                                  "src": "2125:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2125:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 210,
                              "nodeType": "RevertStatement",
                              "src": "2118:38:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 214,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "2195:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 213,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "2176:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2176:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 216,
                        "nodeType": "ExpressionStatement",
                        "src": "2176:32:1"
                      }
                    ]
                  },
                  "id": 218,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 196,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 195,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2045:16:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 494,
                        "src": "2045:16:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2045:16:1"
                    }
                  ],
                  "name": "__Ownable_init_unchained",
                  "nameLocation": "1989:24:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "2022:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "2014:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2014:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2013:22:1"
                  },
                  "returnParameters": {
                    "id": 197,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2062:0:1"
                  },
                  "scope": 331,
                  "src": "1980:235:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 225,
                    "nodeType": "Block",
                    "src": "2324:41:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 221,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 259,
                            "src": "2334:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2334:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 223,
                        "nodeType": "ExpressionStatement",
                        "src": "2334:13:1"
                      },
                      {
                        "id": 224,
                        "nodeType": "PlaceholderStatement",
                        "src": "2357:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 219,
                    "nodeType": "StructuredDocumentation",
                    "src": "2221:77:1",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 226,
                  "name": "onlyOwner",
                  "nameLocation": "2312:9:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2321:2:1"
                  },
                  "src": "2303:62:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 241,
                    "nodeType": "Block",
                    "src": "2496:89:1",
                    "statements": [
                      {
                        "assignments": [
                          234
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 234,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "2529:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 241,
                            "src": "2506:24:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage"
                            },
                            "typeName": {
                              "id": 233,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 232,
                                "name": "OwnableStorage",
                                "nameLocations": [
                                  "2506:14:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 151,
                                "src": "2506:14:1"
                              },
                              "referencedDeclaration": 151,
                              "src": "2506:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 237,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 235,
                            "name": "_getOwnableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "2533:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$151_storage_ptr_$",
                              "typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2533:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2506:47:1"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 238,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "2570:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2572:6:1",
                          "memberName": "_owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 150,
                          "src": "2570:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 231,
                        "id": 240,
                        "nodeType": "Return",
                        "src": "2563:15:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 227,
                    "nodeType": "StructuredDocumentation",
                    "src": "2371:65:1",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 242,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "2450:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2455:2:1"
                  },
                  "returnParameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "2487:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2487:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2486:9:1"
                  },
                  "scope": 331,
                  "src": "2441:144:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 258,
                    "nodeType": "Block",
                    "src": "2703:117:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 246,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "2717:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2717:7:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 248,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "2728:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2728:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2717:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 257,
                        "nodeType": "IfStatement",
                        "src": "2713:101:1",
                        "trueBody": {
                          "id": 256,
                          "nodeType": "Block",
                          "src": "2742:72:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 252,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 613,
                                      "src": "2790:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2790:12:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 251,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 167,
                                  "src": "2763:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2763:40:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 255,
                              "nodeType": "RevertStatement",
                              "src": "2756:47:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 243,
                    "nodeType": "StructuredDocumentation",
                    "src": "2591:62:1",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 259,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "2667:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2678:2:1"
                  },
                  "returnParameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2703:0:1"
                  },
                  "scope": 331,
                  "src": "2658:162:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "3209:47:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 268,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3246:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3238:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 266,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3238:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3238:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 265,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "3219:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3219:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 271,
                        "nodeType": "ExpressionStatement",
                        "src": "3219:30:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "2826:324:1",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 273,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 263,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 262,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3199:9:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 226,
                        "src": "3199:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3199:9:1"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "3164:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3181:2:1"
                  },
                  "returnParameters": {
                    "id": 264,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3209:0:1"
                  },
                  "scope": 331,
                  "src": "3155:101:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 300,
                    "nodeType": "Block",
                    "src": "3475:145:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 281,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "3489:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3509:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3501:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 282,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3501:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3501:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3489:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 295,
                        "nodeType": "IfStatement",
                        "src": "3485:91:1",
                        "trueBody": {
                          "id": 294,
                          "nodeType": "Block",
                          "src": "3513:63:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 290,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3562:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 289,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3554:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 288,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3554:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3554:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 287,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 172,
                                  "src": "3534:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3534:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 293,
                              "nodeType": "RevertStatement",
                              "src": "3527:38:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 297,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 276,
                              "src": "3604:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 296,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "3585:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3585:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 299,
                        "nodeType": "ExpressionStatement",
                        "src": "3585:28:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 274,
                    "nodeType": "StructuredDocumentation",
                    "src": "3262:138:1",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 279,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 278,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3465:9:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 226,
                        "src": "3465:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3465:9:1"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "3414:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 276,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "3440:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "3432:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3432:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3431:18:1"
                  },
                  "returnParameters": {
                    "id": 280,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3475:0:1"
                  },
                  "scope": 331,
                  "src": "3405:215:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 329,
                    "nodeType": "Block",
                    "src": "3837:185:1",
                    "statements": [
                      {
                        "assignments": [
                          309
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 309,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3870:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 329,
                            "src": "3847:24:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage"
                            },
                            "typeName": {
                              "id": 308,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 307,
                                "name": "OwnableStorage",
                                "nameLocations": [
                                  "3847:14:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 151,
                                "src": "3847:14:1"
                              },
                              "referencedDeclaration": 151,
                              "src": "3847:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 312,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 310,
                            "name": "_getOwnableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "3874:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$151_storage_ptr_$",
                              "typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3874:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3847:47:1"
                      },
                      {
                        "assignments": [
                          314
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 314,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "3912:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 329,
                            "src": "3904:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 313,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3904:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 317,
                        "initialValue": {
                          "expression": {
                            "id": 315,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 309,
                            "src": "3923:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3925:6:1",
                          "memberName": "_owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 150,
                          "src": "3923:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3904:27:1"
                      },
                      {
                        "expression": {
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 318,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "3941:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3943:6:1",
                            "memberName": "_owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 150,
                            "src": "3941:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 321,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "3952:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3941:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "3941:19:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 325,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3996:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 326,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "4006:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 324,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "3975:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3975:40:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 328,
                        "nodeType": "EmitStatement",
                        "src": "3970:45:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 302,
                    "nodeType": "StructuredDocumentation",
                    "src": "3626:143:1",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 330,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "3783:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 304,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "3810:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "3802:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3802:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3801:18:1"
                  },
                  "returnParameters": {
                    "id": 306,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3837:0:1"
                  },
                  "scope": 331,
                  "src": "3774:248:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 332,
              "src": "749:3275:1",
              "usedErrors": [
                167,
                172,
                348,
                351
              ],
              "usedEvents": [
                178,
                356
              ]
            }
          ],
          "src": "102:3923:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
          "exportedSymbols": {
            "Initializable": [
              585
            ]
          },
          "id": 586,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 333,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "113:24:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Initializable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 334,
                "nodeType": "StructuredDocumentation",
                "src": "139:2209:2",
                "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
              },
              "fullyImplemented": true,
              "id": 585,
              "linearizedBaseContracts": [
                585
              ],
              "name": "Initializable",
              "nameLocation": "2367:13:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Initializable.InitializableStorage",
                  "documentation": {
                    "id": 335,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:293:2",
                    "text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
                  },
                  "id": 342,
                  "members": [
                    {
                      "constant": false,
                      "id": 338,
                      "mutability": "mutable",
                      "name": "_initialized",
                      "nameLocation": "2820:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "2813:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 337,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2813:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "_initializing",
                      "nameLocation": "2955:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "2950:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2950:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "InitializableStorage",
                  "nameLocation": "2692:20:2",
                  "nodeType": "StructDefinition",
                  "scope": 585,
                  "src": "2685:290:2",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 345,
                  "mutability": "constant",
                  "name": "INITIALIZABLE_STORAGE",
                  "nameLocation": "3123:21:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "3098:115:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3147:66:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
                      "typeString": "int_const 1089...(70 digits omitted)...9600"
                    },
                    "value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "3220:60:2",
                    "text": " @dev The contract is already initialized."
                  },
                  "errorSelector": "f92ee8a9",
                  "id": 348,
                  "name": "InvalidInitialization",
                  "nameLocation": "3291:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3312:2:2"
                  },
                  "src": "3285:30:2"
                },
                {
                  "documentation": {
                    "id": 349,
                    "nodeType": "StructuredDocumentation",
                    "src": "3321:57:2",
                    "text": " @dev The contract is not initializing."
                  },
                  "errorSelector": "d7e6bcf8",
                  "id": 351,
                  "name": "NotInitializing",
                  "nameLocation": "3389:15:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3404:2:2"
                  },
                  "src": "3383:24:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 352,
                    "nodeType": "StructuredDocumentation",
                    "src": "3413:90:2",
                    "text": " @dev Triggered when the contract has been initialized or reinitialized."
                  },
                  "eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
                  "id": 356,
                  "name": "Initialized",
                  "nameLocation": "3514:11:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 354,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "3533:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "3526:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "3526:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3525:16:2"
                  },
                  "src": "3508:34:2"
                },
                {
                  "body": {
                    "id": 438,
                    "nodeType": "Block",
                    "src": "4092:1081:2",
                    "statements": [
                      {
                        "assignments": [
                          361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 361,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4187:1:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 438,
                            "src": "4158:30:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 360,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 359,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "4158:20:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 342,
                                "src": "4158:20:2"
                              },
                              "referencedDeclaration": 342,
                              "src": "4158:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 364,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 362,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "4191:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4191:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4158:59:2"
                      },
                      {
                        "assignments": [
                          366
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 366,
                            "mutability": "mutable",
                            "name": "isTopLevelCall",
                            "nameLocation": "4284:14:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 438,
                            "src": "4279:19:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 365,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4279:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 370,
                        "initialValue": {
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4301:16:2",
                          "subExpression": {
                            "expression": {
                              "id": 367,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "4302:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4304:13:2",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 341,
                            "src": "4302:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4279:38:2"
                      },
                      {
                        "assignments": [
                          372
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 372,
                            "mutability": "mutable",
                            "name": "initialized",
                            "nameLocation": "4334:11:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 438,
                            "src": "4327:18:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 371,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "4327:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 375,
                        "initialValue": {
                          "expression": {
                            "id": 373,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "4348:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4350:12:2",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 338,
                          "src": "4348:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4327:35:2"
                      },
                      {
                        "assignments": [
                          377
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 377,
                            "mutability": "mutable",
                            "name": "initialSetup",
                            "nameLocation": "4711:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 438,
                            "src": "4706:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 376,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4706:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 383,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 378,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "4726:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4741:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4726:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 381,
                            "name": "isTopLevelCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "4746:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4726:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4706:54:2"
                      },
                      {
                        "assignments": [
                          385
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 385,
                            "mutability": "mutable",
                            "name": "construction",
                            "nameLocation": "4775:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 438,
                            "src": "4770:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 384,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4770:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 398,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 386,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "4790:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4805:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4790:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 391,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4818:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Initializable_$585",
                                        "typeString": "contract Initializable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Initializable_$585",
                                        "typeString": "contract Initializable"
                                      }
                                    ],
                                    "id": 390,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4810:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 389,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4810:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 392,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4810:13:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4824:4:2",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "4810:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4829:6:2",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4810:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4839:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4810:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4790:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4770:70:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4855:13:2",
                            "subExpression": {
                              "id": 399,
                              "name": "initialSetup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "4856:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4872:13:2",
                            "subExpression": {
                              "id": 401,
                              "name": "construction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 385,
                              "src": "4873:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4855:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 408,
                        "nodeType": "IfStatement",
                        "src": "4851:91:2",
                        "trueBody": {
                          "id": 407,
                          "nodeType": "Block",
                          "src": "4887:55:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 404,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 348,
                                  "src": "4908:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4908:23:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 406,
                              "nodeType": "RevertStatement",
                              "src": "4901:30:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 409,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "4951:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4953:12:2",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 338,
                            "src": "4951:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4968:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4951:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 414,
                        "nodeType": "ExpressionStatement",
                        "src": "4951:18:2"
                      },
                      {
                        "condition": {
                          "id": 415,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "4983:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 423,
                        "nodeType": "IfStatement",
                        "src": "4979:67:2",
                        "trueBody": {
                          "id": 422,
                          "nodeType": "Block",
                          "src": "4999:47:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 416,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 361,
                                    "src": "5013:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 418,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5015:13:2",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 341,
                                  "src": "5013:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5031:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5013:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 421,
                              "nodeType": "ExpressionStatement",
                              "src": "5013:22:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 424,
                        "nodeType": "PlaceholderStatement",
                        "src": "5055:1:2"
                      },
                      {
                        "condition": {
                          "id": 425,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "5070:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 437,
                        "nodeType": "IfStatement",
                        "src": "5066:101:2",
                        "trueBody": {
                          "id": 436,
                          "nodeType": "Block",
                          "src": "5086:81:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 426,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 361,
                                    "src": "5100:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 428,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5102:13:2",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 341,
                                  "src": "5100:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 429,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5118:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "5100:23:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 431,
                              "nodeType": "ExpressionStatement",
                              "src": "5100:23:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 433,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5154:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 432,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 356,
                                  "src": "5142:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5142:14:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 435,
                              "nodeType": "EmitStatement",
                              "src": "5137:19:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 357,
                    "nodeType": "StructuredDocumentation",
                    "src": "3548:516:2",
                    "text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
                  },
                  "id": 439,
                  "name": "initializer",
                  "nameLocation": "4078:11:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4089:2:2"
                  },
                  "src": "4069:1104:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 485,
                    "nodeType": "Block",
                    "src": "6291:392:2",
                    "statements": [
                      {
                        "assignments": [
                          446
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 446,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "6386:1:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 485,
                            "src": "6357:30:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 445,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 444,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "6357:20:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 342,
                                "src": "6357:20:2"
                              },
                              "referencedDeclaration": 342,
                              "src": "6357:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 449,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 447,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "6390:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6390:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6357:59:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 450,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "6431:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6433:13:2",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 341,
                            "src": "6431:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 452,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 446,
                                "src": "6450:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage storage pointer"
                                }
                              },
                              "id": 453,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6452:12:2",
                              "memberName": "_initialized",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 338,
                              "src": "6450:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 454,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "6468:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "6450:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6431:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 461,
                        "nodeType": "IfStatement",
                        "src": "6427:105:2",
                        "trueBody": {
                          "id": 460,
                          "nodeType": "Block",
                          "src": "6477:55:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 457,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 348,
                                  "src": "6498:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6498:23:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 459,
                              "nodeType": "RevertStatement",
                              "src": "6491:30:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 462,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "6541:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6543:12:2",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 338,
                            "src": "6541:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 465,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "6558:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "6541:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 467,
                        "nodeType": "ExpressionStatement",
                        "src": "6541:24:2"
                      },
                      {
                        "expression": {
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 468,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "6575:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 470,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6577:13:2",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 341,
                            "src": "6575:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6593:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6575:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 473,
                        "nodeType": "ExpressionStatement",
                        "src": "6575:22:2"
                      },
                      {
                        "id": 474,
                        "nodeType": "PlaceholderStatement",
                        "src": "6607:1:2"
                      },
                      {
                        "expression": {
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 475,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "6618:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 477,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6620:13:2",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 341,
                            "src": "6618:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6636:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6618:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 480,
                        "nodeType": "ExpressionStatement",
                        "src": "6618:23:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 482,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "6668:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 481,
                            "name": "Initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "6656:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                              "typeString": "function (uint64)"
                            }
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6656:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 484,
                        "nodeType": "EmitStatement",
                        "src": "6651:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 440,
                    "nodeType": "StructuredDocumentation",
                    "src": "5179:1068:2",
                    "text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
                  },
                  "id": 486,
                  "name": "reinitializer",
                  "nameLocation": "6261:13:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 442,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "6282:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "6275:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "6275:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6274:16:2"
                  },
                  "src": "6252:431:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 493,
                    "nodeType": "Block",
                    "src": "6921:48:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 489,
                            "name": "_checkInitializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 507,
                            "src": "6931:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6931:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 491,
                        "nodeType": "ExpressionStatement",
                        "src": "6931:20:2"
                      },
                      {
                        "id": 492,
                        "nodeType": "PlaceholderStatement",
                        "src": "6961:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 487,
                    "nodeType": "StructuredDocumentation",
                    "src": "6689:199:2",
                    "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
                  },
                  "id": 494,
                  "name": "onlyInitializing",
                  "nameLocation": "6902:16:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 488,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6918:2:2"
                  },
                  "src": "6893:76:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 506,
                    "nodeType": "Block",
                    "src": "7136:89:2",
                    "statements": [
                      {
                        "condition": {
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7150:18:2",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 498,
                              "name": "_isInitializing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 575,
                              "src": "7151:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7151:17:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 505,
                        "nodeType": "IfStatement",
                        "src": "7146:73:2",
                        "trueBody": {
                          "id": 504,
                          "nodeType": "Block",
                          "src": "7170:49:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 501,
                                  "name": "NotInitializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 351,
                                  "src": "7191:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7191:17:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 503,
                              "nodeType": "RevertStatement",
                              "src": "7184:24:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 495,
                    "nodeType": "StructuredDocumentation",
                    "src": "6975:104:2",
                    "text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
                  },
                  "id": 507,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkInitializing",
                  "nameLocation": "7093:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 496,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7111:2:2"
                  },
                  "returnParameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7136:0:2"
                  },
                  "scope": 585,
                  "src": "7084:141:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 552,
                    "nodeType": "Block",
                    "src": "7760:373:2",
                    "statements": [
                      {
                        "assignments": [
                          513
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 513,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "7855:1:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 552,
                            "src": "7826:30:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 512,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 511,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "7826:20:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 342,
                                "src": "7826:20:2"
                              },
                              "referencedDeclaration": 342,
                              "src": "7826:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 516,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 514,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "7859:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7859:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7826:59:2"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 517,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "7900:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7902:13:2",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 341,
                          "src": "7900:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 523,
                        "nodeType": "IfStatement",
                        "src": "7896:76:2",
                        "trueBody": {
                          "id": 522,
                          "nodeType": "Block",
                          "src": "7917:55:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 519,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 348,
                                  "src": "7938:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7938:23:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 521,
                              "nodeType": "RevertStatement",
                              "src": "7931:30:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 524,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 513,
                              "src": "7985:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 525,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7987:12:2",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 338,
                            "src": "7985:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8008:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  },
                                  "typeName": {
                                    "id": 527,
                                    "name": "uint64",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8008:6:2",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  }
                                ],
                                "id": 526,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8003:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8003:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint64",
                                "typeString": "type(uint64)"
                              }
                            },
                            "id": 530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8016:3:2",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8003:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "7985:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 551,
                        "nodeType": "IfStatement",
                        "src": "7981:146:2",
                        "trueBody": {
                          "id": 550,
                          "nodeType": "Block",
                          "src": "8021:106:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 532,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 513,
                                    "src": "8035:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 534,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8037:12:2",
                                  "memberName": "_initialized",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 338,
                                  "src": "8035:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 537,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8057:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        },
                                        "typeName": {
                                          "id": 536,
                                          "name": "uint64",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8057:6:2",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        }
                                      ],
                                      "id": 535,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "8052:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 538,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8052:12:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint64",
                                      "typeString": "type(uint64)"
                                    }
                                  },
                                  "id": 539,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8065:3:2",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "8052:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "8035:33:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 541,
                              "nodeType": "ExpressionStatement",
                              "src": "8035:33:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 545,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "8104:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          },
                                          "typeName": {
                                            "id": 544,
                                            "name": "uint64",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "8104:6:2",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          }
                                        ],
                                        "id": 543,
                                        "name": "type",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -27,
                                        "src": "8099:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 546,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8099:12:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_meta_type_t_uint64",
                                        "typeString": "type(uint64)"
                                      }
                                    },
                                    "id": 547,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "8112:3:2",
                                    "memberName": "max",
                                    "nodeType": "MemberAccess",
                                    "src": "8099:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "id": 542,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 356,
                                  "src": "8087:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8087:29:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 549,
                              "nodeType": "EmitStatement",
                              "src": "8082:34:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 508,
                    "nodeType": "StructuredDocumentation",
                    "src": "7231:475:2",
                    "text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
                  },
                  "id": 553,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_disableInitializers",
                  "nameLocation": "7720:20:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7740:2:2"
                  },
                  "returnParameters": {
                    "id": 510,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7760:0:2"
                  },
                  "scope": 585,
                  "src": "7711:422:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 563,
                    "nodeType": "Block",
                    "src": "8308:63:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 559,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "8325:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8325:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8352:12:2",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 338,
                          "src": "8325:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 558,
                        "id": 562,
                        "nodeType": "Return",
                        "src": "8318:46:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 554,
                    "nodeType": "StructuredDocumentation",
                    "src": "8139:99:2",
                    "text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
                  },
                  "id": 564,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializedVersion",
                  "nameLocation": "8252:22:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 555,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8274:2:2"
                  },
                  "returnParameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 557,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 564,
                        "src": "8300:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 556,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "8300:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8299:8:2"
                  },
                  "scope": 585,
                  "src": "8243:128:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 574,
                    "nodeType": "Block",
                    "src": "8543:64:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 570,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "8560:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8560:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8587:13:2",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 341,
                          "src": "8560:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 569,
                        "id": 573,
                        "nodeType": "Return",
                        "src": "8553:47:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 565,
                    "nodeType": "StructuredDocumentation",
                    "src": "8377:105:2",
                    "text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
                  },
                  "id": 575,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isInitializing",
                  "nameLocation": "8496:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 566,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8511:2:2"
                  },
                  "returnParameters": {
                    "id": 569,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 568,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "8537:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 567,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8537:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8536:6:2"
                  },
                  "scope": 585,
                  "src": "8487:120:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 583,
                    "nodeType": "Block",
                    "src": "8827:80:2",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "8846:55:2",
                          "nodeType": "YulBlock",
                          "src": "8846:55:2",
                          "statements": [
                            {
                              "nativeSrc": "8860:31:2",
                              "nodeType": "YulAssignment",
                              "src": "8860:31:2",
                              "value": {
                                "name": "INITIALIZABLE_STORAGE",
                                "nativeSrc": "8870:21:2",
                                "nodeType": "YulIdentifier",
                                "src": "8870:21:2"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "8860:6:2",
                                  "nodeType": "YulIdentifier",
                                  "src": "8860:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 580,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "8860:6:2",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 345,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8870:21:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 582,
                        "nodeType": "InlineAssembly",
                        "src": "8837:64:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 576,
                    "nodeType": "StructuredDocumentation",
                    "src": "8613:67:2",
                    "text": " @dev Returns a pointer to the storage namespace."
                  },
                  "id": 584,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializableStorage",
                  "nameLocation": "8746:24:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 577,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8770:2:2"
                  },
                  "returnParameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "8824:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "8795:30:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                          "typeString": "struct Initializable.InitializableStorage"
                        },
                        "typeName": {
                          "id": 579,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 578,
                            "name": "InitializableStorage",
                            "nameLocations": [
                              "8795:20:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 342,
                            "src": "8795:20:2"
                          },
                          "referencedDeclaration": 342,
                          "src": "8795:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8794:32:2"
                  },
                  "scope": 585,
                  "src": "8737:170:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 586,
              "src": "2349:6560:2",
              "usedErrors": [
                348,
                351
              ],
              "usedEvents": [
                356
              ]
            }
          ],
          "src": "113:8797:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              631
            ],
            "Initializable": [
              585
            ]
          },
          "id": 632,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 587,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../proxy/utils/Initializable.sol",
              "id": 589,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 632,
              "sourceUnit": 586,
              "src": "126:63:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 588,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 585,
                    "src": "134:13:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 591,
                    "name": "Initializable",
                    "nameLocations": [
                      "728:13:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 585,
                    "src": "728:13:3"
                  },
                  "id": 592,
                  "nodeType": "InheritanceSpecifier",
                  "src": "728:13:3"
                }
              ],
              "canonicalName": "ContextUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 590,
                "nodeType": "StructuredDocumentation",
                "src": "191:496:3",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 631,
              "linearizedBaseContracts": [
                631,
                585
              ],
              "name": "ContextUpgradeable",
              "nameLocation": "706:18:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 597,
                    "nodeType": "Block",
                    "src": "800:7:3",
                    "statements": []
                  },
                  "id": 598,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 595,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 594,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "783:16:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 494,
                        "src": "783:16:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "783:16:3"
                    }
                  ],
                  "name": "__Context_init",
                  "nameLocation": "757:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 593,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "771:2:3"
                  },
                  "returnParameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "800:0:3"
                  },
                  "scope": 631,
                  "src": "748:59:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 603,
                    "nodeType": "Block",
                    "src": "875:7:3",
                    "statements": []
                  },
                  "id": 604,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 601,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 600,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "858:16:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 494,
                        "src": "858:16:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "858:16:3"
                    }
                  ],
                  "name": "__Context_init_unchained",
                  "nameLocation": "822:24:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 599,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "846:2:3"
                  },
                  "returnParameters": {
                    "id": 602,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "875:0:3"
                  },
                  "scope": 631,
                  "src": "813:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 612,
                    "nodeType": "Block",
                    "src": "949:34:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 609,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "966:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "970:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "966:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 608,
                        "id": 611,
                        "nodeType": "Return",
                        "src": "959:17:3"
                      }
                    ]
                  },
                  "id": 613,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "896:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 605,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "906:2:3"
                  },
                  "returnParameters": {
                    "id": 608,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 613,
                        "src": "940:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "939:9:3"
                  },
                  "scope": 631,
                  "src": "887:96:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 621,
                    "nodeType": "Block",
                    "src": "1056:32:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 618,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1073:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1077:4:3",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "1073:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 617,
                        "id": 620,
                        "nodeType": "Return",
                        "src": "1066:15:3"
                      }
                    ]
                  },
                  "id": 622,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "998:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 614,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1006:2:3"
                  },
                  "returnParameters": {
                    "id": 617,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 616,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "1040:14:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 615,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1040:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1039:16:3"
                  },
                  "scope": 631,
                  "src": "989:99:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 629,
                    "nodeType": "Block",
                    "src": "1166:25:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1183:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 626,
                        "id": 628,
                        "nodeType": "Return",
                        "src": "1176:8:3"
                      }
                    ]
                  },
                  "id": 630,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "1103:20:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 623,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1123:2:3"
                  },
                  "returnParameters": {
                    "id": 626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 630,
                        "src": "1157:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1157:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1156:9:3"
                  },
                  "scope": 631,
                  "src": "1094:97:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 632,
              "src": "688:505:3",
              "usedErrors": [
                348,
                351
              ],
              "usedEvents": [
                356
              ]
            }
          ],
          "src": "101:1093:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              709
            ]
          },
          "id": 710,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 633,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 634,
                "nodeType": "StructuredDocumentation",
                "src": "132:70:4",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 709,
              "linearizedBaseContracts": [
                709
              ],
              "name": "IERC20",
              "nameLocation": "213:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 635,
                    "nodeType": "StructuredDocumentation",
                    "src": "226:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 643,
                  "name": "Transfer",
                  "nameLocation": "395:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 642,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 637,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "420:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "404:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 639,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "426:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 641,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "454:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "446:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:57:4"
                  },
                  "src": "389:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 644,
                    "nodeType": "StructuredDocumentation",
                    "src": "467:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 652,
                  "name": "Approval",
                  "nameLocation": "626:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 651,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 646,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "651:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "635:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 645,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 648,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "674:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "658:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 650,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "691:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "683:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 649,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:63:4"
                  },
                  "src": "620:78:4"
                },
                {
                  "documentation": {
                    "id": 653,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 658,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:4"
                  },
                  "returnParameters": {
                    "id": 657,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 656,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 658,
                        "src": "820:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 655,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:4"
                  },
                  "scope": 709,
                  "src": "774:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 659,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 666,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "920:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 661,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "938:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 666,
                        "src": "930:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:4"
                  },
                  "returnParameters": {
                    "id": 665,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 664,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 666,
                        "src": "970:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 663,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:9:4"
                  },
                  "scope": 709,
                  "src": "911:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 667,
                    "nodeType": "StructuredDocumentation",
                    "src": "985:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 676,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1212:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 672,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 669,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1229:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "1221:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 671,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1241:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "1233:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 670,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:27:4"
                  },
                  "returnParameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "1266:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:6:4"
                  },
                  "scope": 709,
                  "src": "1203:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 677,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 686,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1556:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1574:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "1566:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1589:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "1581:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:32:4"
                  },
                  "returnParameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "1621:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1620:9:4"
                  },
                  "scope": 709,
                  "src": "1547:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 687,
                    "nodeType": "StructuredDocumentation",
                    "src": "1636:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 696,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2317:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 689,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2333:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "2325:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "2342:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:32:4"
                  },
                  "returnParameters": {
                    "id": 695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "2375:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:4"
                  },
                  "scope": 709,
                  "src": "2308:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 697,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 708,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2698:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2719:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 708,
                        "src": "2711:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2711:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2733:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 708,
                        "src": "2725:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2745:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 708,
                        "src": "2737:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:41:4"
                  },
                  "returnParameters": {
                    "id": 707,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 706,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 708,
                        "src": "2770:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:6:4"
                  },
                  "scope": 709,
                  "src": "2689:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 710,
              "src": "203:2575:4",
              "usedErrors": [],
              "usedEvents": [
                643,
                652
              ]
            }
          ],
          "src": "106:2673:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "exportedSymbols": {
            "IERC165": [
              838
            ],
            "IERC721": [
              826
            ]
          },
          "id": 827,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 711,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../../utils/introspection/IERC165.sol",
              "id": 713,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 827,
              "sourceUnit": 839,
              "src": "134:62:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 712,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 838,
                    "src": "142:7:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 715,
                    "name": "IERC165",
                    "nameLocations": [
                      "287:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 838,
                    "src": "287:7:5"
                  },
                  "id": 716,
                  "nodeType": "InheritanceSpecifier",
                  "src": "287:7:5"
                }
              ],
              "canonicalName": "IERC721",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 714,
                "nodeType": "StructuredDocumentation",
                "src": "198:67:5",
                "text": " @dev Required interface of an ERC721 compliant contract."
              },
              "fullyImplemented": false,
              "id": 826,
              "linearizedBaseContracts": [
                826,
                838
              ],
              "name": "IERC721",
              "nameLocation": "276:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 717,
                    "nodeType": "StructuredDocumentation",
                    "src": "301:88:5",
                    "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 725,
                  "name": "Transfer",
                  "nameLocation": "400:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 719,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "425:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 725,
                        "src": "409:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "409:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 721,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "447:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 725,
                        "src": "431:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "431:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 723,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "467:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 725,
                        "src": "451:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "451:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "408:67:5"
                  },
                  "src": "394:82:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 726,
                    "nodeType": "StructuredDocumentation",
                    "src": "482:94:5",
                    "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 734,
                  "name": "Approval",
                  "nameLocation": "587:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 733,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 728,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "612:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "596:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "596:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 730,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "635:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "619:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 729,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 732,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "661:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "645:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 731,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "645:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "595:74:5"
                  },
                  "src": "581:89:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 735,
                    "nodeType": "StructuredDocumentation",
                    "src": "676:117:5",
                    "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
                  },
                  "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
                  "id": 743,
                  "name": "ApprovalForAll",
                  "nameLocation": "804:14:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 737,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "835:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "819:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "819:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 739,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "858:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "842:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 738,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "842:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 741,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "873:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "868:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "868:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "818:64:5"
                  },
                  "src": "798:85:5"
                },
                {
                  "documentation": {
                    "id": 744,
                    "nodeType": "StructuredDocumentation",
                    "src": "889:76:5",
                    "text": " @dev Returns the number of tokens in ``owner``'s account."
                  },
                  "functionSelector": "70a08231",
                  "id": 751,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "979:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "997:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 751,
                        "src": "989:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "989:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "988:15:5"
                  },
                  "returnParameters": {
                    "id": 750,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 749,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "1035:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 751,
                        "src": "1027:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 748,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1027:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1026:17:5"
                  },
                  "scope": 826,
                  "src": "970:74:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 752,
                    "nodeType": "StructuredDocumentation",
                    "src": "1050:131:5",
                    "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "6352211e",
                  "id": 759,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ownerOf",
                  "nameLocation": "1195:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 755,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 754,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1211:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 759,
                        "src": "1203:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 753,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1203:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1202:17:5"
                  },
                  "returnParameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1251:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 759,
                        "src": "1243:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1243:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1242:15:5"
                  },
                  "scope": 826,
                  "src": "1186:72:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 760,
                    "nodeType": "StructuredDocumentation",
                    "src": "1264:565:5",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "b88d4fde",
                  "id": 771,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1843:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 769,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 762,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1868:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 771,
                        "src": "1860:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 761,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1860:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 764,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1882:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 771,
                        "src": "1874:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 763,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1874:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 766,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1894:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 771,
                        "src": "1886:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 765,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1886:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 768,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1918:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 771,
                        "src": "1903:19:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 767,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1903:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1859:64:5"
                  },
                  "returnParameters": {
                    "id": 770,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1932:0:5"
                  },
                  "scope": 826,
                  "src": "1834:99:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 772,
                    "nodeType": "StructuredDocumentation",
                    "src": "1939:705:5",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "42842e0e",
                  "id": 781,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "2658:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 779,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 774,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2683:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 781,
                        "src": "2675:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 773,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2675:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 776,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2697:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 781,
                        "src": "2689:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 775,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2689:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 778,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2709:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 781,
                        "src": "2701:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 777,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2701:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2674:43:5"
                  },
                  "returnParameters": {
                    "id": 780,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2726:0:5"
                  },
                  "scope": 826,
                  "src": "2649:78:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 782,
                    "nodeType": "StructuredDocumentation",
                    "src": "2733:732:5",
                    "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 791,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "3479:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 784,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3500:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "3492:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 783,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3492:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 786,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3514:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "3506:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 785,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3506:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 788,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3526:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "3518:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 787,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3518:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3491:43:5"
                  },
                  "returnParameters": {
                    "id": 790,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3543:0:5"
                  },
                  "scope": 826,
                  "src": "3470:74:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 792,
                    "nodeType": "StructuredDocumentation",
                    "src": "3550:452:5",
                    "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 799,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4016:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 797,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 794,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4032:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 799,
                        "src": "4024:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 793,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4024:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 796,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4044:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 799,
                        "src": "4036:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 795,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4036:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4023:29:5"
                  },
                  "returnParameters": {
                    "id": 798,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4061:0:5"
                  },
                  "scope": 826,
                  "src": "4007:55:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 800,
                    "nodeType": "StructuredDocumentation",
                    "src": "4068:315:5",
                    "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
                  },
                  "functionSelector": "a22cb465",
                  "id": 807,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "4397:17:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 805,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 802,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4423:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 807,
                        "src": "4415:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 801,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4415:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 804,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "4438:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 807,
                        "src": "4433:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 803,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4433:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4414:33:5"
                  },
                  "returnParameters": {
                    "id": 806,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4456:0:5"
                  },
                  "scope": 826,
                  "src": "4388:69:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 808,
                    "nodeType": "StructuredDocumentation",
                    "src": "4463:139:5",
                    "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "081812fc",
                  "id": 815,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getApproved",
                  "nameLocation": "4616:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 811,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 810,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4636:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "4628:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 809,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4628:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4627:17:5"
                  },
                  "returnParameters": {
                    "id": 814,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 813,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4676:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "4668:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 812,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4668:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4667:18:5"
                  },
                  "scope": 826,
                  "src": "4607:79:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 816,
                    "nodeType": "StructuredDocumentation",
                    "src": "4692:138:5",
                    "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
                  },
                  "functionSelector": "e985e9c5",
                  "id": 825,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nameLocation": "4844:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 821,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 818,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "4869:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 825,
                        "src": "4861:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4861:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 820,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4884:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 825,
                        "src": "4876:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 819,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4860:33:5"
                  },
                  "returnParameters": {
                    "id": 824,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 823,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 825,
                        "src": "4917:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 822,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4917:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4916:6:5"
                  },
                  "scope": 826,
                  "src": "4835:88:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 827,
              "src": "266:4659:5",
              "usedErrors": [],
              "usedEvents": [
                725,
                734,
                743
              ]
            }
          ],
          "src": "108:4818:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              838
            ]
          },
          "id": 839,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 828,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 829,
                "nodeType": "StructuredDocumentation",
                "src": "141:279:6",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 838,
              "linearizedBaseContracts": [
                838
              ],
              "name": "IERC165",
              "nameLocation": "431:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 830,
                    "nodeType": "StructuredDocumentation",
                    "src": "445:340:6",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 837,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "799:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "824:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "817:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "817:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "816:20:6"
                  },
                  "returnParameters": {
                    "id": 836,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 835,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "860:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 834,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "860:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "859:6:6"
                  },
                  "scope": 838,
                  "src": "790:76:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 839,
              "src": "421:447:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:754:6"
        },
        "id": 6
      },
      "contracts/Errors.sol": {
        "ast": {
          "absolutePath": "contracts/Errors.sol",
          "exportedSymbols": {
            "BidCannotBorrow": [
              854
            ],
            "CannotRedeemFromBid": [
              920
            ],
            "CannotTakeHardOffer": [
              906
            ],
            "CannotTakeSoftOffer": [
              904
            ],
            "CollectionMismatch": [
              858
            ],
            "CurrencyMismatch": [
              856
            ],
            "ERC6492DeployFailed": [
              892
            ],
            "EscrowLocked": [
              902
            ],
            "InsufficientAskAmount": [
              852
            ],
            "InsufficientOffer": [
              878
            ],
            "InvalidAdmin": [
              922
            ],
            "InvalidAssetFactory": [
              894
            ],
            "InvalidCollection": [
              924
            ],
            "InvalidCriteria": [
              862
            ],
            "InvalidEscrow": [
              900
            ],
            "InvalidFee": [
              872
            ],
            "InvalidLien": [
              842
            ],
            "InvalidLoanAmount": [
              876
            ],
            "InvalidLoanOffer": [
              912
            ],
            "InvalidMarketOffer": [
              910
            ],
            "InvalidPermitOfferHash": [
              880
            ],
            "InvalidRate": [
              874
            ],
            "InvalidRebate": [
              916
            ],
            "InvalidRedemptionCharge": [
              928
            ],
            "InvalidSignature": [
              886
            ],
            "InvalidTaker": [
              918
            ],
            "InvalidToken": [
              864
            ],
            "InvalidTokenId": [
              926
            ],
            "InvalidVParameter": [
              888
            ],
            "LienIsCurrent": [
              844
            ],
            "LienIsDefaulted": [
              846
            ],
            "MakerIsNotBorrower": [
              850
            ],
            "OfferExpired": [
              882
            ],
            "OfferUnavailable": [
              884
            ],
            "OnlyKettle": [
              908
            ],
            "PlaceholderAlreadyEscrowed": [
              914
            ],
            "RequiresAskSide": [
              866
            ],
            "RequiresBidSide": [
              868
            ],
            "RequiresNakedBidSide": [
              870
            ],
            "SellerNotAskWhitelisted": [
              896
            ],
            "SellerNotBidWhitelisted": [
              898
            ],
            "TakerIsNotBorrower": [
              848
            ],
            "TokenMismatch": [
              860
            ]
          },
          "id": 929,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 840,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:7"
            },
            {
              "errorSelector": "6946eab7",
              "id": 842,
              "name": "InvalidLien",
              "nameLocation": "64:11:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 841,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "75:2:7"
              },
              "src": "58:20:7"
            },
            {
              "errorSelector": "374871bf",
              "id": 844,
              "name": "LienIsCurrent",
              "nameLocation": "85:13:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 843,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "98:2:7"
              },
              "src": "79:22:7"
            },
            {
              "errorSelector": "2e42ba1f",
              "id": 846,
              "name": "LienIsDefaulted",
              "nameLocation": "108:15:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 845,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "123:2:7"
              },
              "src": "102:24:7"
            },
            {
              "errorSelector": "a616b1bf",
              "id": 848,
              "name": "TakerIsNotBorrower",
              "nameLocation": "134:18:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 847,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "152:2:7"
              },
              "src": "128:27:7"
            },
            {
              "errorSelector": "c6501014",
              "id": 850,
              "name": "MakerIsNotBorrower",
              "nameLocation": "162:18:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 849,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "180:2:7"
              },
              "src": "156:27:7"
            },
            {
              "errorSelector": "e593cc8b",
              "id": 852,
              "name": "InsufficientAskAmount",
              "nameLocation": "190:21:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 851,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "211:2:7"
              },
              "src": "184:30:7"
            },
            {
              "errorSelector": "e962464d",
              "id": 854,
              "name": "BidCannotBorrow",
              "nameLocation": "221:15:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 853,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "236:2:7"
              },
              "src": "215:24:7"
            },
            {
              "errorSelector": "fb42a67d",
              "id": 856,
              "name": "CurrencyMismatch",
              "nameLocation": "247:16:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 855,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "263:2:7"
              },
              "src": "241:25:7"
            },
            {
              "errorSelector": "471e4e12",
              "id": 858,
              "name": "CollectionMismatch",
              "nameLocation": "273:18:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 857,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "291:2:7"
              },
              "src": "267:27:7"
            },
            {
              "errorSelector": "936bb5ad",
              "id": 860,
              "name": "TokenMismatch",
              "nameLocation": "301:13:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 859,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "314:2:7"
              },
              "src": "295:22:7"
            },
            {
              "errorSelector": "206f6fea",
              "id": 862,
              "name": "InvalidCriteria",
              "nameLocation": "325:15:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 861,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "340:2:7"
              },
              "src": "319:24:7"
            },
            {
              "errorSelector": "c1ab6dc1",
              "id": 864,
              "name": "InvalidToken",
              "nameLocation": "350:12:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 863,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "362:2:7"
              },
              "src": "344:21:7"
            },
            {
              "errorSelector": "1be3c2b4",
              "id": 866,
              "name": "RequiresAskSide",
              "nameLocation": "373:15:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 865,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "388:2:7"
              },
              "src": "367:24:7"
            },
            {
              "errorSelector": "ae78b614",
              "id": 868,
              "name": "RequiresBidSide",
              "nameLocation": "398:15:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 867,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "413:2:7"
              },
              "src": "392:24:7"
            },
            {
              "errorSelector": "0603a3e2",
              "id": 870,
              "name": "RequiresNakedBidSide",
              "nameLocation": "423:20:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 869,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "443:2:7"
              },
              "src": "417:29:7"
            },
            {
              "errorSelector": "58d620b3",
              "id": 872,
              "name": "InvalidFee",
              "nameLocation": "454:10:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 871,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "464:2:7"
              },
              "src": "448:19:7"
            },
            {
              "errorSelector": "6a43f8d1",
              "id": 874,
              "name": "InvalidRate",
              "nameLocation": "474:11:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 873,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "485:2:7"
              },
              "src": "468:20:7"
            },
            {
              "errorSelector": "56976661",
              "id": 876,
              "name": "InvalidLoanAmount",
              "nameLocation": "495:17:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 875,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "512:2:7"
              },
              "src": "489:26:7"
            },
            {
              "errorSelector": "cfe9d931",
              "id": 878,
              "name": "InsufficientOffer",
              "nameLocation": "522:17:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 877,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "539:2:7"
              },
              "src": "516:26:7"
            },
            {
              "errorSelector": "fa6077f4",
              "id": 880,
              "name": "InvalidPermitOfferHash",
              "nameLocation": "549:22:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 879,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "571:2:7"
              },
              "src": "543:31:7"
            },
            {
              "errorSelector": "9cb13087",
              "id": 882,
              "name": "OfferExpired",
              "nameLocation": "582:12:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 881,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "594:2:7"
              },
              "src": "576:21:7"
            },
            {
              "errorSelector": "05c934c3",
              "id": 884,
              "name": "OfferUnavailable",
              "nameLocation": "604:16:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 883,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "620:2:7"
              },
              "src": "598:25:7"
            },
            {
              "errorSelector": "8baa579f",
              "id": 886,
              "name": "InvalidSignature",
              "nameLocation": "631:16:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 885,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "647:2:7"
              },
              "src": "625:25:7"
            },
            {
              "errorSelector": "424f4890",
              "id": 888,
              "name": "InvalidVParameter",
              "nameLocation": "657:17:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 887,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "674:2:7"
              },
              "src": "651:26:7"
            },
            {
              "errorSelector": "9d0d6e2d",
              "id": 892,
              "name": "ERC6492DeployFailed",
              "nameLocation": "684:19:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 891,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 890,
                    "mutability": "mutable",
                    "name": "err",
                    "nameLocation": "710:3:7",
                    "nodeType": "VariableDeclaration",
                    "scope": 892,
                    "src": "704:9:7",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 889,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "704:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "703:11:7"
              },
              "src": "678:37:7"
            },
            {
              "errorSelector": "2ba64699",
              "id": 894,
              "name": "InvalidAssetFactory",
              "nameLocation": "723:19:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 893,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "742:2:7"
              },
              "src": "717:28:7"
            },
            {
              "errorSelector": "2eac27e0",
              "id": 896,
              "name": "SellerNotAskWhitelisted",
              "nameLocation": "752:23:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 895,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "775:2:7"
              },
              "src": "746:32:7"
            },
            {
              "errorSelector": "7c5e0f3b",
              "id": 898,
              "name": "SellerNotBidWhitelisted",
              "nameLocation": "785:23:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 897,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "808:2:7"
              },
              "src": "779:32:7"
            },
            {
              "errorSelector": "c4c3834b",
              "id": 900,
              "name": "InvalidEscrow",
              "nameLocation": "819:13:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 899,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "832:2:7"
              },
              "src": "813:22:7"
            },
            {
              "errorSelector": "41fa9bfe",
              "id": 902,
              "name": "EscrowLocked",
              "nameLocation": "842:12:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 901,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "854:2:7"
              },
              "src": "836:21:7"
            },
            {
              "errorSelector": "0119ff4b",
              "id": 904,
              "name": "CannotTakeSoftOffer",
              "nameLocation": "865:19:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 903,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "884:2:7"
              },
              "src": "859:28:7"
            },
            {
              "errorSelector": "3d1b2f79",
              "id": 906,
              "name": "CannotTakeHardOffer",
              "nameLocation": "894:19:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 905,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "913:2:7"
              },
              "src": "888:28:7"
            },
            {
              "errorSelector": "5cc1f30a",
              "id": 908,
              "name": "OnlyKettle",
              "nameLocation": "924:10:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 907,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "934:2:7"
              },
              "src": "918:19:7"
            },
            {
              "errorSelector": "e054df3f",
              "id": 910,
              "name": "InvalidMarketOffer",
              "nameLocation": "945:18:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 909,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "963:2:7"
              },
              "src": "939:27:7"
            },
            {
              "errorSelector": "dcedd97c",
              "id": 912,
              "name": "InvalidLoanOffer",
              "nameLocation": "973:16:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 911,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "989:2:7"
              },
              "src": "967:25:7"
            },
            {
              "errorSelector": "e6e78fc0",
              "id": 914,
              "name": "PlaceholderAlreadyEscrowed",
              "nameLocation": "1000:26:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 913,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1026:2:7"
              },
              "src": "994:35:7"
            },
            {
              "errorSelector": "f212ed48",
              "id": 916,
              "name": "InvalidRebate",
              "nameLocation": "1037:13:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 915,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1050:2:7"
              },
              "src": "1031:22:7"
            },
            {
              "errorSelector": "1f7e75fc",
              "id": 918,
              "name": "InvalidTaker",
              "nameLocation": "1061:12:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 917,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1073:2:7"
              },
              "src": "1055:21:7"
            },
            {
              "errorSelector": "98f74859",
              "id": 920,
              "name": "CannotRedeemFromBid",
              "nameLocation": "1084:19:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 919,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1103:2:7"
              },
              "src": "1078:28:7"
            },
            {
              "errorSelector": "b5eba9f0",
              "id": 922,
              "name": "InvalidAdmin",
              "nameLocation": "1113:12:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 921,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1125:2:7"
              },
              "src": "1107:21:7"
            },
            {
              "errorSelector": "a2e2e542",
              "id": 924,
              "name": "InvalidCollection",
              "nameLocation": "1135:17:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 923,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1152:2:7"
              },
              "src": "1129:26:7"
            },
            {
              "errorSelector": "3f6cc768",
              "id": 926,
              "name": "InvalidTokenId",
              "nameLocation": "1162:14:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 925,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1176:2:7"
              },
              "src": "1156:23:7"
            },
            {
              "errorSelector": "e803a883",
              "id": 928,
              "name": "InvalidRedemptionCharge",
              "nameLocation": "1186:23:7",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 927,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1209:2:7"
              },
              "src": "1180:32:7"
            }
          ],
          "src": "32:1181:7"
        },
        "id": 7
      },
      "contracts/EscrowController.sol": {
        "ast": {
          "absolutePath": "contracts/EscrowController.sol",
          "exportedSymbols": {
            "Asset": [
              1632
            ],
            "BidCannotBorrow": [
              854
            ],
            "CannotRedeemFromBid": [
              920
            ],
            "CannotTakeHardOffer": [
              906
            ],
            "CannotTakeSoftOffer": [
              904
            ],
            "Collateral": [
              1490
            ],
            "CollectionMismatch": [
              858
            ],
            "Criteria": [
              1451
            ],
            "CurrencyMismatch": [
              856
            ],
            "ERC6492DeployFailed": [
              892
            ],
            "Escrow": [
              1609
            ],
            "EscrowController": [
              1405
            ],
            "EscrowLocked": [
              902
            ],
            "FeeTerms": [
              1495
            ],
            "IERC20": [
              709
            ],
            "IERC721": [
              826
            ],
            "IEscrowController": [
              1732
            ],
            "Initializable": [
              585
            ],
            "InsufficientAskAmount": [
              852
            ],
            "InsufficientOffer": [
              878
            ],
            "InvalidAdmin": [
              922
            ],
            "InvalidAssetFactory": [
              894
            ],
            "InvalidCollection": [
              924
            ],
            "InvalidCriteria": [
              862
            ],
            "InvalidEscrow": [
              900
            ],
            "InvalidFee": [
              872
            ],
            "InvalidLien": [
              842
            ],
            "InvalidLoanAmount": [
              876
            ],
            "InvalidLoanOffer": [
              912
            ],
            "InvalidMarketOffer": [
              910
            ],
            "InvalidPermitOfferHash": [
              880
            ],
            "InvalidRate": [
              874
            ],
            "InvalidRebate": [
              916
            ],
            "InvalidRedemptionCharge": [
              928
            ],
            "InvalidSignature": [
              886
            ],
            "InvalidTaker": [
              918
            ],
            "InvalidToken": [
              864
            ],
            "InvalidTokenId": [
              926
            ],
            "InvalidVParameter": [
              888
            ],
            "KettleAccess": [
              1439
            ],
            "Lien": [
              1481
            ],
            "LienIsCurrent": [
              844
            ],
            "LienIsDefaulted": [
              846
            ],
            "LoanOffer": [
              1539
            ],
            "LoanOfferTerms": [
              1513
            ],
            "MakerIsNotBorrower": [
              850
            ],
            "MarketOffer": [
              1573
            ],
            "MarketOfferTerms": [
              1547
            ],
            "OfferExpired": [
              882
            ],
            "OfferKind": [
              1448
            ],
            "OfferUnavailable": [
              884
            ],
            "OnlyKettle": [
              908
            ],
            "Ownable2StepUpgradeable": [
              136
            ],
            "OwnableUpgradeable": [
              331
            ],
            "PlaceholderAlreadyEscrowed": [
              914
            ],
            "RedemptionCharge": [
              1626
            ],
            "RequiresAskSide": [
              866
            ],
            "RequiresBidSide": [
              868
            ],
            "RequiresNakedBidSide": [
              870
            ],
            "SellerNotAskWhitelisted": [
              896
            ],
            "SellerNotBidWhitelisted": [
              898
            ],
            "Side": [
              1454
            ],
            "TakerIsNotBorrower": [
              848
            ],
            "TokenMismatch": [
              860
            ]
          },
          "id": 1406,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 930,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "id": 931,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1406,
              "sourceUnit": 586,
              "src": "65:75:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
              "id": 932,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1406,
              "sourceUnit": 137,
              "src": "141:80:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IEscrowController.sol",
              "file": "./interfaces/IEscrowController.sol",
              "id": 933,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1406,
              "sourceUnit": 1733,
              "src": "223:44:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/KettleAccess.sol",
              "file": "./KettleAccess.sol",
              "id": 934,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1406,
              "sourceUnit": 1440,
              "src": "269:28:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Structs.sol",
              "file": "./Structs.sol",
              "id": 935,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1406,
              "sourceUnit": 1633,
              "src": "299:23:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Errors.sol",
              "file": "./Errors.sol",
              "id": 936,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1406,
              "sourceUnit": 929,
              "src": "323:22:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 937,
                    "name": "IEscrowController",
                    "nameLocations": [
                      "376:17:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1732,
                    "src": "376:17:8"
                  },
                  "id": 938,
                  "nodeType": "InheritanceSpecifier",
                  "src": "376:17:8"
                },
                {
                  "baseName": {
                    "id": 939,
                    "name": "Initializable",
                    "nameLocations": [
                      "395:13:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 585,
                    "src": "395:13:8"
                  },
                  "id": 940,
                  "nodeType": "InheritanceSpecifier",
                  "src": "395:13:8"
                },
                {
                  "baseName": {
                    "id": 941,
                    "name": "Ownable2StepUpgradeable",
                    "nameLocations": [
                      "410:23:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 136,
                    "src": "410:23:8"
                  },
                  "id": 942,
                  "nodeType": "InheritanceSpecifier",
                  "src": "410:23:8"
                },
                {
                  "baseName": {
                    "id": 943,
                    "name": "KettleAccess",
                    "nameLocations": [
                      "435:12:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1439,
                    "src": "435:12:8"
                  },
                  "id": 944,
                  "nodeType": "InheritanceSpecifier",
                  "src": "435:12:8"
                }
              ],
              "canonicalName": "EscrowController",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1405,
              "linearizedBaseContracts": [
                1405,
                1439,
                136,
                331,
                631,
                585,
                1732
              ],
              "name": "EscrowController",
              "nameLocation": "356:16:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1640
                  ],
                  "constant": false,
                  "functionSelector": "7c6e610d",
                  "id": 946,
                  "mutability": "mutable",
                  "name": "TOKEN_SUPPLIER",
                  "nameLocation": "469:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "454:29:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2811e6bb",
                  "id": 948,
                  "mutability": "mutable",
                  "name": "escrowIndex",
                  "nameLocation": "505:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "490:26:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0d668087",
                  "id": 950,
                  "mutability": "mutable",
                  "name": "lockTime",
                  "nameLocation": "537:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "522:23:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4b4687b5",
                  "id": 952,
                  "mutability": "mutable",
                  "name": "whitelistOnly",
                  "nameLocation": "563:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "551:25:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "551:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "012f52ee",
                  "id": 956,
                  "mutability": "mutable",
                  "name": "escrows",
                  "nameLocation": "618:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "583:42:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                    "typeString": "mapping(uint256 => bytes32)"
                  },
                  "typeName": {
                    "id": 955,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 953,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "591:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "583:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                      "typeString": "mapping(uint256 => bytes32)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 954,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "602:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f4be779c",
                  "id": 960,
                  "mutability": "mutable",
                  "name": "escrowedTokens",
                  "nameLocation": "663:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "631:46:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 959,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 957,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "639:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "631:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 958,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "650:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c22e54a1",
                  "id": 964,
                  "mutability": "mutable",
                  "name": "whitelistedAskMakers",
                  "nameLocation": "715:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "683:52:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 963,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 961,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "691:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "683:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 962,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "702:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "55d8525e",
                  "id": 968,
                  "mutability": "mutable",
                  "name": "whitelistedBidTakers",
                  "nameLocation": "773:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "741:52:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 967,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 965,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "749:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "741:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 966,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "760:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "_gap",
                  "nameLocation": "820:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "800:24:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$50_storage",
                    "typeString": "uint256[50]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 969,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "800:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 971,
                    "length": {
                      "hexValue": "3530",
                      "id": 970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "808:2:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "800:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                      "typeString": "uint256[50]"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 998,
                    "nodeType": "Block",
                    "src": "898:158:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 979,
                            "name": "__Ownable2Step_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "908:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "908:21:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 981,
                        "nodeType": "ExpressionStatement",
                        "src": "908:21:8"
                      },
                      {
                        "expression": {
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 982,
                            "name": "escrowIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "940:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "954:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "940:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 985,
                        "nodeType": "ExpressionStatement",
                        "src": "940:15:8"
                      },
                      {
                        "expression": {
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 986,
                            "name": "lockTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 950,
                            "src": "965:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3330",
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "976:7:8",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2592000_by_1",
                              "typeString": "int_const 2592000"
                            },
                            "value": "30"
                          },
                          "src": "965:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 989,
                        "nodeType": "ExpressionStatement",
                        "src": "965:18:8"
                      },
                      {
                        "expression": {
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 990,
                            "name": "whitelistOnly",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 952,
                            "src": "993:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1009:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "993:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 993,
                        "nodeType": "ExpressionStatement",
                        "src": "993:20:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 995,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 974,
                              "src": "1043:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 994,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              111
                            ],
                            "referencedDeclaration": 111,
                            "src": "1024:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1024:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "1024:25:8"
                      }
                    ]
                  },
                  "functionSelector": "490b4846",
                  "id": 999,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 977,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 976,
                        "name": "initializer",
                        "nameLocations": [
                          "886:11:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 439,
                        "src": "886:11:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "886:11:8"
                    }
                  ],
                  "name": "__EscrowController_init",
                  "nameLocation": "840:23:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 975,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 974,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "872:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 999,
                        "src": "864:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 973,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "864:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "863:15:8"
                  },
                  "returnParameters": {
                    "id": 978,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "898:0:8"
                  },
                  "scope": 1405,
                  "src": "831:225:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1010,
                    "nodeType": "Block",
                    "src": "1237:48:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1006,
                            "name": "TOKEN_SUPPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "1247:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1007,
                            "name": "_tokenSupplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "1264:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1247:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1009,
                        "nodeType": "ExpressionStatement",
                        "src": "1247:31:8"
                      }
                    ]
                  },
                  "functionSelector": "4bf1b68d",
                  "id": 1011,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1004,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1003,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1227:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 226,
                        "src": "1227:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1227:9:8"
                    }
                  ],
                  "name": "setTokenSupplier",
                  "nameLocation": "1177:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1002,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1001,
                        "mutability": "mutable",
                        "name": "_tokenSupplier",
                        "nameLocation": "1202:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1011,
                        "src": "1194:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1194:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1193:24:8"
                  },
                  "returnParameters": {
                    "id": 1005,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1237:0:8"
                  },
                  "scope": 1405,
                  "src": "1168:117:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1022,
                    "nodeType": "Block",
                    "src": "1345:32:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1018,
                            "name": "lockTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 950,
                            "src": "1355:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1019,
                            "name": "time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "1366:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1355:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1021,
                        "nodeType": "ExpressionStatement",
                        "src": "1355:15:8"
                      }
                    ]
                  },
                  "functionSelector": "ae04d45d",
                  "id": 1023,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1016,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1015,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1335:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 226,
                        "src": "1335:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1335:9:8"
                    }
                  ],
                  "name": "setLockTime",
                  "nameLocation": "1300:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1014,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1013,
                        "mutability": "mutable",
                        "name": "time",
                        "nameLocation": "1320:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1023,
                        "src": "1312:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1012,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1312:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1311:14:8"
                  },
                  "returnParameters": {
                    "id": 1017,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1345:0:8"
                  },
                  "scope": 1405,
                  "src": "1291:86:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1034,
                    "nodeType": "Block",
                    "src": "1449:47:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1030,
                            "name": "whitelistOnly",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 952,
                            "src": "1459:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1031,
                            "name": "_whitelistOnly",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "1475:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1459:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1033,
                        "nodeType": "ExpressionStatement",
                        "src": "1459:30:8"
                      }
                    ]
                  },
                  "functionSelector": "ea05a8c6",
                  "id": 1035,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1028,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1027,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1439:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 226,
                        "src": "1439:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1439:9:8"
                    }
                  ],
                  "name": "setWhitelistOnly",
                  "nameLocation": "1392:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1025,
                        "mutability": "mutable",
                        "name": "_whitelistOnly",
                        "nameLocation": "1414:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "1409:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1024,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1409:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1408:21:8"
                  },
                  "returnParameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1449:0:8"
                  },
                  "scope": 1405,
                  "src": "1383:113:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1055,
                    "nodeType": "Block",
                    "src": "1582:110:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1044,
                              "name": "whitelistedAskMakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 964,
                              "src": "1592:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1046,
                            "indexExpression": {
                              "id": 1045,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1037,
                              "src": "1613:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1592:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1047,
                            "name": "whitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "1621:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1592:40:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1049,
                        "nodeType": "ExpressionStatement",
                        "src": "1592:40:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1051,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1037,
                              "src": "1667:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1052,
                              "name": "whitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1039,
                              "src": "1673:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1050,
                            "name": "AskMakerWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1719,
                            "src": "1647:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1647:38:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1054,
                        "nodeType": "EmitStatement",
                        "src": "1642:43:8"
                      }
                    ]
                  },
                  "functionSelector": "53ae9739",
                  "id": 1056,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1042,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1041,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1572:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 226,
                        "src": "1572:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1572:9:8"
                    }
                  ],
                  "name": "whitelistedAskMaker",
                  "nameLocation": "1511:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1040,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1037,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1539:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1056,
                        "src": "1531:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1531:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1039,
                        "mutability": "mutable",
                        "name": "whitelisted",
                        "nameLocation": "1550:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1056,
                        "src": "1545:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1545:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1530:32:8"
                  },
                  "returnParameters": {
                    "id": 1043,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1582:0:8"
                  },
                  "scope": 1405,
                  "src": "1502:190:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1076,
                    "nodeType": "Block",
                    "src": "1776:110:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1065,
                              "name": "whitelistedBidTakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "1786:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1067,
                            "indexExpression": {
                              "id": 1066,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1058,
                              "src": "1807:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1786:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1068,
                            "name": "whitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1060,
                            "src": "1815:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1786:40:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1070,
                        "nodeType": "ExpressionStatement",
                        "src": "1786:40:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1072,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1058,
                              "src": "1861:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1073,
                              "name": "whitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1060,
                              "src": "1867:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1071,
                            "name": "BidTakerWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1725,
                            "src": "1841:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1841:38:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1075,
                        "nodeType": "EmitStatement",
                        "src": "1836:43:8"
                      }
                    ]
                  },
                  "functionSelector": "6ba2700e",
                  "id": 1077,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1063,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1062,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1766:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 226,
                        "src": "1766:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1766:9:8"
                    }
                  ],
                  "name": "whitelistBidTaker",
                  "nameLocation": "1707:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1058,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1733:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "1725:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1725:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1060,
                        "mutability": "mutable",
                        "name": "whitelisted",
                        "nameLocation": "1744:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "1739:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1059,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1739:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1724:32:8"
                  },
                  "returnParameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1776:0:8"
                  },
                  "scope": 1405,
                  "src": "1698:188:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1097,
                    "nodeType": "Block",
                    "src": "1973:112:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1086,
                              "name": "escrowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "1983:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 1088,
                            "indexExpression": {
                              "id": 1087,
                              "name": "placeholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "1998:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1983:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1089,
                            "name": "escrowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1081,
                            "src": "2013:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1983:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1091,
                        "nodeType": "ExpressionStatement",
                        "src": "1983:38:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1093,
                              "name": "placeholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "2056:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1094,
                              "name": "escrowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1081,
                              "src": "2069:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1092,
                            "name": "PlaceholderEscrowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1731,
                            "src": "2036:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,bool)"
                            }
                          },
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2036:42:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1096,
                        "nodeType": "EmitStatement",
                        "src": "2031:47:8"
                      }
                    ]
                  },
                  "functionSelector": "f8b963b1",
                  "id": 1098,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1084,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1083,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1963:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 226,
                        "src": "1963:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1963:9:8"
                    }
                  ],
                  "name": "setEscrowedToken",
                  "nameLocation": "1901:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1082,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1079,
                        "mutability": "mutable",
                        "name": "placeholder",
                        "nameLocation": "1926:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1098,
                        "src": "1918:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1078,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1918:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1081,
                        "mutability": "mutable",
                        "name": "escrowed",
                        "nameLocation": "1944:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1098,
                        "src": "1939:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1080,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1939:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1917:36:8"
                  },
                  "returnParameters": {
                    "id": 1085,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1973:0:8"
                  },
                  "scope": 1405,
                  "src": "1892:193:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1662
                  ],
                  "body": {
                    "id": 1248,
                    "nodeType": "Block",
                    "src": "2505:1493:8",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 1122,
                            "name": "escrowedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "2519:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 1124,
                          "indexExpression": {
                            "id": 1123,
                            "name": "placeholder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1100,
                            "src": "2534:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2519:27:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1128,
                        "nodeType": "IfStatement",
                        "src": "2515:68:8",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1125,
                              "name": "PlaceholderAlreadyEscrowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "2555:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2555:28:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1127,
                          "nodeType": "RevertStatement",
                          "src": "2548:35:8"
                        }
                      },
                      {
                        "condition": {
                          "id": 1129,
                          "name": "whitelistOnly",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 952,
                          "src": "2598:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1159,
                        "nodeType": "IfStatement",
                        "src": "2594:243:8",
                        "trueBody": {
                          "id": 1158,
                          "nodeType": "Block",
                          "src": "2613:224:8",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_Side_$1454",
                                    "typeString": "enum Side"
                                  },
                                  "id": 1134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1130,
                                      "name": "offer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1115,
                                      "src": "2631:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_MarketOffer_$1573_calldata_ptr",
                                        "typeString": "struct MarketOffer calldata"
                                      }
                                    },
                                    "id": 1131,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2637:4:8",
                                    "memberName": "side",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1555,
                                    "src": "2631:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Side_$1454",
                                      "typeString": "enum Side"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1132,
                                      "name": "Side",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1454,
                                      "src": "2645:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Side_$1454_$",
                                        "typeString": "type(enum Side)"
                                      }
                                    },
                                    "id": 1133,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2650:3:8",
                                    "memberName": "ASK",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1453,
                                    "src": "2645:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Side_$1454",
                                      "typeString": "enum Side"
                                    }
                                  },
                                  "src": "2631:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "id": 1138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "2657:29:8",
                                  "subExpression": {
                                    "baseExpression": {
                                      "id": 1135,
                                      "name": "whitelistedAskMakers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 964,
                                      "src": "2658:20:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 1137,
                                    "indexExpression": {
                                      "id": 1136,
                                      "name": "seller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1112,
                                      "src": "2679:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2658:28:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2631:55:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1143,
                              "nodeType": "IfStatement",
                              "src": "2627:93:8",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1140,
                                    "name": "SellerNotAskWhitelisted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 896,
                                    "src": "2695:23:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 1141,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2695:25:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1142,
                                "nodeType": "RevertStatement",
                                "src": "2688:32:8"
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_Side_$1454",
                                    "typeString": "enum Side"
                                  },
                                  "id": 1148,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1144,
                                      "name": "offer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1115,
                                      "src": "2738:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_MarketOffer_$1573_calldata_ptr",
                                        "typeString": "struct MarketOffer calldata"
                                      }
                                    },
                                    "id": 1145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2744:4:8",
                                    "memberName": "side",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1555,
                                    "src": "2738:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Side_$1454",
                                      "typeString": "enum Side"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1146,
                                      "name": "Side",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1454,
                                      "src": "2752:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Side_$1454_$",
                                        "typeString": "type(enum Side)"
                                      }
                                    },
                                    "id": 1147,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2757:3:8",
                                    "memberName": "BID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1452,
                                    "src": "2752:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Side_$1454",
                                      "typeString": "enum Side"
                                    }
                                  },
                                  "src": "2738:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "id": 1152,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "2764:28:8",
                                  "subExpression": {
                                    "baseExpression": {
                                      "id": 1149,
                                      "name": "whitelistedBidTakers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 968,
                                      "src": "2765:20:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 1151,
                                    "indexExpression": {
                                      "id": 1150,
                                      "name": "buyer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1110,
                                      "src": "2786:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2765:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2738:54:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1157,
                              "nodeType": "IfStatement",
                              "src": "2734:92:8",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1154,
                                    "name": "SellerNotBidWhitelisted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 898,
                                    "src": "2801:23:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 1155,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2801:25:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1156,
                                "nodeType": "RevertStatement",
                                "src": "2794:32:8"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2851:15:8",
                            "subExpression": {
                              "id": 1160,
                              "name": "withRedemption",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1104,
                              "src": "2852:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1162,
                              "name": "redemptionCharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1108,
                              "src": "2870:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2889:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2870:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2851:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1169,
                        "nodeType": "IfStatement",
                        "src": "2847:77:8",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1166,
                              "name": "InvalidRedemptionCharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "2899:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2899:25:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1168,
                          "nodeType": "RevertStatement",
                          "src": "2892:32:8"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1170,
                              "name": "withRedemption",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1104,
                              "src": "2938:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1171,
                                "name": "redemptionCharge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1108,
                                "src": "2956:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2976:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2956:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2938:39:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1175,
                              "name": "redemptionHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1106,
                              "src": "2981:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3007:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2999:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 1176,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2999:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2999:10:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "2981:28:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2938:71:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1185,
                        "nodeType": "IfStatement",
                        "src": "2934:109:8",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1182,
                              "name": "InvalidRedemptionCharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "3018:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3018:25:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1184,
                          "nodeType": "RevertStatement",
                          "src": "3011:32:8"
                        }
                      },
                      {
                        "assignments": [
                          1188
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1188,
                            "mutability": "mutable",
                            "name": "escrow",
                            "nameLocation": "3068:6:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1248,
                            "src": "3054:20:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                              "typeString": "struct Escrow"
                            },
                            "typeName": {
                              "id": 1187,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1186,
                                "name": "Escrow",
                                "nameLocations": [
                                  "3054:6:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1609,
                                "src": "3054:6:8"
                              },
                              "referencedDeclaration": 1609,
                              "src": "3054:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                                "typeString": "struct Escrow"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1221,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1190,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1115,
                                "src": "3104:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketOffer_$1573_calldata_ptr",
                                  "typeString": "struct MarketOffer calldata"
                                }
                              },
                              "id": 1191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3110:4:8",
                              "memberName": "side",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1555,
                              "src": "3104:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$1454",
                                "typeString": "enum Side"
                              }
                            },
                            {
                              "id": 1192,
                              "name": "placeholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1100,
                              "src": "3141:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1193,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1110,
                              "src": "3173:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1194,
                              "name": "seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "3200:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1195,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1115,
                                  "src": "3232:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MarketOffer_$1573_calldata_ptr",
                                    "typeString": "struct MarketOffer calldata"
                                  }
                                },
                                "id": 1196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3238:10:8",
                                "memberName": "collateral",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1562,
                                "src": "3232:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Collateral_$1490_calldata_ptr",
                                  "typeString": "struct Collateral calldata"
                                }
                              },
                              "id": 1197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3249:10:8",
                              "memberName": "collection",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1487,
                              "src": "3232:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$826",
                                "typeString": "contract IERC721"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1198,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1115,
                                  "src": "3285:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MarketOffer_$1573_calldata_ptr",
                                    "typeString": "struct MarketOffer calldata"
                                  }
                                },
                                "id": 1199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3291:10:8",
                                "memberName": "collateral",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1562,
                                "src": "3285:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Collateral_$1490_calldata_ptr",
                                  "typeString": "struct Collateral calldata"
                                }
                              },
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3302:10:8",
                              "memberName": "identifier",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1489,
                              "src": "3285:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1201,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1115,
                                  "src": "3336:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MarketOffer_$1573_calldata_ptr",
                                    "typeString": "struct MarketOffer calldata"
                                  }
                                },
                                "id": 1202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3342:5:8",
                                "memberName": "terms",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1565,
                                "src": "3336:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketOfferTerms_$1547_calldata_ptr",
                                  "typeString": "struct MarketOfferTerms calldata"
                                }
                              },
                              "id": 1203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3348:8:8",
                              "memberName": "currency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1542,
                              "src": "3336:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$709",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1204,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1115,
                                  "src": "3378:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MarketOffer_$1573_calldata_ptr",
                                    "typeString": "struct MarketOffer calldata"
                                  }
                                },
                                "id": 1205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3384:5:8",
                                "memberName": "terms",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1565,
                                "src": "3378:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketOfferTerms_$1547_calldata_ptr",
                                  "typeString": "struct MarketOfferTerms calldata"
                                }
                              },
                              "id": 1206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3390:6:8",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1544,
                              "src": "3378:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1207,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1115,
                                  "src": "3421:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MarketOffer_$1573_calldata_ptr",
                                    "typeString": "struct MarketOffer calldata"
                                  }
                                },
                                "id": 1208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3427:3:8",
                                "memberName": "fee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1568,
                                "src": "3421:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FeeTerms_$1495_calldata_ptr",
                                  "typeString": "struct FeeTerms calldata"
                                }
                              },
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3431:9:8",
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1492,
                              "src": "3421:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1210,
                                  "name": "offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1115,
                                  "src": "3459:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MarketOffer_$1573_calldata_ptr",
                                    "typeString": "struct MarketOffer calldata"
                                  }
                                },
                                "id": 1211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3465:3:8",
                                "memberName": "fee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1568,
                                "src": "3459:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FeeTerms_$1495_calldata_ptr",
                                  "typeString": "struct FeeTerms calldata"
                                }
                              },
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3469:4:8",
                              "memberName": "rate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1494,
                              "src": "3459:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1213,
                              "name": "rebate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "3495:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1214,
                              "name": "withRedemption",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1104,
                              "src": "3531:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1215,
                              "name": "redemptionHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1106,
                              "src": "3575:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1216,
                              "name": "redemptionCharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1108,
                              "src": "3621:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1217,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3662:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3668:9:8",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3662:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1219,
                              "name": "lockTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 950,
                              "src": "3701:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Side_$1454",
                                "typeString": "enum Side"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC721_$826",
                                "typeString": "contract IERC721"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$709",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1189,
                            "name": "Escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1609,
                            "src": "3077:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Escrow_$1609_storage_ptr_$",
                              "typeString": "type(struct Escrow storage pointer)"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "3098:4:8",
                            "3128:11:8",
                            "3166:5:8",
                            "3192:6:8",
                            "3220:10:8",
                            "3273:10:8",
                            "3326:8:8",
                            "3370:6:8",
                            "3410:9:8",
                            "3454:3:8",
                            "3487:6:8",
                            "3515:14:8",
                            "3559:14:8",
                            "3603:16:8",
                            "3651:9:8",
                            "3691:8:8"
                          ],
                          "names": [
                            "side",
                            "placeholder",
                            "buyer",
                            "seller",
                            "collection",
                            "identifier",
                            "currency",
                            "amount",
                            "recipient",
                            "fee",
                            "rebate",
                            "withRedemption",
                            "redemptionHash",
                            "redemptionCharge",
                            "timestamp",
                            "lockTime"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "3077:643:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                            "typeString": "struct Escrow memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3054:666:8"
                      },
                      {
                        "id": 1227,
                        "nodeType": "UncheckedBlock",
                        "src": "3731:59:8",
                        "statements": [
                          {
                            "expression": {
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1222,
                                "name": "escrowId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1120,
                                "src": "3755:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 1224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3766:13:8",
                                "subExpression": {
                                  "id": 1223,
                                  "name": "escrowIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 948,
                                  "src": "3766:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3755:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1226,
                            "nodeType": "ExpressionStatement",
                            "src": "3755:24:8"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1228,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "3800:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 1230,
                            "indexExpression": {
                              "id": 1229,
                              "name": "escrowIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 948,
                              "src": "3808:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3800:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1232,
                                "name": "escrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1188,
                                "src": "3835:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                  "typeString": "struct Escrow memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                  "typeString": "struct Escrow memory"
                                }
                              ],
                              "id": 1231,
                              "name": "_hashEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "3823:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Escrow_$1609_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct Escrow memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3823:19:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3800:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1235,
                        "nodeType": "ExpressionStatement",
                        "src": "3800:42:8"
                      },
                      {
                        "expression": {
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1236,
                              "name": "escrowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "3852:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 1238,
                            "indexExpression": {
                              "id": 1237,
                              "name": "placeholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1100,
                              "src": "3867:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3852:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3882:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3852:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1241,
                        "nodeType": "ExpressionStatement",
                        "src": "3852:34:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "3939:13:8",
                              "subExpression": {
                                "id": 1243,
                                "name": "escrowIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 948,
                                "src": "3939:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1245,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1188,
                              "src": "3974:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                "typeString": "struct Escrow memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                "typeString": "struct Escrow memory"
                              }
                            ],
                            "id": 1242,
                            "name": "EscrowOpened",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1697,
                            "src": "3902:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_Escrow_$1609_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct Escrow memory)"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "3929:8:8",
                            "3966:6:8"
                          ],
                          "names": [
                            "escrowId",
                            "escrow"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "3902:89:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1247,
                        "nodeType": "EmitStatement",
                        "src": "3897:94:8"
                      }
                    ]
                  },
                  "functionSelector": "89d8b82d",
                  "id": 1249,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1118,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1117,
                        "name": "onlyKettle",
                        "nameLocations": [
                          "2467:10:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1438,
                        "src": "2467:10:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2467:10:8"
                    }
                  ],
                  "name": "openEscrow",
                  "nameLocation": "2210:10:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1116,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1100,
                        "mutability": "mutable",
                        "name": "placeholder",
                        "nameLocation": "2238:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "2230:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1099,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2230:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "rebate",
                        "nameLocation": "2267:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "2259:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2259:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1104,
                        "mutability": "mutable",
                        "name": "withRedemption",
                        "nameLocation": "2288:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "2283:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1103,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2283:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "redemptionHash",
                        "nameLocation": "2320:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "2312:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2312:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1108,
                        "mutability": "mutable",
                        "name": "redemptionCharge",
                        "nameLocation": "2352:16:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "2344:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1107,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1110,
                        "mutability": "mutable",
                        "name": "buyer",
                        "nameLocation": "2386:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "2378:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1109,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2378:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1112,
                        "mutability": "mutable",
                        "name": "seller",
                        "nameLocation": "2409:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "2401:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2401:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1115,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "2446:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "2425:26:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketOffer_$1573_calldata_ptr",
                          "typeString": "struct MarketOffer"
                        },
                        "typeName": {
                          "id": 1114,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1113,
                            "name": "MarketOffer",
                            "nameLocations": [
                              "2425:11:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1573,
                            "src": "2425:11:8"
                          },
                          "referencedDeclaration": 1573,
                          "src": "2425:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketOffer_$1573_storage_ptr",
                            "typeString": "struct MarketOffer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2220:237:8"
                  },
                  "returnParameters": {
                    "id": 1121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1120,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "2495:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "2487:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2487:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2486:18:8"
                  },
                  "scope": 1405,
                  "src": "2201:1797:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1672
                  ],
                  "body": {
                    "id": 1275,
                    "nodeType": "Block",
                    "src": "4135:111:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4145:24:8",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1265,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "4152:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 1267,
                            "indexExpression": {
                              "id": 1266,
                              "name": "escrowId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1251,
                              "src": "4160:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4152:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1269,
                        "nodeType": "ExpressionStatement",
                        "src": "4145:24:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1271,
                              "name": "escrowId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1251,
                              "src": "4210:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1272,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1256,
                              "src": "4229:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1270,
                            "name": "EscrowSettled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1703,
                            "src": "4184:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "4200:8:8",
                            "4220:7:8"
                          ],
                          "names": [
                            "escrowId",
                            "tokenId"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4184:55:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1274,
                        "nodeType": "EmitStatement",
                        "src": "4179:60:8"
                      }
                    ]
                  },
                  "functionSelector": "40d30854",
                  "id": 1276,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1259,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1258,
                        "name": "onlyKettle",
                        "nameLocations": [
                          "4094:10:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1438,
                        "src": "4094:10:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4094:10:8"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1261,
                          "name": "escrowId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1251,
                          "src": "4117:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1262,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "4127:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_calldata_ptr",
                            "typeString": "struct Escrow calldata"
                          }
                        }
                      ],
                      "id": 1263,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1260,
                        "name": "validEscrow",
                        "nameLocations": [
                          "4105:11:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1385,
                        "src": "4105:11:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4105:29:8"
                    }
                  ],
                  "name": "settleEscrow",
                  "nameLocation": "4013:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1251,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "4034:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1276,
                        "src": "4026:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1250,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4026:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1254,
                        "mutability": "mutable",
                        "name": "escrow",
                        "nameLocation": "4060:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1276,
                        "src": "4044:22:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$1609_calldata_ptr",
                          "typeString": "struct Escrow"
                        },
                        "typeName": {
                          "id": 1253,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1252,
                            "name": "Escrow",
                            "nameLocations": [
                              "4044:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1609,
                            "src": "4044:6:8"
                          },
                          "referencedDeclaration": 1609,
                          "src": "4044:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                            "typeString": "struct Escrow"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1256,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4076:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1276,
                        "src": "4068:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4068:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4025:59:8"
                  },
                  "returnParameters": {
                    "id": 1264,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4135:0:8"
                  },
                  "scope": 1405,
                  "src": "4004:242:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1680
                  ],
                  "body": {
                    "id": 1302,
                    "nodeType": "Block",
                    "src": "4388:93:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4398:24:8",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1293,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "4405:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 1295,
                            "indexExpression": {
                              "id": 1294,
                              "name": "escrowId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1278,
                              "src": "4413:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4405:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1297,
                        "nodeType": "ExpressionStatement",
                        "src": "4398:24:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1299,
                              "name": "escrowId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1278,
                              "src": "4463:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1298,
                            "name": "EscrowClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1707,
                            "src": "4437:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "4453:8:8"
                          ],
                          "names": [
                            "escrowId"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4437:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1301,
                        "nodeType": "EmitStatement",
                        "src": "4432:42:8"
                      }
                    ]
                  },
                  "functionSelector": "13569cfd",
                  "id": 1303,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1284,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1283,
                        "name": "onlyKettle",
                        "nameLocations": [
                          "4324:10:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1438,
                        "src": "4324:10:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4324:10:8"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1286,
                          "name": "escrowId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1278,
                          "src": "4347:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1287,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1281,
                          "src": "4357:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_calldata_ptr",
                            "typeString": "struct Escrow calldata"
                          }
                        }
                      ],
                      "id": 1288,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1285,
                        "name": "validEscrow",
                        "nameLocations": [
                          "4335:11:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1385,
                        "src": "4335:11:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4335:29:8"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1290,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1281,
                          "src": "4380:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_calldata_ptr",
                            "typeString": "struct Escrow calldata"
                          }
                        }
                      ],
                      "id": 1291,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1289,
                        "name": "escrowUnlocked",
                        "nameLocations": [
                          "4365:14:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1404,
                        "src": "4365:14:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4365:22:8"
                    }
                  ],
                  "name": "claimEscrow",
                  "nameLocation": "4261:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1278,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "4281:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "4273:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1277,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4273:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1281,
                        "mutability": "mutable",
                        "name": "escrow",
                        "nameLocation": "4307:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "4291:22:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$1609_calldata_ptr",
                          "typeString": "struct Escrow"
                        },
                        "typeName": {
                          "id": 1280,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1279,
                            "name": "Escrow",
                            "nameLocations": [
                              "4291:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1609,
                            "src": "4291:6:8"
                          },
                          "referencedDeclaration": 1609,
                          "src": "4291:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                            "typeString": "struct Escrow"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4272:42:8"
                  },
                  "returnParameters": {
                    "id": 1292,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4388:0:8"
                  },
                  "scope": 1405,
                  "src": "4252:229:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1690
                  ],
                  "body": {
                    "id": 1329,
                    "nodeType": "Block",
                    "src": "4620:124:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4630:24:8",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1319,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "4637:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 1321,
                            "indexExpression": {
                              "id": 1320,
                              "name": "escrowId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "4645:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4637:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1323,
                        "nodeType": "ExpressionStatement",
                        "src": "4630:24:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1325,
                              "name": "escrowId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "4696:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1326,
                              "name": "returnRebate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1310,
                              "src": "4722:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1324,
                            "name": "EscrowRejected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1713,
                            "src": "4669:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,bool)"
                            }
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "4686:8:8",
                            "4706:14:8"
                          ],
                          "names": [
                            "escrowId",
                            "rebateReturned"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4669:68:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1328,
                        "nodeType": "EmitStatement",
                        "src": "4664:73:8"
                      }
                    ]
                  },
                  "functionSelector": "36cede41",
                  "id": 1330,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1313,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1312,
                        "name": "onlyKettle",
                        "nameLocations": [
                          "4579:10:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1438,
                        "src": "4579:10:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4579:10:8"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1315,
                          "name": "escrowId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1305,
                          "src": "4602:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1316,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1308,
                          "src": "4612:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_calldata_ptr",
                            "typeString": "struct Escrow calldata"
                          }
                        }
                      ],
                      "id": 1317,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1314,
                        "name": "validEscrow",
                        "nameLocations": [
                          "4590:11:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1385,
                        "src": "4590:11:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4590:29:8"
                    }
                  ],
                  "name": "rejectEscrow",
                  "nameLocation": "4496:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1305,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "4517:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1330,
                        "src": "4509:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1304,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4509:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1308,
                        "mutability": "mutable",
                        "name": "escrow",
                        "nameLocation": "4543:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1330,
                        "src": "4527:22:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$1609_calldata_ptr",
                          "typeString": "struct Escrow"
                        },
                        "typeName": {
                          "id": 1307,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1306,
                            "name": "Escrow",
                            "nameLocations": [
                              "4527:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1609,
                            "src": "4527:6:8"
                          },
                          "referencedDeclaration": 1609,
                          "src": "4527:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                            "typeString": "struct Escrow"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1310,
                        "mutability": "mutable",
                        "name": "returnRebate",
                        "nameLocation": "4556:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1330,
                        "src": "4551:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1309,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4551:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4508:61:8"
                  },
                  "returnParameters": {
                    "id": 1318,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4620:0:8"
                  },
                  "scope": 1405,
                  "src": "4487:257:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1344,
                    "nodeType": "Block",
                    "src": "4830:44:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1338,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1336,
                            "src": "4840:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1340,
                                "name": "escrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1333,
                                "src": "4860:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                  "typeString": "struct Escrow memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                  "typeString": "struct Escrow memory"
                                }
                              ],
                              "id": 1339,
                              "name": "_hashEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "4848:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Escrow_$1609_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct Escrow memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4848:19:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4840:27:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1343,
                        "nodeType": "ExpressionStatement",
                        "src": "4840:27:8"
                      }
                    ]
                  },
                  "functionSelector": "85b81116",
                  "id": 1345,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hashEscrow",
                  "nameLocation": "4759:10:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1333,
                        "mutability": "mutable",
                        "name": "escrow",
                        "nameLocation": "4784:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1345,
                        "src": "4770:20:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                          "typeString": "struct Escrow"
                        },
                        "typeName": {
                          "id": 1332,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1331,
                            "name": "Escrow",
                            "nameLocations": [
                              "4770:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1609,
                            "src": "4770:6:8"
                          },
                          "referencedDeclaration": 1609,
                          "src": "4770:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                            "typeString": "struct Escrow"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4769:22:8"
                  },
                  "returnParameters": {
                    "id": 1337,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1336,
                        "mutability": "mutable",
                        "name": "_hash",
                        "nameLocation": "4823:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1345,
                        "src": "4815:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1335,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4815:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4814:15:8"
                  },
                  "scope": 1405,
                  "src": "4750:124:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1362,
                    "nodeType": "Block",
                    "src": "5067:54:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1353,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1351,
                            "src": "5077:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1357,
                                    "name": "escrow",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1348,
                                    "src": "5106:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                      "typeString": "struct Escrow memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                      "typeString": "struct Escrow memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1355,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5095:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "5099:6:8",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "5095:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5095:18:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1354,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5085:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5085:29:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5077:37:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1361,
                        "nodeType": "ExpressionStatement",
                        "src": "5077:37:8"
                      }
                    ]
                  },
                  "id": 1363,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_hashEscrow",
                  "nameLocation": "4995:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "escrow",
                        "nameLocation": "5021:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1363,
                        "src": "5007:20:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                          "typeString": "struct Escrow"
                        },
                        "typeName": {
                          "id": 1347,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1346,
                            "name": "Escrow",
                            "nameLocations": [
                              "5007:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1609,
                            "src": "5007:6:8"
                          },
                          "referencedDeclaration": 1609,
                          "src": "5007:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                            "typeString": "struct Escrow"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5006:22:8"
                  },
                  "returnParameters": {
                    "id": 1352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1351,
                        "mutability": "mutable",
                        "name": "_hash",
                        "nameLocation": "5060:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1363,
                        "src": "5052:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1350,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5052:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5051:15:8"
                  },
                  "scope": 1405,
                  "src": "4986:135:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1384,
                    "nodeType": "Block",
                    "src": "5296:99:8",
                    "statements": [
                      {
                        "condition": {
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5310:43:8",
                          "subExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 1376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1370,
                                    "name": "escrows",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 956,
                                    "src": "5312:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                      "typeString": "mapping(uint256 => bytes32)"
                                    }
                                  },
                                  "id": 1372,
                                  "indexExpression": {
                                    "id": 1371,
                                    "name": "escrowId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1365,
                                    "src": "5320:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5312:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 1374,
                                      "name": "escrow",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1368,
                                      "src": "5345:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                        "typeString": "struct Escrow memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                        "typeString": "struct Escrow memory"
                                      }
                                    ],
                                    "id": 1373,
                                    "name": "_hashEscrow",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1363,
                                    "src": "5333:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_struct$_Escrow_$1609_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (struct Escrow memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5333:19:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "5312:40:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1377,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5311:42:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1382,
                        "nodeType": "IfStatement",
                        "src": "5306:71:8",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1379,
                              "name": "InvalidEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 900,
                              "src": "5362:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5362:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1381,
                          "nodeType": "RevertStatement",
                          "src": "5355:22:8"
                        }
                      },
                      {
                        "id": 1383,
                        "nodeType": "PlaceholderStatement",
                        "src": "5387:1:8"
                      }
                    ]
                  },
                  "id": 1385,
                  "name": "validEscrow",
                  "nameLocation": "5244:11:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1365,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "5264:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1385,
                        "src": "5256:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1364,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5256:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1368,
                        "mutability": "mutable",
                        "name": "escrow",
                        "nameLocation": "5288:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1385,
                        "src": "5274:20:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                          "typeString": "struct Escrow"
                        },
                        "typeName": {
                          "id": 1367,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1366,
                            "name": "Escrow",
                            "nameLocations": [
                              "5274:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1609,
                            "src": "5274:6:8"
                          },
                          "referencedDeclaration": 1609,
                          "src": "5274:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                            "typeString": "struct Escrow"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5255:40:8"
                  },
                  "src": "5235:160:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1403,
                    "nodeType": "Block",
                    "src": "5447:106:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1390,
                                "name": "escrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1388,
                                "src": "5460:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                  "typeString": "struct Escrow memory"
                                }
                              },
                              "id": 1391,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5467:9:8",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1606,
                              "src": "5460:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 1392,
                                "name": "escrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1388,
                                "src": "5479:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                                  "typeString": "struct Escrow memory"
                                }
                              },
                              "id": 1393,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5486:8:8",
                              "memberName": "lockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1608,
                              "src": "5479:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5460:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 1395,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5497:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5503:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5497:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5460:52:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1401,
                        "nodeType": "IfStatement",
                        "src": "5457:78:8",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1398,
                              "name": "EscrowLocked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 902,
                              "src": "5521:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5521:14:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1400,
                          "nodeType": "RevertStatement",
                          "src": "5514:21:8"
                        }
                      },
                      {
                        "id": 1402,
                        "nodeType": "PlaceholderStatement",
                        "src": "5545:1:8"
                      }
                    ]
                  },
                  "id": 1404,
                  "name": "escrowUnlocked",
                  "nameLocation": "5410:14:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1388,
                        "mutability": "mutable",
                        "name": "escrow",
                        "nameLocation": "5439:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1404,
                        "src": "5425:20:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                          "typeString": "struct Escrow"
                        },
                        "typeName": {
                          "id": 1387,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1386,
                            "name": "Escrow",
                            "nameLocations": [
                              "5425:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1609,
                            "src": "5425:6:8"
                          },
                          "referencedDeclaration": 1609,
                          "src": "5425:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                            "typeString": "struct Escrow"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5424:22:8"
                  },
                  "src": "5401:152:8",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1406,
              "src": "347:5208:8",
              "usedErrors": [
                167,
                172,
                348,
                351,
                896,
                898,
                900,
                902,
                908,
                914,
                928
              ],
              "usedEvents": [
                31,
                178,
                356,
                1697,
                1703,
                1707,
                1713,
                1719,
                1725,
                1731
              ]
            }
          ],
          "src": "39:5517:8"
        },
        "id": 8
      },
      "contracts/KettleAccess.sol": {
        "ast": {
          "absolutePath": "contracts/KettleAccess.sol",
          "exportedSymbols": {
            "BidCannotBorrow": [
              854
            ],
            "CannotRedeemFromBid": [
              920
            ],
            "CannotTakeHardOffer": [
              906
            ],
            "CannotTakeSoftOffer": [
              904
            ],
            "CollectionMismatch": [
              858
            ],
            "CurrencyMismatch": [
              856
            ],
            "ERC6492DeployFailed": [
              892
            ],
            "EscrowLocked": [
              902
            ],
            "Initializable": [
              585
            ],
            "InsufficientAskAmount": [
              852
            ],
            "InsufficientOffer": [
              878
            ],
            "InvalidAdmin": [
              922
            ],
            "InvalidAssetFactory": [
              894
            ],
            "InvalidCollection": [
              924
            ],
            "InvalidCriteria": [
              862
            ],
            "InvalidEscrow": [
              900
            ],
            "InvalidFee": [
              872
            ],
            "InvalidLien": [
              842
            ],
            "InvalidLoanAmount": [
              876
            ],
            "InvalidLoanOffer": [
              912
            ],
            "InvalidMarketOffer": [
              910
            ],
            "InvalidPermitOfferHash": [
              880
            ],
            "InvalidRate": [
              874
            ],
            "InvalidRebate": [
              916
            ],
            "InvalidRedemptionCharge": [
              928
            ],
            "InvalidSignature": [
              886
            ],
            "InvalidTaker": [
              918
            ],
            "InvalidToken": [
              864
            ],
            "InvalidTokenId": [
              926
            ],
            "InvalidVParameter": [
              888
            ],
            "KettleAccess": [
              1439
            ],
            "LienIsCurrent": [
              844
            ],
            "LienIsDefaulted": [
              846
            ],
            "MakerIsNotBorrower": [
              850
            ],
            "OfferExpired": [
              882
            ],
            "OfferUnavailable": [
              884
            ],
            "OnlyKettle": [
              908
            ],
            "Ownable2StepUpgradeable": [
              136
            ],
            "OwnableUpgradeable": [
              331
            ],
            "PlaceholderAlreadyEscrowed": [
              914
            ],
            "RequiresAskSide": [
              866
            ],
            "RequiresBidSide": [
              868
            ],
            "RequiresNakedBidSide": [
              870
            ],
            "SellerNotAskWhitelisted": [
              896
            ],
            "SellerNotBidWhitelisted": [
              898
            ],
            "TakerIsNotBorrower": [
              848
            ],
            "TokenMismatch": [
              860
            ]
          },
          "id": 1440,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1407,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
              "id": 1408,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1440,
              "sourceUnit": 137,
              "src": "58:80:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Errors.sol",
              "file": "./Errors.sol",
              "id": 1409,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1440,
              "sourceUnit": 929,
              "src": "139:22:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1410,
                    "name": "Ownable2StepUpgradeable",
                    "nameLocations": [
                      "188:23:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 136,
                    "src": "188:23:9"
                  },
                  "id": 1411,
                  "nodeType": "InheritanceSpecifier",
                  "src": "188:23:9"
                }
              ],
              "canonicalName": "KettleAccess",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1439,
              "linearizedBaseContracts": [
                1439,
                136,
                331,
                631,
                585
              ],
              "name": "KettleAccess",
              "nameLocation": "172:12:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "fd91d7cd",
                  "id": 1413,
                  "mutability": "mutable",
                  "name": "kettle",
                  "nameLocation": "234:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "219:21:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1424,
                    "nodeType": "Block",
                    "src": "302:33:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1420,
                            "name": "kettle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1413,
                            "src": "312:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1421,
                            "name": "_kettle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "321:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "312:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1423,
                        "nodeType": "ExpressionStatement",
                        "src": "312:16:9"
                      }
                    ]
                  },
                  "functionSelector": "b7840369",
                  "id": 1425,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1418,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1417,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "283:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 226,
                        "src": "283:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "283:9:9"
                    }
                  ],
                  "name": "setKettle",
                  "nameLocation": "256:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1415,
                        "mutability": "mutable",
                        "name": "_kettle",
                        "nameLocation": "274:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1425,
                        "src": "266:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1414,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "266:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "265:17:9"
                  },
                  "returnParameters": {
                    "id": 1419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "302:0:9"
                  },
                  "scope": 1439,
                  "src": "247:88:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1437,
                    "nodeType": "Block",
                    "src": "363:97:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1427,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "377:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "381:6:9",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "377:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1429,
                            "name": "kettle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1413,
                            "src": "391:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "377:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1435,
                        "nodeType": "IfStatement",
                        "src": "373:70:9",
                        "trueBody": {
                          "id": 1434,
                          "nodeType": "Block",
                          "src": "399:44:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1431,
                                  "name": "OnlyKettle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 908,
                                  "src": "420:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "420:12:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1433,
                              "nodeType": "RevertStatement",
                              "src": "413:19:9"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1436,
                        "nodeType": "PlaceholderStatement",
                        "src": "452:1:9"
                      }
                    ]
                  },
                  "id": 1438,
                  "name": "onlyKettle",
                  "nameLocation": "350:10:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1426,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "360:2:9"
                  },
                  "src": "341:119:9",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1440,
              "src": "163:299:9",
              "usedErrors": [
                167,
                172,
                348,
                351
              ],
              "usedEvents": [
                31,
                178,
                356
              ]
            }
          ],
          "src": "32:431:9"
        },
        "id": 9
      },
      "contracts/Structs.sol": {
        "ast": {
          "absolutePath": "contracts/Structs.sol",
          "exportedSymbols": {
            "Asset": [
              1632
            ],
            "Collateral": [
              1490
            ],
            "Criteria": [
              1451
            ],
            "Escrow": [
              1609
            ],
            "FeeTerms": [
              1495
            ],
            "IERC20": [
              709
            ],
            "IERC721": [
              826
            ],
            "Lien": [
              1481
            ],
            "LoanOffer": [
              1539
            ],
            "LoanOfferTerms": [
              1513
            ],
            "MarketOffer": [
              1573
            ],
            "MarketOfferTerms": [
              1547
            ],
            "OfferKind": [
              1448
            ],
            "RedemptionCharge": [
              1626
            ],
            "Side": [
              1454
            ]
          },
          "id": 1633,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1441,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1443,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1633,
              "sourceUnit": 710,
              "src": "58:72:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1442,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 709,
                    "src": "67:6:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "id": 1445,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1633,
              "sourceUnit": 827,
              "src": "131:75:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1444,
                    "name": "IERC721",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 826,
                    "src": "140:7:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "canonicalName": "OfferKind",
              "id": 1448,
              "members": [
                {
                  "id": 1446,
                  "name": "LOAN",
                  "nameLocation": "225:4:10",
                  "nodeType": "EnumValue",
                  "src": "225:4:10"
                },
                {
                  "id": 1447,
                  "name": "MARKET",
                  "nameLocation": "231:6:10",
                  "nodeType": "EnumValue",
                  "src": "231:6:10"
                }
              ],
              "name": "OfferKind",
              "nameLocation": "213:9:10",
              "nodeType": "EnumDefinition",
              "src": "208:31:10"
            },
            {
              "canonicalName": "Criteria",
              "id": 1451,
              "members": [
                {
                  "id": 1449,
                  "name": "SIMPLE",
                  "nameLocation": "256:6:10",
                  "nodeType": "EnumValue",
                  "src": "256:6:10"
                },
                {
                  "id": 1450,
                  "name": "PROOF",
                  "nameLocation": "264:5:10",
                  "nodeType": "EnumValue",
                  "src": "264:5:10"
                }
              ],
              "name": "Criteria",
              "nameLocation": "245:8:10",
              "nodeType": "EnumDefinition",
              "src": "240:31:10"
            },
            {
              "canonicalName": "Side",
              "id": 1454,
              "members": [
                {
                  "id": 1452,
                  "name": "BID",
                  "nameLocation": "284:3:10",
                  "nodeType": "EnumValue",
                  "src": "284:3:10"
                },
                {
                  "id": 1453,
                  "name": "ASK",
                  "nameLocation": "289:3:10",
                  "nodeType": "EnumValue",
                  "src": "289:3:10"
                }
              ],
              "name": "Side",
              "nameLocation": "277:4:10",
              "nodeType": "EnumDefinition",
              "src": "272:22:10"
            },
            {
              "canonicalName": "Lien",
              "id": 1481,
              "members": [
                {
                  "constant": false,
                  "id": 1456,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "322:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "314:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1459,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "344:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "336:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$826",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1458,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1457,
                      "name": "IERC721",
                      "nameLocations": [
                        "336:7:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 826,
                      "src": "336:7:10"
                    },
                    "referencedDeclaration": 826,
                    "src": "336:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$826",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1461,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "368:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "360:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1464,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "388:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "381:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$709",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1463,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1462,
                      "name": "IERC20",
                      "nameLocations": [
                        "381:6:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 709,
                      "src": "381:6:10"
                    },
                    "referencedDeclaration": 709,
                    "src": "381:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$709",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1466,
                  "mutability": "mutable",
                  "name": "principal",
                  "nameLocation": "410:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "402:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "402:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1468,
                  "mutability": "mutable",
                  "name": "rate",
                  "nameLocation": "433:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "425:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "425:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1470,
                  "mutability": "mutable",
                  "name": "defaultRate",
                  "nameLocation": "451:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "443:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1472,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "476:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "468:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1474,
                  "mutability": "mutable",
                  "name": "gracePeriod",
                  "nameLocation": "498:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "490:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1476,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "523:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "515:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1478,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "546:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "538:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1480,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "563:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "555:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "555:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Lien",
              "nameLocation": "303:4:10",
              "nodeType": "StructDefinition",
              "scope": 1633,
              "src": "296:279:10",
              "visibility": "public"
            },
            {
              "canonicalName": "Collateral",
              "id": 1490,
              "members": [
                {
                  "constant": false,
                  "id": 1484,
                  "mutability": "mutable",
                  "name": "criteria",
                  "nameLocation": "610:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1490,
                  "src": "601:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Criteria_$1451",
                    "typeString": "enum Criteria"
                  },
                  "typeName": {
                    "id": 1483,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1482,
                      "name": "Criteria",
                      "nameLocations": [
                        "601:8:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1451,
                      "src": "601:8:10"
                    },
                    "referencedDeclaration": 1451,
                    "src": "601:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Criteria_$1451",
                      "typeString": "enum Criteria"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "632:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1490,
                  "src": "624:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$826",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1486,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1485,
                      "name": "IERC721",
                      "nameLocations": [
                        "624:7:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 826,
                      "src": "624:7:10"
                    },
                    "referencedDeclaration": 826,
                    "src": "624:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$826",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1489,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "656:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1490,
                  "src": "648:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Collateral",
              "nameLocation": "584:10:10",
              "nodeType": "StructDefinition",
              "scope": 1633,
              "src": "577:92:10",
              "visibility": "public"
            },
            {
              "canonicalName": "FeeTerms",
              "id": 1495,
              "members": [
                {
                  "constant": false,
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "701:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1495,
                  "src": "693:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1494,
                  "mutability": "mutable",
                  "name": "rate",
                  "nameLocation": "724:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1495,
                  "src": "716:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "FeeTerms",
              "nameLocation": "678:8:10",
              "nodeType": "StructDefinition",
              "scope": 1633,
              "src": "671:60:10",
              "visibility": "public"
            },
            {
              "canonicalName": "LoanOfferTerms",
              "id": 1513,
              "members": [
                {
                  "constant": false,
                  "id": 1498,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "874:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1513,
                  "src": "867:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$709",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1497,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1496,
                      "name": "IERC20",
                      "nameLocations": [
                        "867:6:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 709,
                      "src": "867:6:10"
                    },
                    "referencedDeclaration": 709,
                    "src": "867:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$709",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1500,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "896:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1513,
                  "src": "888:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1502,
                  "mutability": "mutable",
                  "name": "maxAmount",
                  "nameLocation": "916:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1513,
                  "src": "908:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1504,
                  "mutability": "mutable",
                  "name": "minAmount",
                  "nameLocation": "939:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1513,
                  "src": "931:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1506,
                  "mutability": "mutable",
                  "name": "rate",
                  "nameLocation": "962:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1513,
                  "src": "954:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1508,
                  "mutability": "mutable",
                  "name": "defaultRate",
                  "nameLocation": "980:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1513,
                  "src": "972:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1510,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "1005:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1513,
                  "src": "997:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1512,
                  "mutability": "mutable",
                  "name": "gracePeriod",
                  "nameLocation": "1027:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1513,
                  "src": "1019:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "LoanOfferTerms",
              "nameLocation": "846:14:10",
              "nodeType": "StructDefinition",
              "scope": 1633,
              "src": "839:202:10",
              "visibility": "public"
            },
            {
              "canonicalName": "LoanOffer",
              "id": 1539,
              "members": [
                {
                  "constant": false,
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "kind",
                  "nameLocation": "1076:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "1066:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OfferKind_$1448",
                    "typeString": "enum OfferKind"
                  },
                  "typeName": {
                    "id": 1515,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1514,
                      "name": "OfferKind",
                      "nameLocations": [
                        "1066:9:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1448,
                      "src": "1066:9:10"
                    },
                    "referencedDeclaration": 1448,
                    "src": "1066:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferKind_$1448",
                      "typeString": "enum OfferKind"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1518,
                  "mutability": "mutable",
                  "name": "soft",
                  "nameLocation": "1091:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "1086:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1521,
                  "mutability": "mutable",
                  "name": "side",
                  "nameLocation": "1106:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "1101:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$1454",
                    "typeString": "enum Side"
                  },
                  "typeName": {
                    "id": 1520,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1519,
                      "name": "Side",
                      "nameLocations": [
                        "1101:4:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1454,
                      "src": "1101:4:10"
                    },
                    "referencedDeclaration": 1454,
                    "src": "1101:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$1454",
                      "typeString": "enum Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1523,
                  "mutability": "mutable",
                  "name": "maker",
                  "nameLocation": "1124:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "1116:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1525,
                  "mutability": "mutable",
                  "name": "taker",
                  "nameLocation": "1143:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "1135:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1528,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "1165:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "1154:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Collateral_$1490_storage_ptr",
                    "typeString": "struct Collateral"
                  },
                  "typeName": {
                    "id": 1527,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1526,
                      "name": "Collateral",
                      "nameLocations": [
                        "1154:10:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1490,
                      "src": "1154:10:10"
                    },
                    "referencedDeclaration": 1490,
                    "src": "1154:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collateral_$1490_storage_ptr",
                      "typeString": "struct Collateral"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1531,
                  "mutability": "mutable",
                  "name": "terms",
                  "nameLocation": "1196:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "1181:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanOfferTerms_$1513_storage_ptr",
                    "typeString": "struct LoanOfferTerms"
                  },
                  "typeName": {
                    "id": 1530,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1529,
                      "name": "LoanOfferTerms",
                      "nameLocations": [
                        "1181:14:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1513,
                      "src": "1181:14:10"
                    },
                    "referencedDeclaration": 1513,
                    "src": "1181:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanOfferTerms_$1513_storage_ptr",
                      "typeString": "struct LoanOfferTerms"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1534,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1216:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "1207:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FeeTerms_$1495_storage_ptr",
                    "typeString": "struct FeeTerms"
                  },
                  "typeName": {
                    "id": 1533,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1532,
                      "name": "FeeTerms",
                      "nameLocations": [
                        "1207:8:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1495,
                      "src": "1207:8:10"
                    },
                    "referencedDeclaration": 1495,
                    "src": "1207:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FeeTerms_$1495_storage_ptr",
                      "typeString": "struct FeeTerms"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1536,
                  "mutability": "mutable",
                  "name": "expiration",
                  "nameLocation": "1233:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "1225:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1538,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1257:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "1249:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "LoanOffer",
              "nameLocation": "1050:9:10",
              "nodeType": "StructDefinition",
              "scope": 1633,
              "src": "1043:221:10",
              "visibility": "public"
            },
            {
              "canonicalName": "MarketOfferTerms",
              "id": 1547,
              "members": [
                {
                  "constant": false,
                  "id": 1542,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "1411:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "1404:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$709",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1541,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1540,
                      "name": "IERC20",
                      "nameLocations": [
                        "1404:6:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 709,
                      "src": "1404:6:10"
                    },
                    "referencedDeclaration": 709,
                    "src": "1404:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$709",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1433:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "1425:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1546,
                  "mutability": "mutable",
                  "name": "rebate",
                  "nameLocation": "1453:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "1445:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "MarketOfferTerms",
              "nameLocation": "1381:16:10",
              "nodeType": "StructDefinition",
              "scope": 1633,
              "src": "1374:88:10",
              "visibility": "public"
            },
            {
              "canonicalName": "MarketOffer",
              "id": 1573,
              "members": [
                {
                  "constant": false,
                  "id": 1550,
                  "mutability": "mutable",
                  "name": "kind",
                  "nameLocation": "1499:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1489:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OfferKind_$1448",
                    "typeString": "enum OfferKind"
                  },
                  "typeName": {
                    "id": 1549,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1548,
                      "name": "OfferKind",
                      "nameLocations": [
                        "1489:9:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1448,
                      "src": "1489:9:10"
                    },
                    "referencedDeclaration": 1448,
                    "src": "1489:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferKind_$1448",
                      "typeString": "enum OfferKind"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1552,
                  "mutability": "mutable",
                  "name": "soft",
                  "nameLocation": "1514:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1509:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1509:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1555,
                  "mutability": "mutable",
                  "name": "side",
                  "nameLocation": "1529:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1524:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$1454",
                    "typeString": "enum Side"
                  },
                  "typeName": {
                    "id": 1554,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1553,
                      "name": "Side",
                      "nameLocations": [
                        "1524:4:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1454,
                      "src": "1524:4:10"
                    },
                    "referencedDeclaration": 1454,
                    "src": "1524:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$1454",
                      "typeString": "enum Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1557,
                  "mutability": "mutable",
                  "name": "maker",
                  "nameLocation": "1547:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1539:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1559,
                  "mutability": "mutable",
                  "name": "taker",
                  "nameLocation": "1566:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1558:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1562,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "1588:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1577:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Collateral_$1490_storage_ptr",
                    "typeString": "struct Collateral"
                  },
                  "typeName": {
                    "id": 1561,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1560,
                      "name": "Collateral",
                      "nameLocations": [
                        "1577:10:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1490,
                      "src": "1577:10:10"
                    },
                    "referencedDeclaration": 1490,
                    "src": "1577:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collateral_$1490_storage_ptr",
                      "typeString": "struct Collateral"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "terms",
                  "nameLocation": "1621:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1604:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MarketOfferTerms_$1547_storage_ptr",
                    "typeString": "struct MarketOfferTerms"
                  },
                  "typeName": {
                    "id": 1564,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1563,
                      "name": "MarketOfferTerms",
                      "nameLocations": [
                        "1604:16:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1547,
                      "src": "1604:16:10"
                    },
                    "referencedDeclaration": 1547,
                    "src": "1604:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketOfferTerms_$1547_storage_ptr",
                      "typeString": "struct MarketOfferTerms"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1568,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1641:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1632:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FeeTerms_$1495_storage_ptr",
                    "typeString": "struct FeeTerms"
                  },
                  "typeName": {
                    "id": 1567,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1566,
                      "name": "FeeTerms",
                      "nameLocations": [
                        "1632:8:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1495,
                      "src": "1632:8:10"
                    },
                    "referencedDeclaration": 1495,
                    "src": "1632:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FeeTerms_$1495_storage_ptr",
                      "typeString": "struct FeeTerms"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1570,
                  "mutability": "mutable",
                  "name": "expiration",
                  "nameLocation": "1658:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1650:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1650:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1572,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1682:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1674:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "MarketOffer",
              "nameLocation": "1471:11:10",
              "nodeType": "StructDefinition",
              "scope": 1633,
              "src": "1464:225:10",
              "visibility": "public"
            },
            {
              "canonicalName": "Escrow",
              "id": 1609,
              "members": [
                {
                  "constant": false,
                  "id": 1576,
                  "mutability": "mutable",
                  "name": "side",
                  "nameLocation": "1820:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "1815:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$1454",
                    "typeString": "enum Side"
                  },
                  "typeName": {
                    "id": 1575,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1574,
                      "name": "Side",
                      "nameLocations": [
                        "1815:4:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1454,
                      "src": "1815:4:10"
                    },
                    "referencedDeclaration": 1454,
                    "src": "1815:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$1454",
                      "typeString": "enum Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1578,
                  "mutability": "mutable",
                  "name": "placeholder",
                  "nameLocation": "1838:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "1830:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "1863:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "1855:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1582,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1887:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "1879:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1879:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1584,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1906:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "1898:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1898:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1587,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "1926:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "1918:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$826",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1586,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1585,
                      "name": "IERC721",
                      "nameLocations": [
                        "1918:7:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 826,
                      "src": "1918:7:10"
                    },
                    "referencedDeclaration": 826,
                    "src": "1918:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$826",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1590,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "1949:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "1942:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$709",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1589,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1588,
                      "name": "IERC20",
                      "nameLocations": [
                        "1942:6:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 709,
                      "src": "1942:6:10"
                    },
                    "referencedDeclaration": 709,
                    "src": "1942:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$709",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1592,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1971:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "1963:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1963:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1594,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1991:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "1983:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1983:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1596,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "2014:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "2006:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1598,
                  "mutability": "mutable",
                  "name": "rebate",
                  "nameLocation": "2031:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "2023:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1600,
                  "mutability": "mutable",
                  "name": "redemptionHash",
                  "nameLocation": "2051:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "2043:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1599,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1602,
                  "mutability": "mutable",
                  "name": "withRedemption",
                  "nameLocation": "2076:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "2071:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1601,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2071:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1604,
                  "mutability": "mutable",
                  "name": "redemptionCharge",
                  "nameLocation": "2104:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "2096:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1606,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2134:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "2126:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1608,
                  "mutability": "mutable",
                  "name": "lockTime",
                  "nameLocation": "2157:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "2149:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2149:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Escrow",
              "nameLocation": "1802:6:10",
              "nodeType": "StructDefinition",
              "scope": 1633,
              "src": "1795:373:10",
              "visibility": "public"
            },
            {
              "canonicalName": "RedemptionCharge",
              "id": 1626,
              "members": [
                {
                  "constant": false,
                  "id": 1611,
                  "mutability": "mutable",
                  "name": "redeemer",
                  "nameLocation": "2314:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1626,
                  "src": "2306:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1614,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "2334:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1626,
                  "src": "2326:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$826",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1613,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1612,
                      "name": "IERC721",
                      "nameLocations": [
                        "2326:7:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 826,
                      "src": "2326:7:10"
                    },
                    "referencedDeclaration": 826,
                    "src": "2326:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$826",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1616,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2356:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1626,
                  "src": "2348:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2348:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1619,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "2374:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1626,
                  "src": "2367:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$709",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1618,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1617,
                      "name": "IERC20",
                      "nameLocations": [
                        "2367:6:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 709,
                      "src": "2367:6:10"
                    },
                    "referencedDeclaration": 709,
                    "src": "2367:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$709",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1621,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2394:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1626,
                  "src": "2386:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1623,
                  "mutability": "mutable",
                  "name": "expiration",
                  "nameLocation": "2412:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1626,
                  "src": "2404:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2404:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1625,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "2434:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1626,
                  "src": "2426:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2426:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "RedemptionCharge",
              "nameLocation": "2285:16:10",
              "nodeType": "StructDefinition",
              "scope": 1633,
              "src": "2278:163:10",
              "visibility": "public"
            },
            {
              "canonicalName": "Asset",
              "id": 1632,
              "members": [
                {
                  "constant": false,
                  "id": 1629,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "2468:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "2460:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$826",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 1628,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1627,
                      "name": "IERC721",
                      "nameLocations": [
                        "2460:7:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 826,
                      "src": "2460:7:10"
                    },
                    "referencedDeclaration": 826,
                    "src": "2460:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$826",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1631,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2490:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "2482:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2482:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Asset",
              "nameLocation": "2450:5:10",
              "nodeType": "StructDefinition",
              "scope": 1633,
              "src": "2443:57:10",
              "visibility": "public"
            }
          ],
          "src": "32:2469:10"
        },
        "id": 10
      },
      "contracts/interfaces/IEscrowController.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IEscrowController.sol",
          "exportedSymbols": {
            "Asset": [
              1632
            ],
            "Collateral": [
              1490
            ],
            "Criteria": [
              1451
            ],
            "Escrow": [
              1609
            ],
            "FeeTerms": [
              1495
            ],
            "IERC20": [
              709
            ],
            "IERC721": [
              826
            ],
            "IEscrowController": [
              1732
            ],
            "Lien": [
              1481
            ],
            "LoanOffer": [
              1539
            ],
            "LoanOfferTerms": [
              1513
            ],
            "MarketOffer": [
              1573
            ],
            "MarketOfferTerms": [
              1547
            ],
            "OfferKind": [
              1448
            ],
            "RedemptionCharge": [
              1626
            ],
            "Side": [
              1454
            ]
          },
          "id": 1733,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1634,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "contracts/Structs.sol",
              "file": "../Structs.sol",
              "id": 1635,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1733,
              "sourceUnit": 1633,
              "src": "58:24:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IEscrowController",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1732,
              "linearizedBaseContracts": [
                1732
              ],
              "name": "IEscrowController",
              "nameLocation": "94:17:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "7c6e610d",
                  "id": 1640,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "TOKEN_SUPPLIER",
                  "nameLocation": "128:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1636,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "142:2:11"
                  },
                  "returnParameters": {
                    "id": 1639,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1638,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1640,
                        "src": "168:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1637,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "168:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "167:9:11"
                  },
                  "scope": 1732,
                  "src": "119:58:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "89d8b82d",
                  "id": 1662,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "openEscrow",
                  "nameLocation": "192:10:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1642,
                        "mutability": "mutable",
                        "name": "placeholder",
                        "nameLocation": "220:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "212:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1641,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "212:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1644,
                        "mutability": "mutable",
                        "name": "rebate",
                        "nameLocation": "249:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "241:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "241:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1646,
                        "mutability": "mutable",
                        "name": "withRedemption",
                        "nameLocation": "270:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "265:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1645,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "265:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1648,
                        "mutability": "mutable",
                        "name": "redemptionHash",
                        "nameLocation": "302:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "294:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1647,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "294:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1650,
                        "mutability": "mutable",
                        "name": "redemptionCharge",
                        "nameLocation": "334:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "326:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1649,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "326:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1652,
                        "mutability": "mutable",
                        "name": "buyer",
                        "nameLocation": "368:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "360:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1651,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "360:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1654,
                        "mutability": "mutable",
                        "name": "seller",
                        "nameLocation": "391:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "383:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1653,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "383:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1657,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "428:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "407:26:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketOffer_$1573_calldata_ptr",
                          "typeString": "struct MarketOffer"
                        },
                        "typeName": {
                          "id": 1656,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1655,
                            "name": "MarketOffer",
                            "nameLocations": [
                              "407:11:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1573,
                            "src": "407:11:11"
                          },
                          "referencedDeclaration": 1573,
                          "src": "407:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketOffer_$1573_storage_ptr",
                            "typeString": "struct MarketOffer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "202:237:11"
                  },
                  "returnParameters": {
                    "id": 1661,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1660,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "458:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1659,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "458:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "457:9:11"
                  },
                  "scope": 1732,
                  "src": "183:284:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "40d30854",
                  "id": 1672,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "settleEscrow",
                  "nameLocation": "482:12:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1664,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "503:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1672,
                        "src": "495:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1663,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "495:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1667,
                        "mutability": "mutable",
                        "name": "escrow",
                        "nameLocation": "529:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1672,
                        "src": "513:22:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$1609_calldata_ptr",
                          "typeString": "struct Escrow"
                        },
                        "typeName": {
                          "id": 1666,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1665,
                            "name": "Escrow",
                            "nameLocations": [
                              "513:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1609,
                            "src": "513:6:11"
                          },
                          "referencedDeclaration": 1609,
                          "src": "513:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                            "typeString": "struct Escrow"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1669,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "545:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1672,
                        "src": "537:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1668,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "537:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "494:59:11"
                  },
                  "returnParameters": {
                    "id": 1671,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "562:0:11"
                  },
                  "scope": 1732,
                  "src": "473:90:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "13569cfd",
                  "id": 1680,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimEscrow",
                  "nameLocation": "577:11:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1678,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1674,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "597:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1680,
                        "src": "589:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "589:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1677,
                        "mutability": "mutable",
                        "name": "escrow",
                        "nameLocation": "623:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1680,
                        "src": "607:22:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$1609_calldata_ptr",
                          "typeString": "struct Escrow"
                        },
                        "typeName": {
                          "id": 1676,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1675,
                            "name": "Escrow",
                            "nameLocations": [
                              "607:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1609,
                            "src": "607:6:11"
                          },
                          "referencedDeclaration": 1609,
                          "src": "607:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                            "typeString": "struct Escrow"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "588:42:11"
                  },
                  "returnParameters": {
                    "id": 1679,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "639:0:11"
                  },
                  "scope": 1732,
                  "src": "568:72:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "36cede41",
                  "id": 1690,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rejectEscrow",
                  "nameLocation": "654:12:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1688,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1682,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "675:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1690,
                        "src": "667:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1681,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1685,
                        "mutability": "mutable",
                        "name": "escrow",
                        "nameLocation": "701:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1690,
                        "src": "685:22:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$1609_calldata_ptr",
                          "typeString": "struct Escrow"
                        },
                        "typeName": {
                          "id": 1684,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1683,
                            "name": "Escrow",
                            "nameLocations": [
                              "685:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1609,
                            "src": "685:6:11"
                          },
                          "referencedDeclaration": 1609,
                          "src": "685:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                            "typeString": "struct Escrow"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1687,
                        "mutability": "mutable",
                        "name": "returnRebate",
                        "nameLocation": "714:12:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1690,
                        "src": "709:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1686,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:61:11"
                  },
                  "returnParameters": {
                    "id": 1689,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "736:0:11"
                  },
                  "scope": 1732,
                  "src": "645:92:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f689ac390301aed9c1cf10f3c8dd4bf55a902b4d9386c0a491605573142932dd",
                  "id": 1697,
                  "name": "EscrowOpened",
                  "nameLocation": "749:12:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1696,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1692,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "778:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "762:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1691,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "762:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1695,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "escrow",
                        "nameLocation": "795:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "788:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$1609_memory_ptr",
                          "typeString": "struct Escrow"
                        },
                        "typeName": {
                          "id": 1694,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1693,
                            "name": "Escrow",
                            "nameLocations": [
                              "788:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1609,
                            "src": "788:6:11"
                          },
                          "referencedDeclaration": 1609,
                          "src": "788:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$1609_storage_ptr",
                            "typeString": "struct Escrow"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "761:41:11"
                  },
                  "src": "743:60:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "a465a1fee99eb9fb08a22b000dcdbb13d227aea872015d53c785fa44f2350e9d",
                  "id": 1703,
                  "name": "EscrowSettled",
                  "nameLocation": "814:13:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1699,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "844:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1703,
                        "src": "828:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1698,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "828:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1701,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "870:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1703,
                        "src": "854:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1700,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "854:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "827:51:11"
                  },
                  "src": "808:71:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c16ec4190afc7dd9e0b0c866bd421d7ea070f2395fcee05567614d63fac17940",
                  "id": 1707,
                  "name": "EscrowClaimed",
                  "nameLocation": "890:13:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1706,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1705,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "920:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1707,
                        "src": "904:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1704,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "904:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "903:26:11"
                  },
                  "src": "884:46:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "36d81b3901a7af2fb3e1c438bb2a725ba9b55ddf607a668abf262b0c41885679",
                  "id": 1713,
                  "name": "EscrowRejected",
                  "nameLocation": "941:14:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1709,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "escrowId",
                        "nameLocation": "972:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1713,
                        "src": "956:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1708,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "956:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1711,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rebateReturned",
                        "nameLocation": "995:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1713,
                        "src": "982:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1710,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "982:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "955:55:11"
                  },
                  "src": "935:76:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "0a4acc8fb2fcb25932c29564e69d31a4af2363811e49e9619345a7404744ab8d",
                  "id": 1719,
                  "name": "AskMakerWhitelisted",
                  "nameLocation": "1023:19:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1718,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1715,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "maker",
                        "nameLocation": "1059:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1719,
                        "src": "1043:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1714,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1043:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1717,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "whitelisted",
                        "nameLocation": "1079:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1719,
                        "src": "1066:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1716,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1066:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1042:49:11"
                  },
                  "src": "1017:75:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "98b64277bbfad703c35b1ffc6d48d78e3394e496b498c2b3278ce4d06756971d",
                  "id": 1725,
                  "name": "BidTakerWhitelisted",
                  "nameLocation": "1103:19:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1721,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "taker",
                        "nameLocation": "1139:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1725,
                        "src": "1123:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1123:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1723,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "whitelisted",
                        "nameLocation": "1159:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1725,
                        "src": "1146:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1722,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1146:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1122:49:11"
                  },
                  "src": "1097:75:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "a1d716b435381dee582b1b1ac7415a66045f57a26ff62b779b9051ba7afc5735",
                  "id": 1731,
                  "name": "PlaceholderEscrowed",
                  "nameLocation": "1183:19:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1730,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1727,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "placeholder",
                        "nameLocation": "1219:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1731,
                        "src": "1203:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1726,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1203:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1729,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "escrowed",
                        "nameLocation": "1245:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1731,
                        "src": "1232:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1728,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1232:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1202:52:11"
                  },
                  "src": "1177:78:11"
                }
              ],
              "scope": 1733,
              "src": "84:1173:11",
              "usedErrors": [],
              "usedEvents": [
                1697,
                1703,
                1707,
                1713,
                1719,
                1725,
                1731
              ]
            }
          ],
          "src": "32:1226:11"
        },
        "id": 11
      }
    },
    "contracts": {
      "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol": {
        "Ownable2StepUpgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pendingOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "owner()": "8da5cb5b",
              "pendingOwner()": "e30c3978",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":\"Ownable2StepUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "OwnableUpgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "Initializable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "ContextUpgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "IERC721": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "contracts/EscrowController.sol": {
        "EscrowController": {
          "abi": [
            {
              "inputs": [],
              "name": "EscrowLocked",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidEscrow",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidRedemptionCharge",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "OnlyKettle",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "PlaceholderAlreadyEscrowed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SellerNotAskWhitelisted",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SellerNotBidWhitelisted",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "bool",
                  "name": "whitelisted",
                  "type": "bool"
                }
              ],
              "name": "AskMakerWhitelisted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "bool",
                  "name": "whitelisted",
                  "type": "bool"
                }
              ],
              "name": "BidTakerWhitelisted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                }
              ],
              "name": "EscrowClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "placeholder",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "buyer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "seller",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC721",
                      "name": "collection",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rebate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "redemptionHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bool",
                      "name": "withRedemption",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "redemptionCharge",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lockTime",
                      "type": "uint256"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Escrow",
                  "name": "escrow",
                  "type": "tuple"
                }
              ],
              "name": "EscrowOpened",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bool",
                  "name": "rebateReturned",
                  "type": "bool"
                }
              ],
              "name": "EscrowRejected",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "EscrowSettled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "placeholder",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bool",
                  "name": "escrowed",
                  "type": "bool"
                }
              ],
              "name": "PlaceholderEscrowed",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "TOKEN_SUPPLIER",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "__EscrowController_init",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "placeholder",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "buyer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "seller",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC721",
                      "name": "collection",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rebate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "redemptionHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bool",
                      "name": "withRedemption",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "redemptionCharge",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lockTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Escrow",
                  "name": "escrow",
                  "type": "tuple"
                }
              ],
              "name": "claimEscrow",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "escrowIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "escrowedTokens",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "escrows",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "placeholder",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "buyer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "seller",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC721",
                      "name": "collection",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rebate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "redemptionHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bool",
                      "name": "withRedemption",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "redemptionCharge",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lockTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Escrow",
                  "name": "escrow",
                  "type": "tuple"
                }
              ],
              "name": "hashEscrow",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "_hash",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "kettle",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lockTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "placeholder",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rebate",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "withRedemption",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "redemptionHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "redemptionCharge",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "buyer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum OfferKind",
                      "name": "kind",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "soft",
                      "type": "bool"
                    },
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "maker",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "taker",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "enum Criteria",
                          "name": "criteria",
                          "type": "uint8"
                        },
                        {
                          "internalType": "contract IERC721",
                          "name": "collection",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifier",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Collateral",
                      "name": "collateral",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IERC20",
                          "name": "currency",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rebate",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct MarketOfferTerms",
                      "name": "terms",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "recipient",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct FeeTerms",
                      "name": "fee",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expiration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MarketOffer",
                  "name": "offer",
                  "type": "tuple"
                }
              ],
              "name": "openEscrow",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pendingOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "placeholder",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "buyer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "seller",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC721",
                      "name": "collection",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rebate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "redemptionHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bool",
                      "name": "withRedemption",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "redemptionCharge",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lockTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Escrow",
                  "name": "escrow",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "returnRebate",
                  "type": "bool"
                }
              ],
              "name": "rejectEscrow",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "placeholder",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "escrowed",
                  "type": "bool"
                }
              ],
              "name": "setEscrowedToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_kettle",
                  "type": "address"
                }
              ],
              "name": "setKettle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "name": "setLockTime",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_tokenSupplier",
                  "type": "address"
                }
              ],
              "name": "setTokenSupplier",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "_whitelistOnly",
                  "type": "bool"
                }
              ],
              "name": "setWhitelistOnly",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "placeholder",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "buyer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "seller",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC721",
                      "name": "collection",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rebate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "redemptionHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bool",
                      "name": "withRedemption",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "redemptionCharge",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lockTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Escrow",
                  "name": "escrow",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "settleEscrow",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "whitelisted",
                  "type": "bool"
                }
              ],
              "name": "whitelistBidTaker",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "whitelistOnly",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "whitelisted",
                  "type": "bool"
                }
              ],
              "name": "whitelistedAskMaker",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "whitelistedAskMakers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "whitelistedBidTakers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461001a57604051611956610020823961195690f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063012f52ee146101c25780630d668087146101bd57806313569cfd146101b85780632811e6bb146101b357806336cede41146101ae57806340d30854146101a9578063490b4846146101a45780634b4687b51461019f5780634bf1b68d1461019a57806353ae97391461019557806355d8525e146101905780636ba2700e1461018b578063715018a61461018657806379ba5097146101815780637c6e610d1461017c57806385b811161461017757806389d8b82d146101725780638da5cb5b1461016d578063ae04d45d14610168578063b784036914610163578063c22e54a11461015e578063e30c397814610159578063ea05a8c614610154578063f2fde38b1461014f578063f4be779c1461014a578063f8b963b1146101455763fd91d7cd036101d0576109ad565b610989565b610952565b61092a565b610912565b6108e3565b6108c8565b6108a0565b610888565b61086d565b610848565b6107a7565b6105a7565b610552565b61053a565b610521565b610506565b6104a8565b610474565b610447565b610409565b6103ba565b61036f565b61030d565b6102e3565b610295565b61024f565b805b036101d057565b600080fd5b905035906101e2826101c7565b565b906020828203126101d0576101f8916101d5565b90565b6101f86101f86101f89290565b90610212906101fb565b600052602052604060002090565b6101f8916008021c81565b906101f89154610220565b60006102466101f8926005610208565b61022b565b9052565b346101d05761027a61026a6102653660046101e4565b610236565b6040519182918290815260200190565b0390f35b60009103126101d057565b6101f86000600361022b565b346101d0576102a536600461027e565b61027a61026a610289565b90816102009103126101d05790565b9190610220838203126101d0576101f89060206102dc82866101d5565b94016102b0565b346101d0576102fc6102f63660046102bf565b90610b89565b604051005b6101f86000600261022b565b346101d05761031d36600461027e565b61027a61026a610301565b8015156101c9565b905035906101e282610328565b9091610240828403126101d0576101f861035784846101d5565b9361022061036882602087016102b0565b9401610330565b346101d0576102fc61038236600461033d565b91610c31565b9091610240828403126101d0576101f86103a284846101d5565b936102206103b382602087016102b0565b94016101d5565b346101d0576102fc6103cd366004610388565b91610cbd565b6001600160a01b031690565b6101c9816103d3565b905035906101e2826103df565b906020828203126101d0576101f8916103e8565b346101d0576102fc61041c3660046103f5565b610f5b565b6101f8916008021c5b60ff1690565b906101f89154610421565b6101f860006004610430565b346101d05761045736600461027e565b61027a61046261043b565b60405191829182901515815260200190565b346101d0576102fc6104873660046103f5565b610fa6565b91906040838203126101d0576101f890602061036882866103e8565b346101d0576102fc6104bb36600461048c565b90611007565b6101f8906103d3906001600160a01b031682565b6101f8906104c1565b6101f8906104d5565b90610212906104de565b60006105016101f89260086104e7565b610430565b346101d05761027a61046261051c3660046103f5565b6104f1565b346101d0576102fc61053436600461048c565b9061105f565b346101d05761054a36600461027e565b6102fc61109c565b346101d05761056236600461027e565b6102fc6110a4565b6101f8916008021c6103d3565b906101f8915461056a565b6101f860006001610577565b61024b906103d3565b6020810192916101e2919061058e565b346101d0576105b736600461027e565b61027a6105c2610582565b60405191829182610597565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761060657604052565b6105ce565b906101e261061860405190565b92836105e4565b600211156101d057565b905035906101e28261061f565b6101f8906103d3565b6101c981610636565b905035906101e28261063f565b919091610200818403126101d05761078c61067161020061060b565b9361067c8184610629565b855261068b81602085016101d5565b602086015261069d81604085016101d5565b60408601526106af81606085016103e8565b60608601526106c181608085016103e8565b60808601526106d38160a08501610648565b60a08601526106e58160c08501610648565b60c08601526106f78160e085016101d5565b60e086015261010061070b828286016103e8565b9086015261012061071e828286016101d5565b90860152610140610731828286016101d5565b90860152610160610744828286016101d5565b9086015261018061075782828601610330565b908601526101a061076a828286016101d5565b908601526101c061077d828286016101d5565b908601526101e08093016101d5565b90830152565b90610200828203126101d0576101f891610655565b346101d05761027a61026a6107bd366004610792565b6110f0565b90816101e09103126101d05790565b91906102c0838203126101d0576107e881846101d5565b926107f682602083016101d5565b926108048360408401610330565b9261081281606085016101d5565b9261082082608083016101d5565b926101f86108318460a085016103e8565b9360e06108418260c087016103e8565b94016107c2565b346101d05761027a61026a61085e3660046107d1565b96959095949194939293611618565b346101d05761087d36600461027e565b61027a6105c261162a565b346101d0576102fc61089b3660046101e4565b61166e565b346101d0576102fc6108b33660046103f5565b61168e565b60006105016101f89260076104e7565b346101d05761027a6104626108de3660046103f5565b6108b8565b346101d0576108f336600461027e565b61027a6105c2611697565b906020828203126101d0576101f891610330565b346101d0576102fc6109253660046108fe565b6116bb565b346101d0576102fc61093d3660046103f5565b611723565b60006105016101f8926006610208565b346101d05761027a6104626109683660046101e4565b610942565b91906040838203126101d0576101f890602061036882866101d5565b346101d0576102fc61099c36600461096d565b9061177a565b6101f8600080610577565b346101d0576109bd36600461027e565b61027a6105c26109a2565b6101f89054610636565b906109e56109e060006109c8565b6103d3565b6109ee336103d3565b036109fc576101e291610a2e565b604051632e60f98560e11b8152600490fd5b0390fd5b6101f8903690610655565b6101f89081565b6101f89054610a1d565b90610a66610a3b82610a12565b610a61610a5d6101f8610a57610a52886005610208565b610a24565b93611784565b9190565b141590565b610a73576101e291610aad565b60405163c4c3834b60e01b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b91908201809211610aa857565b610a85565b90610ad8610aba82610a12565b610ad26101e0610acc6101c084015190565b92015190565b90610a9b565b4210610ae7576101e291610b3a565b6040516320fd4dff60e11b8152600490fd5b9160001960089290920291821b911b5b9181191691161790565b9190610b226101f8610b2a9390565b908354610af9565b9055565b6101e291600091610b13565b610b599150610b546000610b4f836005610208565b610b2e565b6101fb565b7fc16ec4190afc7dd9e0b0c866bd421d7ea070f2395fcee05567614d63fac17940610b8360405190565b600090a2565b906101e2916109d2565b9190610ba26109e060006109c8565b610bab336103d3565b036109fc576101e2929190610bd9610bc282610a12565b610a61610a5d6101f8610a57610a52896005610208565b610a73576101e292610c009150610bfa90610b546000610b4f836005610208565b91151590565b907f36d81b3901a7af2fb3e1c438bb2a725ba9b55ddf607a668abf262b0c41885679610c2b60405190565b600090a3565b906101e29291610b93565b9190610c4b6109e060006109c8565b610c54336103d3565b036109fc576101e2929190610c6b610bc282610a12565b610a73576101e292610c929150610c8c90610b546000610b4f836005610208565b916101fb565b907fa465a1fee99eb9fb08a22b000dcdbb13d227aea872015d53c785fa44f2350e9d610c2b60405190565b906101e29291610c3c565b6101f89060401c61042a565b6101f89054610cc8565b6101f8905b67ffffffffffffffff1690565b6101f89054610cde565b610ce36101f86101f89290565b9067ffffffffffffffff90610b09565b610ce36101f86101f89267ffffffffffffffff1690565b90610d3e6101f8610b2a92610d17565b8254610d07565b9060ff60401b9060401b610b09565b90610d646101f8610b2a92151590565b8254610d45565b61024b90610cfa565b6020810192916101e29190610d6b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081610dc0610dba610db683610cd4565b1590565b91610cf0565b90600092610dcd84610cfa565b67ffffffffffffffff84161480610ecc575b600193610dfc610dee86610cfa565b9167ffffffffffffffff1690565b149081610ea8575b155b9081610e9f575b50610e8d57610e369082610e2d86610e2487610cfa565b98019788610d2e565b610e7e57610f14565b610e3f57505050565b610e6d610e79927fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d294610d54565b60405191829182610d74565b0390a1565b610e888487610d54565b610f14565b60405163f92ee8a960e01b8152600490fd5b15905038610e0d565b9050610e06610eb6306104de565b3b610ec3610a5d886101fb565b14919050610e04565b5081610ddf565b9060001990610b09565b90610eed6101f8610b2a926101fb565b8254610ed3565b9060ff90610b09565b90610f0d6101f8610b2a92151590565b8254610ef4565b6101e290610f206117ca565b610f34610f2d60016101fb565b6002610edd565b610f4a610f4362278d006101fb565b6003610edd565b610f5660016004610efd565b611810565b6101e290610d84565b6101e290610f7061182d565b610f9b565b906001600160a01b0390610b09565b90610f946101f8610b2a926104de565b8254610f75565b6101e2906001610f84565b6101e290610f64565b906101e291610fbc61182d565b610bfa610fdc91610fd784610fd28360076104e7565b610efd565b6104de565b907f0a4acc8fb2fcb25932c29564e69d31a4af2363811e49e9619345a7404744ab8d610c2b60405190565b906101e291610faf565b906101e29161101e61182d565b610bfa61103491610fd784610fd28360086104e7565b907f98b64277bbfad703c35b1ffc6d48d78e3394e496b498c2b3278ce4d06756971d610c2b60405190565b906101e291611011565b61107161182d565b6101e261108f565b6103d36101f86101f89290565b6101f890611079565b6101e2610f566000611086565b6101e2611069565b336110ad611697565b6110bf6110b9836103d3565b916103d3565b036110cd576101e290611810565b610a0e906110da60405190565b63118cdaa760e01b815291829160048301610597565b6101f890611784565b979695949392919061110e6109e060006109c8565b611117336103d3565b036109fc576101f89861130e565b6101f89061042a565b6101f89054611125565b634e487b7160e01b600052602160045260246000fd5b6002111561115857565b611138565b906101e28261114e565b356101f88161061f565b356101f88161063f565b356101f8816101c7565b356101f8816103df565b6101f861020061060b565b9061024b9061115d565b9061024b906103d3565b9061024b90610636565b90610eed6101f8610b2a9290565b6000198114610aa85760010190565b6101f89061115d565b61024b906111d5565b61024b906104de565b906101e0806101e29361120b600082015160008601906111de565b61121a60208201516020860152565b61122960408201516040860152565b61123b6060820151606086019061058e565b61124d6080820151608086019061058e565b61125f60a082015160a08601906111e7565b61127160c082015160c08601906111e7565b61128060e082015160e0860152565b61129461010082015161010086019061058e565b6112a5610120820151610120860152565b6112b6610140820151610140860152565b6112c7610160820151610160860152565b610180818101511515908501526112e56101a08201516101a0860152565b6112f66101c08201516101c0860152565b0151910152565b610200810192916101e291906111f0565b50979694959192916113296113248a6006610208565b61112e565b61160657611337600461112e565b611567575b831580611555575b61151c578380611543575b8061152e575b61151c57889661136760408801611167565b9660a081019261137960c08301611171565b936040016113869061117b565b9361010083019161139683611171565b926020016113a39061117b565b610160909401946113b386611185565b956020016113c09061117b565b966113cb6003610a24565b9c6113d461118f565b9e8f916113e1908361119a565b6020820152604001526113f79060608e016111a4565b6114049060808d016111a4565b6114119060a08c016111ae565b61141e9060c08b016111ae565b60e08901526114319061010089016111a4565b61012087015261014086015261016085015215156101808401526101a083015261145d426101c0840152565b6101e082015261146d6002610a24565b61147b600182016002610edd565b9261148582611784565b61148f6002610a24565b61149a906005610208565b906114a4916111b8565b6114af906006610208565b60016114ba91610efd565b6114c46002610a24565b6114cd816111c6565b6114d8906002610edd565b6114e1906101fb565b906114eb60405190565b6114f68192826112fd565b037ff689ac390301aed9c1cf10f3c8dd4bf55a902b4d9386c0a491605573142932dd91a2565b60405163e803a88360e01b8152600490fd5b5061153c6101f860006101fb565b8314611355565b5061154e60006101fb565b851461134f565b5061156060006101fb565b8511611344565b6040860161157481611167565b611587611581600161115d565b9161115d565b14806115ef575b6115dd5761159b90611167565b6115a8611581600061115d565b14806115c6575b1561133c57604051637c5e0f3b60e01b8152600490fd5b506115d8610db66113248960086104e7565b6115af565b604051630175613f60e51b8152600490fd5b50611601610db66113248460076104e7565b61158e565b60405163039b9e3f60e61b8152600490fd5b6101f8979695949392919060006110f9565b6101f860007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b016109c8565b6101e29061166361182d565b6101e2906003610edd565b6101e290611657565b6101e29061168361182d565b6101e2906000610f84565b6101e290611677565b6101f8600061165161184b565b6101e2906116b061182d565b6101e2906004610efd565b6101e2906116a4565b6101e2906116d061182d565b6116e48160006116de61184b565b01610f84565b6116f86116f2610fd761162a565b916104de565b907f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700610c2b60405190565b6101e2906116c4565b906101e29161173961182d565b610bfa61174f91610b5484610fd2836006610208565b907fa1d716b435381dee582b1b1ac7415a66045f57a26ff62b779b9051ba7afc5735610c2b60405190565b906101e29161172c565b6117ac61179060405190565b80926117a06020830191826112fd565b908103825203826105e4565b6117be6117b7825190565b9160200190565b2090565b6101e261186f565b6101e26117c2565b916001600160a01b0360089290920291821b911b610b09565b91906117fc6101f8610b2a936104de565b9083546117d2565b6101e2916000916117eb565b6101e29061182860008061182261184b565b01611804565b611892565b61183561162a565b33906118436110b9836103d3565b036110cd5750565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0090565b61187a610db66118f7565b61188057565b604051631afcd79f60e31b8152600490fd5b6118cc6116f27f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300610fd7846118c6836109c8565b92610f84565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610c2b60405190565b6101f87ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610cd456fea2646970667358221220018457b5d9a0c8727e47ba96f5e8c391db933a01e3061a0215dcae56fe65d4df64736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1A JUMPI PUSH1 0x40 MLOAD PUSH2 0x1956 PUSH2 0x20 DUP3 CODECOPY PUSH2 0x1956 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12F52EE EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x13569CFD EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x2811E6BB EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x36CEDE41 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x40D30854 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x490B4846 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x4B4687B5 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x4BF1B68D EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x53AE9739 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x55D8525E EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x6BA2700E EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x7C6E610D EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x85B81116 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x89D8B82D EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xAE04D45D EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xB7840369 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xC22E54A1 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xEA05A8C6 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xF4BE779C EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xF8B963B1 EQ PUSH2 0x145 JUMPI PUSH4 0xFD91D7CD SUB PUSH2 0x1D0 JUMPI PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH2 0x952 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST PUSH2 0x86D JUMP JUMPDEST PUSH2 0x848 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH2 0x24F JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x1D0 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x1C7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP2 PUSH2 0x1D5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F8 PUSH2 0x1F8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x212 SWAP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1F8 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x1F8 SWAP2 SLOAD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 PUSH2 0x1F8 SWAP3 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4 JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x1D0 JUMPI JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH1 0x3 PUSH2 0x22B JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x26A PUSH2 0x289 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x200 SWAP2 SUB SLT PUSH2 0x1D0 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x220 DUP4 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP1 PUSH1 0x20 PUSH2 0x2DC DUP3 DUP7 PUSH2 0x1D5 JUMP JUMPDEST SWAP5 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BF JUMP JUMPDEST SWAP1 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH1 0x2 PUSH2 0x22B JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x26A PUSH2 0x301 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x1C9 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x328 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x240 DUP3 DUP5 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 PUSH2 0x357 DUP5 DUP5 PUSH2 0x1D5 JUMP JUMPDEST SWAP4 PUSH2 0x220 PUSH2 0x368 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x2B0 JUMP JUMPDEST SWAP5 ADD PUSH2 0x330 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D JUMP JUMPDEST SWAP2 PUSH2 0xC31 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x240 DUP3 DUP5 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 PUSH2 0x3A2 DUP5 DUP5 PUSH2 0x1D5 JUMP JUMPDEST SWAP4 PUSH2 0x220 PUSH2 0x3B3 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x2B0 JUMP JUMPDEST SWAP5 ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST SWAP2 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1C9 DUP2 PUSH2 0x3D3 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x3DF JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP2 PUSH2 0x3E8 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x41C CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x1F8 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1F8 SWAP2 SLOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH1 0x4 PUSH2 0x430 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x462 PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xFA6 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP1 PUSH1 0x20 PUSH2 0x368 DUP3 DUP7 PUSH2 0x3E8 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x4BB CALLDATASIZE PUSH1 0x4 PUSH2 0x48C JUMP JUMPDEST SWAP1 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x3D3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x4D5 JUMP JUMPDEST SWAP1 PUSH2 0x212 SWAP1 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 PUSH2 0x1F8 SWAP3 PUSH1 0x8 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x462 PUSH2 0x51C CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x534 CALLDATASIZE PUSH1 0x4 PUSH2 0x48C JUMP JUMPDEST SWAP1 PUSH2 0x105F JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x54A CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x109C JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x1F8 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x3D3 JUMP JUMPDEST SWAP1 PUSH2 0x1F8 SWAP2 SLOAD PUSH2 0x56A JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH1 0x1 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x24B SWAP1 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x5B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x5C2 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x597 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x606 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST SWAP1 PUSH2 0x1E2 PUSH2 0x618 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0x1D0 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x1C9 DUP2 PUSH2 0x636 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x63F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x200 DUP2 DUP5 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x78C PUSH2 0x671 PUSH2 0x200 PUSH2 0x60B JUMP JUMPDEST SWAP4 PUSH2 0x67C DUP2 DUP5 PUSH2 0x629 JUMP JUMPDEST DUP6 MSTORE PUSH2 0x68B DUP2 PUSH1 0x20 DUP6 ADD PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x69D DUP2 PUSH1 0x40 DUP6 ADD PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x6AF DUP2 PUSH1 0x60 DUP6 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x6C1 DUP2 PUSH1 0x80 DUP6 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x6D3 DUP2 PUSH1 0xA0 DUP6 ADD PUSH2 0x648 JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x6E5 DUP2 PUSH1 0xC0 DUP6 ADD PUSH2 0x648 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x6F7 DUP2 PUSH1 0xE0 DUP6 ADD PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 PUSH2 0x70B DUP3 DUP3 DUP7 ADD PUSH2 0x3E8 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x120 PUSH2 0x71E DUP3 DUP3 DUP7 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x140 PUSH2 0x731 DUP3 DUP3 DUP7 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x160 PUSH2 0x744 DUP3 DUP3 DUP7 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x180 PUSH2 0x757 DUP3 DUP3 DUP7 ADD PUSH2 0x330 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x1A0 PUSH2 0x76A DUP3 DUP3 DUP7 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x1C0 PUSH2 0x77D DUP3 DUP3 DUP7 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x1E0 DUP1 SWAP4 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x200 DUP3 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP2 PUSH2 0x655 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x26A PUSH2 0x7BD CALLDATASIZE PUSH1 0x4 PUSH2 0x792 JUMP JUMPDEST PUSH2 0x10F0 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1E0 SWAP2 SUB SLT PUSH2 0x1D0 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2C0 DUP4 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x7E8 DUP2 DUP5 PUSH2 0x1D5 JUMP JUMPDEST SWAP3 PUSH2 0x7F6 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP3 PUSH2 0x804 DUP4 PUSH1 0x40 DUP5 ADD PUSH2 0x330 JUMP JUMPDEST SWAP3 PUSH2 0x812 DUP2 PUSH1 0x60 DUP6 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP3 PUSH2 0x820 DUP3 PUSH1 0x80 DUP4 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP3 PUSH2 0x1F8 PUSH2 0x831 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0x3E8 JUMP JUMPDEST SWAP4 PUSH1 0xE0 PUSH2 0x841 DUP3 PUSH1 0xC0 DUP8 ADD PUSH2 0x3E8 JUMP JUMPDEST SWAP5 ADD PUSH2 0x7C2 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x26A PUSH2 0x85E CALLDATASIZE PUSH1 0x4 PUSH2 0x7D1 JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x1618 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x87D CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x5C2 PUSH2 0x162A JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x89B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4 JUMP JUMPDEST PUSH2 0x166E JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x8B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x168E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 PUSH2 0x1F8 SWAP3 PUSH1 0x7 PUSH2 0x4E7 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x462 PUSH2 0x8DE CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x8F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x5C2 PUSH2 0x1697 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP2 PUSH2 0x330 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x925 CALLDATASIZE PUSH1 0x4 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x16BB JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x93D CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 PUSH2 0x1F8 SWAP3 PUSH1 0x6 PUSH2 0x208 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x462 PUSH2 0x968 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4 JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP1 PUSH1 0x20 PUSH2 0x368 DUP3 DUP7 PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x99C CALLDATASIZE PUSH1 0x4 PUSH2 0x96D JUMP JUMPDEST SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 DUP1 PUSH2 0x577 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x9BD CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x5C2 PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 SLOAD PUSH2 0x636 JUMP JUMPDEST SWAP1 PUSH2 0x9E5 PUSH2 0x9E0 PUSH1 0x0 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x9EE CALLER PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x9FC JUMPI PUSH2 0x1E2 SWAP2 PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E60F985 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F8 SWAP1 CALLDATASIZE SWAP1 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 SLOAD PUSH2 0xA1D JUMP JUMPDEST SWAP1 PUSH2 0xA66 PUSH2 0xA3B DUP3 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xA61 PUSH2 0xA5D PUSH2 0x1F8 PUSH2 0xA57 PUSH2 0xA52 DUP9 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST SWAP4 PUSH2 0x1784 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xA73 JUMPI PUSH2 0x1E2 SWAP2 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC4C3834B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xAA8 JUMPI JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST SWAP1 PUSH2 0xAD8 PUSH2 0xABA DUP3 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xAD2 PUSH2 0x1E0 PUSH2 0xACC PUSH2 0x1C0 DUP5 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA9B JUMP JUMPDEST TIMESTAMP LT PUSH2 0xAE7 JUMPI PUSH2 0x1E2 SWAP2 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20FD4DFF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB22 PUSH2 0x1F8 PUSH2 0xB2A SWAP4 SWAP1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xAF9 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0xB59 SWAP2 POP PUSH2 0xB54 PUSH1 0x0 PUSH2 0xB4F DUP4 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST PUSH32 0xC16EC4190AFC7DD9E0B0C866BD421D7EA070F2395FCEE05567614D63FAC17940 PUSH2 0xB83 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0x9D2 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xBA2 PUSH2 0x9E0 PUSH1 0x0 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0xBAB CALLER PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x9FC JUMPI PUSH2 0x1E2 SWAP3 SWAP2 SWAP1 PUSH2 0xBD9 PUSH2 0xBC2 DUP3 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xA61 PUSH2 0xA5D PUSH2 0x1F8 PUSH2 0xA57 PUSH2 0xA52 DUP10 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST PUSH2 0xA73 JUMPI PUSH2 0x1E2 SWAP3 PUSH2 0xC00 SWAP2 POP PUSH2 0xBFA SWAP1 PUSH2 0xB54 PUSH1 0x0 PUSH2 0xB4F DUP4 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST SWAP2 ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH32 0x36D81B3901A7AF2FB3E1C438BB2A725BA9B55DDF607A668ABF262B0C41885679 PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP3 SWAP2 PUSH2 0xB93 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xC4B PUSH2 0x9E0 PUSH1 0x0 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0xC54 CALLER PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x9FC JUMPI PUSH2 0x1E2 SWAP3 SWAP2 SWAP1 PUSH2 0xC6B PUSH2 0xBC2 DUP3 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xA73 JUMPI PUSH2 0x1E2 SWAP3 PUSH2 0xC92 SWAP2 POP PUSH2 0xC8C SWAP1 PUSH2 0xB54 PUSH1 0x0 PUSH2 0xB4F DUP4 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST SWAP2 PUSH2 0x1FB JUMP JUMPDEST SWAP1 PUSH32 0xA465A1FEE99EB9FB08A22B000DCDBB13D227AEA872015D53C785FA44F2350E9D PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP3 SWAP2 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH1 0x40 SHR PUSH2 0x42A JUMP JUMPDEST PUSH2 0x1F8 SWAP1 SLOAD PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 SLOAD PUSH2 0xCDE JUMP JUMPDEST PUSH2 0xCE3 PUSH2 0x1F8 PUSH2 0x1F8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH2 0xCE3 PUSH2 0x1F8 PUSH2 0x1F8 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD3E PUSH2 0x1F8 PUSH2 0xB2A SWAP3 PUSH2 0xD17 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xD07 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x40 SHL SWAP1 PUSH1 0x40 SHL PUSH2 0xB09 JUMP JUMPDEST SWAP1 PUSH2 0xD64 PUSH2 0x1F8 PUSH2 0xB2A SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x24B SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 PUSH2 0xDC0 PUSH2 0xDBA PUSH2 0xDB6 DUP4 PUSH2 0xCD4 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xCF0 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0xDCD DUP5 PUSH2 0xCFA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND EQ DUP1 PUSH2 0xECC JUMPI JUMPDEST PUSH1 0x1 SWAP4 PUSH2 0xDFC PUSH2 0xDEE DUP7 PUSH2 0xCFA JUMP JUMPDEST SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST EQ SWAP1 DUP2 PUSH2 0xEA8 JUMPI JUMPDEST ISZERO JUMPDEST SWAP1 DUP2 PUSH2 0xE9F JUMPI JUMPDEST POP PUSH2 0xE8D JUMPI PUSH2 0xE36 SWAP1 DUP3 PUSH2 0xE2D DUP7 PUSH2 0xE24 DUP8 PUSH2 0xCFA JUMP JUMPDEST SWAP9 ADD SWAP8 DUP9 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0xE7E JUMPI PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xE3F JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xE6D PUSH2 0xE79 SWAP3 PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP5 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD74 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xE88 DUP5 DUP8 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO SWAP1 POP CODESIZE PUSH2 0xE0D JUMP JUMPDEST SWAP1 POP PUSH2 0xE06 PUSH2 0xEB6 ADDRESS PUSH2 0x4DE JUMP JUMPDEST EXTCODESIZE PUSH2 0xEC3 PUSH2 0xA5D DUP9 PUSH2 0x1FB JUMP JUMPDEST EQ SWAP2 SWAP1 POP PUSH2 0xE04 JUMP JUMPDEST POP DUP2 PUSH2 0xDDF JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xB09 JUMP JUMPDEST SWAP1 PUSH2 0xEED PUSH2 0x1F8 PUSH2 0xB2A SWAP3 PUSH2 0x1FB JUMP JUMPDEST DUP3 SLOAD PUSH2 0xED3 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0xB09 JUMP JUMPDEST SWAP1 PUSH2 0xF0D PUSH2 0x1F8 PUSH2 0xB2A SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0xF20 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0xF34 PUSH2 0xF2D PUSH1 0x1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x2 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0xF4A PUSH2 0xF43 PUSH3 0x278D00 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x3 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0xF56 PUSH1 0x1 PUSH1 0x4 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0xF70 PUSH2 0x182D JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xB09 JUMP JUMPDEST SWAP1 PUSH2 0xF94 PUSH2 0x1F8 PUSH2 0xB2A SWAP3 PUSH2 0x4DE JUMP JUMPDEST DUP3 SLOAD PUSH2 0xF75 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH1 0x1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0xF64 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0xFBC PUSH2 0x182D JUMP JUMPDEST PUSH2 0xBFA PUSH2 0xFDC SWAP2 PUSH2 0xFD7 DUP5 PUSH2 0xFD2 DUP4 PUSH1 0x7 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST SWAP1 PUSH32 0xA4ACC8FB2FCB25932C29564E69D31A4AF2363811E49E9619345A7404744AB8D PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0xFAF JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0x101E PUSH2 0x182D JUMP JUMPDEST PUSH2 0xBFA PUSH2 0x1034 SWAP2 PUSH2 0xFD7 DUP5 PUSH2 0xFD2 DUP4 PUSH1 0x8 PUSH2 0x4E7 JUMP JUMPDEST SWAP1 PUSH32 0x98B64277BBFAD703C35B1FFC6D48D78E3394E496B498C2B3278CE4D06756971D PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x1071 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x1F8 PUSH2 0x1F8 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0xF56 PUSH1 0x0 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x1069 JUMP JUMPDEST CALLER PUSH2 0x10AD PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x10BF PUSH2 0x10B9 DUP4 PUSH2 0x3D3 JUMP JUMPDEST SWAP2 PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x10CD JUMPI PUSH2 0x1E2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH2 0xA0E SWAP1 PUSH2 0x10DA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x597 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x1784 JUMP JUMPDEST SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x110E PUSH2 0x9E0 PUSH1 0x0 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x1117 CALLER PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x9FC JUMPI PUSH2 0x1F8 SWAP9 PUSH2 0x130E JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x42A JUMP JUMPDEST PUSH2 0x1F8 SWAP1 SLOAD PUSH2 0x1125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0x1158 JUMPI JUMP JUMPDEST PUSH2 0x1138 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x114E JUMP JUMPDEST CALLDATALOAD PUSH2 0x1F8 DUP2 PUSH2 0x61F JUMP JUMPDEST CALLDATALOAD PUSH2 0x1F8 DUP2 PUSH2 0x63F JUMP JUMPDEST CALLDATALOAD PUSH2 0x1F8 DUP2 PUSH2 0x1C7 JUMP JUMPDEST CALLDATALOAD PUSH2 0x1F8 DUP2 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x200 PUSH2 0x60B JUMP JUMPDEST SWAP1 PUSH2 0x24B SWAP1 PUSH2 0x115D JUMP JUMPDEST SWAP1 PUSH2 0x24B SWAP1 PUSH2 0x3D3 JUMP JUMPDEST SWAP1 PUSH2 0x24B SWAP1 PUSH2 0x636 JUMP JUMPDEST SWAP1 PUSH2 0xEED PUSH2 0x1F8 PUSH2 0xB2A SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xAA8 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH2 0x24B SWAP1 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x24B SWAP1 PUSH2 0x4DE JUMP JUMPDEST SWAP1 PUSH2 0x1E0 DUP1 PUSH2 0x1E2 SWAP4 PUSH2 0x120B PUSH1 0x0 DUP3 ADD MLOAD PUSH1 0x0 DUP7 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0x121A PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x1229 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x123B PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x124D PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x125F PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x1271 PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x1280 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x1294 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x12A5 PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x120 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x12B6 PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x140 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x12C7 PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x160 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x180 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x12E5 PUSH2 0x1A0 DUP3 ADD MLOAD PUSH2 0x1A0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x12F6 PUSH2 0x1C0 DUP3 ADD MLOAD PUSH2 0x1C0 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x200 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x11F0 JUMP JUMPDEST POP SWAP8 SWAP7 SWAP5 SWAP6 SWAP2 SWAP3 SWAP2 PUSH2 0x1329 PUSH2 0x1324 DUP11 PUSH1 0x6 PUSH2 0x208 JUMP JUMPDEST PUSH2 0x112E JUMP JUMPDEST PUSH2 0x1606 JUMPI PUSH2 0x1337 PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x1567 JUMPI JUMPDEST DUP4 ISZERO DUP1 PUSH2 0x1555 JUMPI JUMPDEST PUSH2 0x151C JUMPI DUP4 DUP1 PUSH2 0x1543 JUMPI JUMPDEST DUP1 PUSH2 0x152E JUMPI JUMPDEST PUSH2 0x151C JUMPI DUP9 SWAP7 PUSH2 0x1367 PUSH1 0x40 DUP9 ADD PUSH2 0x1167 JUMP JUMPDEST SWAP7 PUSH1 0xA0 DUP2 ADD SWAP3 PUSH2 0x1379 PUSH1 0xC0 DUP4 ADD PUSH2 0x1171 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1386 SWAP1 PUSH2 0x117B JUMP JUMPDEST SWAP4 PUSH2 0x100 DUP4 ADD SWAP2 PUSH2 0x1396 DUP4 PUSH2 0x1171 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD PUSH2 0x13A3 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH2 0x160 SWAP1 SWAP5 ADD SWAP5 PUSH2 0x13B3 DUP7 PUSH2 0x1185 JUMP JUMPDEST SWAP6 PUSH1 0x20 ADD PUSH2 0x13C0 SWAP1 PUSH2 0x117B JUMP JUMPDEST SWAP7 PUSH2 0x13CB PUSH1 0x3 PUSH2 0xA24 JUMP JUMPDEST SWAP13 PUSH2 0x13D4 PUSH2 0x118F JUMP JUMPDEST SWAP15 DUP16 SWAP2 PUSH2 0x13E1 SWAP1 DUP4 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD MSTORE PUSH2 0x13F7 SWAP1 PUSH1 0x60 DUP15 ADD PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x1404 SWAP1 PUSH1 0x80 DUP14 ADD PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x1411 SWAP1 PUSH1 0xA0 DUP13 ADD PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x141E SWAP1 PUSH1 0xC0 DUP12 ADD PUSH2 0x11AE JUMP JUMPDEST PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x1431 SWAP1 PUSH2 0x100 DUP10 ADD PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE ISZERO ISZERO PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x1A0 DUP4 ADD MSTORE PUSH2 0x145D TIMESTAMP PUSH2 0x1C0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E0 DUP3 ADD MSTORE PUSH2 0x146D PUSH1 0x2 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x147B PUSH1 0x1 DUP3 ADD PUSH1 0x2 PUSH2 0xEDD JUMP JUMPDEST SWAP3 PUSH2 0x1485 DUP3 PUSH2 0x1784 JUMP JUMPDEST PUSH2 0x148F PUSH1 0x2 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x149A SWAP1 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST SWAP1 PUSH2 0x14A4 SWAP2 PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x14AF SWAP1 PUSH1 0x6 PUSH2 0x208 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x14BA SWAP2 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x14C4 PUSH1 0x2 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x14CD DUP2 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0x14D8 SWAP1 PUSH1 0x2 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x14E1 SWAP1 PUSH2 0x1FB JUMP JUMPDEST SWAP1 PUSH2 0x14EB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14F6 DUP2 SWAP3 DUP3 PUSH2 0x12FD JUMP JUMPDEST SUB PUSH32 0xF689AC390301AED9C1CF10F3C8DD4BF55A902B4D9386C0A491605573142932DD SWAP2 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE803A883 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x153C PUSH2 0x1F8 PUSH1 0x0 PUSH2 0x1FB JUMP JUMPDEST DUP4 EQ PUSH2 0x1355 JUMP JUMPDEST POP PUSH2 0x154E PUSH1 0x0 PUSH2 0x1FB JUMP JUMPDEST DUP6 EQ PUSH2 0x134F JUMP JUMPDEST POP PUSH2 0x1560 PUSH1 0x0 PUSH2 0x1FB JUMP JUMPDEST DUP6 GT PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD PUSH2 0x1574 DUP2 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x1587 PUSH2 0x1581 PUSH1 0x1 PUSH2 0x115D JUMP JUMPDEST SWAP2 PUSH2 0x115D JUMP JUMPDEST EQ DUP1 PUSH2 0x15EF JUMPI JUMPDEST PUSH2 0x15DD JUMPI PUSH2 0x159B SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x15A8 PUSH2 0x1581 PUSH1 0x0 PUSH2 0x115D JUMP JUMPDEST EQ DUP1 PUSH2 0x15C6 JUMPI JUMPDEST ISZERO PUSH2 0x133C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C5E0F3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x15D8 PUSH2 0xDB6 PUSH2 0x1324 DUP10 PUSH1 0x8 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x175613F PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x1601 PUSH2 0xDB6 PUSH2 0x1324 DUP5 PUSH1 0x7 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39B9E3F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1F8 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x10F9 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 JUMPDEST ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x1663 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH1 0x3 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x1683 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH1 0x0 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH2 0x1651 PUSH2 0x184B JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x16B0 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH1 0x4 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x16D0 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x16E4 DUP2 PUSH1 0x0 PUSH2 0x16DE PUSH2 0x184B JUMP JUMPDEST ADD PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x16F8 PUSH2 0x16F2 PUSH2 0xFD7 PUSH2 0x162A JUMP JUMPDEST SWAP2 PUSH2 0x4DE JUMP JUMPDEST SWAP1 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0x1739 PUSH2 0x182D JUMP JUMPDEST PUSH2 0xBFA PUSH2 0x174F SWAP2 PUSH2 0xB54 DUP5 PUSH2 0xFD2 DUP4 PUSH1 0x6 PUSH2 0x208 JUMP JUMPDEST SWAP1 PUSH32 0xA1D716B435381DEE582B1B1AC7415A66045F57A26FF62B779B9051BA7AFC5735 PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0x172C JUMP JUMPDEST PUSH2 0x17AC PUSH2 0x1790 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x17A0 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 PUSH2 0x12FD JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x17BE PUSH2 0x17B7 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x17C2 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xB09 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x17FC PUSH2 0x1F8 PUSH2 0xB2A SWAP4 PUSH2 0x4DE JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0x1E2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x17EB JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x1828 PUSH1 0x0 DUP1 PUSH2 0x1822 PUSH2 0x184B JUMP JUMPDEST ADD PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x1892 JUMP JUMPDEST PUSH2 0x1835 PUSH2 0x162A JUMP JUMPDEST CALLER SWAP1 PUSH2 0x1843 PUSH2 0x10B9 DUP4 PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x10CD JUMPI POP JUMP JUMPDEST PUSH32 0x237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00 SWAP1 JUMP JUMPDEST PUSH2 0x187A PUSH2 0xDB6 PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0x1880 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x18CC PUSH2 0x16F2 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 PUSH2 0xFD7 DUP5 PUSH2 0x18C6 DUP4 PUSH2 0x9C8 JUMP JUMPDEST SWAP3 PUSH2 0xF84 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0xCD4 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP5 JUMPI 0xB5 0xD9 LOG0 0xC8 PUSH19 0x7E47BA96F5E8C391DB933A01E3061A0215DCAE JUMP INVALID PUSH6 0xD4DF64736F6C PUSH4 0x43000818 STOP CALLER ",
              "sourceMap": "347:5208:8:-:0;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 638,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 1000,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_bool": {
                  "entryPoint": 1164,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_bool": {
                  "entryPoint": 2302,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_contract_IERC721": {
                  "entryPoint": 1608,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_enum_Side": {
                  "entryPoint": 1577,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_Escrow": {
                  "entryPoint": 1621,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_Escrow_calldata": {
                  "entryPoint": 688,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_Escrow_memory_ptr": {
                  "entryPoint": 1938,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_MarketOffer_calldata": {
                  "entryPoint": 1986,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bool": {
                  "entryPoint": 816,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 1013,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_uint256": {
                  "entryPoint": 484,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 469,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256t_bool": {
                  "entryPoint": 2413,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_uint256t_struct_Escrow_calldata": {
                  "entryPoint": 703,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_uint256t_struct_Escrow_calldatat_bool": {
                  "entryPoint": 829,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_uint256t_struct_Escrow_calldatat_uint256": {
                  "entryPoint": 904,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_uint256t_uint256t_boolt_bytes32t_uint256t_addresst_addresst_struct_MarketOffer_calldata": {
                  "entryPoint": 2001,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 8
                },
                "abi_encode_address": {
                  "entryPoint": 1422,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_bytes32_to_bytes32": {
                  "entryPoint": 587,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_contract_IERC721": {
                  "entryPoint": 4583,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_enum_Side": {
                  "entryPoint": 4574,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_rational_by": {
                  "entryPoint": 3444,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_rational_by_to_uint64": {
                  "entryPoint": 3435,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_struct_Escrow": {
                  "entryPoint": 4592,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_struct_Escrow_memory_ptr": {
                  "entryPoint": 4861,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 1431,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_to_uint256_fromStack": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_memory": {
                  "entryPoint": 1547,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_struct_struct_Escrow_storage_ptr": {
                  "entryPoint": 4495,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_dataslot_bytes": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_bytes": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 2715,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 979,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_contract_IERC721": {
                  "entryPoint": 1590,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_enum_Side": {
                  "entryPoint": 4445,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint64": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by_1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint64": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 1246,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bytes32_to_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC20_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC721_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_Initializable_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_enum_Side_to_uint8": {
                  "entryPoint": 4565,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_0_by_1_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 4230,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 4217,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint64": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_struct_Escrow_calldata_to_struct_Escrow": {
                  "entryPoint": 2578,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint64": {
                  "entryPoint": 3322,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1237,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1217,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 507,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint64_to_uint64": {
                  "entryPoint": 3351,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_EscrowController_init": {
                  "entryPoint": 1033,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_TOKEN_SUPPLIER": {
                  "entryPoint": 1447,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_acceptOwnership": {
                  "entryPoint": 1362,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_claimEscrow": {
                  "entryPoint": 739,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_escrowIndex": {
                  "entryPoint": 781,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_escrowedTokens": {
                  "entryPoint": 2386,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_escrows": {
                  "entryPoint": 591,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_hashEscrow": {
                  "entryPoint": 1959,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_kettle": {
                  "entryPoint": 2477,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_lockTime": {
                  "entryPoint": 661,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_openEscrow": {
                  "entryPoint": 2120,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 2157,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_pendingOwner": {
                  "entryPoint": 2275,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_rejectEscrow": {
                  "entryPoint": 879,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_renounceOwnership": {
                  "entryPoint": 1338,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setEscrowedToken": {
                  "entryPoint": 2441,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setKettle": {
                  "entryPoint": 2208,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setLockTime": {
                  "entryPoint": 2184,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setTokenSupplier": {
                  "entryPoint": 1140,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setWhitelistOnly": {
                  "entryPoint": 2322,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_settleEscrow": {
                  "entryPoint": 954,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferOwnership": {
                  "entryPoint": 2346,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_whitelistBidTaker": {
                  "entryPoint": 1313,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_whitelistOnly": {
                  "entryPoint": 1095,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_whitelistedAskMaker": {
                  "entryPoint": 1192,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_whitelistedAskMakers": {
                  "entryPoint": 2248,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_whitelistedBidTakers": {
                  "entryPoint": 1286,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_dynamict_address": {
                  "entryPoint": 1386,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_bool": {
                  "entryPoint": 1057,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_bytes32": {
                  "entryPoint": 544,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_8t_bool": {
                  "entryPoint": 3272,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_bool": {
                  "entryPoint": 4389,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_bytes32": {
                  "entryPoint": 2589,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_uint64": {
                  "entryPoint": 3294,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1508,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_EscrowController_init": {
                  "entryPoint": 3931,
                  "id": 999,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_EscrowController_init_inner": {
                  "entryPoint": 3860,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_Ownable2Step_init": {
                  "entryPoint": 6090,
                  "id": 37,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun__hashEscrow": {
                  "entryPoint": 6020,
                  "id": 1363,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun__transferOwnership": {
                  "entryPoint": 6290,
                  "id": 330,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_acceptOwnership": {
                  "entryPoint": 4260,
                  "id": 135,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_checkInitializing": {
                  "entryPoint": 6255,
                  "id": 507,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 6189,
                  "id": 259,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_claimEscrow": {
                  "entryPoint": 2953,
                  "id": 1303,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_claimEscrow_inner": {
                  "entryPoint": 2874,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_getInitializableStorage": {
                  "entryPoint": null,
                  "id": 584,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_getOwnable2StepStorage": {
                  "entryPoint": 6219,
                  "id": 25,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_getOwnableStorage": {
                  "entryPoint": null,
                  "id": 162,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_hashEscrow": {
                  "entryPoint": 4336,
                  "id": 1345,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_isInitializing": {
                  "entryPoint": 6391,
                  "id": 575,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_msgSender": {
                  "entryPoint": null,
                  "id": 613,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_openEscrow": {
                  "entryPoint": 5656,
                  "id": 1249,
                  "parameterSlots": 8,
                  "returnSlots": 1
                },
                "fun_openEscrow_inner": {
                  "entryPoint": 4878,
                  "id": null,
                  "parameterSlots": 9,
                  "returnSlots": 1
                },
                "fun_owner": {
                  "entryPoint": 5674,
                  "id": 242,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_pendingOwner": {
                  "entryPoint": 5783,
                  "id": 59,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_rejectEscrow": {
                  "entryPoint": 3121,
                  "id": 1330,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_rejectEscrow_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_renounceOwnership": {
                  "entryPoint": 4252,
                  "id": 273,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_renounceOwnership_inner": {
                  "entryPoint": 4239,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_setEscrowedToken": {
                  "entryPoint": 6010,
                  "id": 1098,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_setEscrowedToken_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_setKettle": {
                  "entryPoint": 5774,
                  "id": 1425,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setKettle_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setLockTime": {
                  "entryPoint": 5742,
                  "id": 1023,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setLockTime_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setTokenSupplier": {
                  "entryPoint": 4006,
                  "id": 1011,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setTokenSupplier_inner": {
                  "entryPoint": 3995,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setWhitelistOnly": {
                  "entryPoint": 5819,
                  "id": 1035,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setWhitelistOnly_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_settleEscrow": {
                  "entryPoint": 3261,
                  "id": 1276,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_settleEscrow_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_transferOwnership": {
                  "entryPoint": 5923,
                  "id": 87,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership_111": {
                  "entryPoint": 6160,
                  "id": 111,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_whitelistBidTaker": {
                  "entryPoint": 4191,
                  "id": 1077,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_whitelistBidTaker_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_whitelistedAskMaker": {
                  "entryPoint": 4103,
                  "id": 1056,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_whitelistedAskMaker_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "getter_fun_TOKEN_SUPPLIER": {
                  "entryPoint": 1410,
                  "id": 946,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_escrowIndex": {
                  "entryPoint": 769,
                  "id": 948,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_escrowedTokens": {
                  "entryPoint": 2370,
                  "id": 960,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "getter_fun_escrows": {
                  "entryPoint": 566,
                  "id": 956,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "getter_fun_kettle": {
                  "entryPoint": 2466,
                  "id": 1413,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_lockTime": {
                  "entryPoint": 649,
                  "id": 950,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_whitelistOnly": {
                  "entryPoint": 1083,
                  "id": 952,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_whitelistedAskMakers": {
                  "entryPoint": 2232,
                  "id": 964,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "getter_fun_whitelistedBidTakers": {
                  "entryPoint": 1265,
                  "id": 968,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_uint256": {
                  "entryPoint": 4550,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_wrapping_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_bool_of_address": {
                  "entryPoint": 1255,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_bool_of_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_bytes32_of_uint256": {
                  "entryPoint": 520,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_escrowUnlocked": {
                  "entryPoint": 2733,
                  "id": 1404,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_initializer": {
                  "entryPoint": 3460,
                  "id": 439,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyInitializing": {
                  "entryPoint": 6082,
                  "id": 494,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_onlyKettle": {
                  "entryPoint": 3132,
                  "id": 1438,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "modifier_onlyKettle_1118": {
                  "entryPoint": 4345,
                  "id": 1438,
                  "parameterSlots": 9,
                  "returnSlots": 1
                },
                "modifier_onlyKettle_1284": {
                  "entryPoint": 2514,
                  "id": 1438,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_onlyKettle_1313": {
                  "entryPoint": 2963,
                  "id": 1438,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "modifier_onlyOwner": {
                  "entryPoint": 5828,
                  "id": 226,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1004": {
                  "entryPoint": 3940,
                  "id": 226,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1016": {
                  "entryPoint": 5719,
                  "id": 226,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1028": {
                  "entryPoint": 5796,
                  "id": 226,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1042": {
                  "entryPoint": 4015,
                  "id": 226,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1063": {
                  "entryPoint": 4113,
                  "id": 226,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1084": {
                  "entryPoint": 5932,
                  "id": 226,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1418": {
                  "entryPoint": 5751,
                  "id": 226,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_263": {
                  "entryPoint": 4201,
                  "id": 226,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_validEscrow": {
                  "entryPoint": null,
                  "id": 1385,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "modifier_validEscrow_1288": {
                  "entryPoint": 2606,
                  "id": 1385,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_validEscrow_1317": {
                  "entryPoint": null,
                  "id": 1385,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "panic_error_0x11": {
                  "entryPoint": 2693,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 4408,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 1486,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint64": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_address": {
                  "entryPoint": 4485,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_contract_IERC721": {
                  "entryPoint": 4465,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_enum_Side": {
                  "entryPoint": 4455,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_uint256": {
                  "entryPoint": 4475,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_address": {
                  "entryPoint": 1399,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_bool": {
                  "entryPoint": 1072,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_bytes32": {
                  "entryPoint": 555,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 2504,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": 3284,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bytes32": {
                  "entryPoint": 2596,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_t_bool": {
                  "entryPoint": 4398,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint64": {
                  "entryPoint": 3312,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_64": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_64_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_set_to_zero_address": {
                  "entryPoint": 6148,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "storage_set_to_zero_bytes32": {
                  "entryPoint": 2862,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_byte_slice_20_shift": {
                  "entryPoint": 3957,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_8_shift": {
                  "entryPoint": 3335,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_dynamic20": {
                  "entryPoint": 6098,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": 2809,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 3795,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 3828,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_8": {
                  "entryPoint": 3397,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_address_to_address": {
                  "entryPoint": 6123,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_bytes32_to_bytes32": {
                  "entryPoint": 2835,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_address_to_address": {
                  "entryPoint": 3972,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_bool_to_bool": {
                  "entryPoint": 3412,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_bool_to_t_bool": {
                  "entryPoint": 3837,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_bytes32_to_bytes32": {
                  "entryPoint": 4536,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_uint256_to_uint256": {
                  "entryPoint": 3805,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_uint64_to_uint64": {
                  "entryPoint": 3374,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_assert_enum_Side": {
                  "entryPoint": 4430,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 991,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 808,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_contract_IERC721": {
                  "entryPoint": 1599,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_enum_Side": {
                  "entryPoint": 1567,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 455,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "write_to_memory_address": {
                  "entryPoint": 4516,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_contract_IERC721": {
                  "entryPoint": 4526,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_enum_Side": {
                  "entryPoint": 4506,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "zero_value_for_split_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c8063012f52ee146101c25780630d668087146101bd57806313569cfd146101b85780632811e6bb146101b357806336cede41146101ae57806340d30854146101a9578063490b4846146101a45780634b4687b51461019f5780634bf1b68d1461019a57806353ae97391461019557806355d8525e146101905780636ba2700e1461018b578063715018a61461018657806379ba5097146101815780637c6e610d1461017c57806385b811161461017757806389d8b82d146101725780638da5cb5b1461016d578063ae04d45d14610168578063b784036914610163578063c22e54a11461015e578063e30c397814610159578063ea05a8c614610154578063f2fde38b1461014f578063f4be779c1461014a578063f8b963b1146101455763fd91d7cd036101d0576109ad565b610989565b610952565b61092a565b610912565b6108e3565b6108c8565b6108a0565b610888565b61086d565b610848565b6107a7565b6105a7565b610552565b61053a565b610521565b610506565b6104a8565b610474565b610447565b610409565b6103ba565b61036f565b61030d565b6102e3565b610295565b61024f565b805b036101d057565b600080fd5b905035906101e2826101c7565b565b906020828203126101d0576101f8916101d5565b90565b6101f86101f86101f89290565b90610212906101fb565b600052602052604060002090565b6101f8916008021c81565b906101f89154610220565b60006102466101f8926005610208565b61022b565b9052565b346101d05761027a61026a6102653660046101e4565b610236565b6040519182918290815260200190565b0390f35b60009103126101d057565b6101f86000600361022b565b346101d0576102a536600461027e565b61027a61026a610289565b90816102009103126101d05790565b9190610220838203126101d0576101f89060206102dc82866101d5565b94016102b0565b346101d0576102fc6102f63660046102bf565b90610b89565b604051005b6101f86000600261022b565b346101d05761031d36600461027e565b61027a61026a610301565b8015156101c9565b905035906101e282610328565b9091610240828403126101d0576101f861035784846101d5565b9361022061036882602087016102b0565b9401610330565b346101d0576102fc61038236600461033d565b91610c31565b9091610240828403126101d0576101f86103a284846101d5565b936102206103b382602087016102b0565b94016101d5565b346101d0576102fc6103cd366004610388565b91610cbd565b6001600160a01b031690565b6101c9816103d3565b905035906101e2826103df565b906020828203126101d0576101f8916103e8565b346101d0576102fc61041c3660046103f5565b610f5b565b6101f8916008021c5b60ff1690565b906101f89154610421565b6101f860006004610430565b346101d05761045736600461027e565b61027a61046261043b565b60405191829182901515815260200190565b346101d0576102fc6104873660046103f5565b610fa6565b91906040838203126101d0576101f890602061036882866103e8565b346101d0576102fc6104bb36600461048c565b90611007565b6101f8906103d3906001600160a01b031682565b6101f8906104c1565b6101f8906104d5565b90610212906104de565b60006105016101f89260086104e7565b610430565b346101d05761027a61046261051c3660046103f5565b6104f1565b346101d0576102fc61053436600461048c565b9061105f565b346101d05761054a36600461027e565b6102fc61109c565b346101d05761056236600461027e565b6102fc6110a4565b6101f8916008021c6103d3565b906101f8915461056a565b6101f860006001610577565b61024b906103d3565b6020810192916101e2919061058e565b346101d0576105b736600461027e565b61027a6105c2610582565b60405191829182610597565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761060657604052565b6105ce565b906101e261061860405190565b92836105e4565b600211156101d057565b905035906101e28261061f565b6101f8906103d3565b6101c981610636565b905035906101e28261063f565b919091610200818403126101d05761078c61067161020061060b565b9361067c8184610629565b855261068b81602085016101d5565b602086015261069d81604085016101d5565b60408601526106af81606085016103e8565b60608601526106c181608085016103e8565b60808601526106d38160a08501610648565b60a08601526106e58160c08501610648565b60c08601526106f78160e085016101d5565b60e086015261010061070b828286016103e8565b9086015261012061071e828286016101d5565b90860152610140610731828286016101d5565b90860152610160610744828286016101d5565b9086015261018061075782828601610330565b908601526101a061076a828286016101d5565b908601526101c061077d828286016101d5565b908601526101e08093016101d5565b90830152565b90610200828203126101d0576101f891610655565b346101d05761027a61026a6107bd366004610792565b6110f0565b90816101e09103126101d05790565b91906102c0838203126101d0576107e881846101d5565b926107f682602083016101d5565b926108048360408401610330565b9261081281606085016101d5565b9261082082608083016101d5565b926101f86108318460a085016103e8565b9360e06108418260c087016103e8565b94016107c2565b346101d05761027a61026a61085e3660046107d1565b96959095949194939293611618565b346101d05761087d36600461027e565b61027a6105c261162a565b346101d0576102fc61089b3660046101e4565b61166e565b346101d0576102fc6108b33660046103f5565b61168e565b60006105016101f89260076104e7565b346101d05761027a6104626108de3660046103f5565b6108b8565b346101d0576108f336600461027e565b61027a6105c2611697565b906020828203126101d0576101f891610330565b346101d0576102fc6109253660046108fe565b6116bb565b346101d0576102fc61093d3660046103f5565b611723565b60006105016101f8926006610208565b346101d05761027a6104626109683660046101e4565b610942565b91906040838203126101d0576101f890602061036882866101d5565b346101d0576102fc61099c36600461096d565b9061177a565b6101f8600080610577565b346101d0576109bd36600461027e565b61027a6105c26109a2565b6101f89054610636565b906109e56109e060006109c8565b6103d3565b6109ee336103d3565b036109fc576101e291610a2e565b604051632e60f98560e11b8152600490fd5b0390fd5b6101f8903690610655565b6101f89081565b6101f89054610a1d565b90610a66610a3b82610a12565b610a61610a5d6101f8610a57610a52886005610208565b610a24565b93611784565b9190565b141590565b610a73576101e291610aad565b60405163c4c3834b60e01b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b91908201809211610aa857565b610a85565b90610ad8610aba82610a12565b610ad26101e0610acc6101c084015190565b92015190565b90610a9b565b4210610ae7576101e291610b3a565b6040516320fd4dff60e11b8152600490fd5b9160001960089290920291821b911b5b9181191691161790565b9190610b226101f8610b2a9390565b908354610af9565b9055565b6101e291600091610b13565b610b599150610b546000610b4f836005610208565b610b2e565b6101fb565b7fc16ec4190afc7dd9e0b0c866bd421d7ea070f2395fcee05567614d63fac17940610b8360405190565b600090a2565b906101e2916109d2565b9190610ba26109e060006109c8565b610bab336103d3565b036109fc576101e2929190610bd9610bc282610a12565b610a61610a5d6101f8610a57610a52896005610208565b610a73576101e292610c009150610bfa90610b546000610b4f836005610208565b91151590565b907f36d81b3901a7af2fb3e1c438bb2a725ba9b55ddf607a668abf262b0c41885679610c2b60405190565b600090a3565b906101e29291610b93565b9190610c4b6109e060006109c8565b610c54336103d3565b036109fc576101e2929190610c6b610bc282610a12565b610a73576101e292610c929150610c8c90610b546000610b4f836005610208565b916101fb565b907fa465a1fee99eb9fb08a22b000dcdbb13d227aea872015d53c785fa44f2350e9d610c2b60405190565b906101e29291610c3c565b6101f89060401c61042a565b6101f89054610cc8565b6101f8905b67ffffffffffffffff1690565b6101f89054610cde565b610ce36101f86101f89290565b9067ffffffffffffffff90610b09565b610ce36101f86101f89267ffffffffffffffff1690565b90610d3e6101f8610b2a92610d17565b8254610d07565b9060ff60401b9060401b610b09565b90610d646101f8610b2a92151590565b8254610d45565b61024b90610cfa565b6020810192916101e29190610d6b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081610dc0610dba610db683610cd4565b1590565b91610cf0565b90600092610dcd84610cfa565b67ffffffffffffffff84161480610ecc575b600193610dfc610dee86610cfa565b9167ffffffffffffffff1690565b149081610ea8575b155b9081610e9f575b50610e8d57610e369082610e2d86610e2487610cfa565b98019788610d2e565b610e7e57610f14565b610e3f57505050565b610e6d610e79927fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d294610d54565b60405191829182610d74565b0390a1565b610e888487610d54565b610f14565b60405163f92ee8a960e01b8152600490fd5b15905038610e0d565b9050610e06610eb6306104de565b3b610ec3610a5d886101fb565b14919050610e04565b5081610ddf565b9060001990610b09565b90610eed6101f8610b2a926101fb565b8254610ed3565b9060ff90610b09565b90610f0d6101f8610b2a92151590565b8254610ef4565b6101e290610f206117ca565b610f34610f2d60016101fb565b6002610edd565b610f4a610f4362278d006101fb565b6003610edd565b610f5660016004610efd565b611810565b6101e290610d84565b6101e290610f7061182d565b610f9b565b906001600160a01b0390610b09565b90610f946101f8610b2a926104de565b8254610f75565b6101e2906001610f84565b6101e290610f64565b906101e291610fbc61182d565b610bfa610fdc91610fd784610fd28360076104e7565b610efd565b6104de565b907f0a4acc8fb2fcb25932c29564e69d31a4af2363811e49e9619345a7404744ab8d610c2b60405190565b906101e291610faf565b906101e29161101e61182d565b610bfa61103491610fd784610fd28360086104e7565b907f98b64277bbfad703c35b1ffc6d48d78e3394e496b498c2b3278ce4d06756971d610c2b60405190565b906101e291611011565b61107161182d565b6101e261108f565b6103d36101f86101f89290565b6101f890611079565b6101e2610f566000611086565b6101e2611069565b336110ad611697565b6110bf6110b9836103d3565b916103d3565b036110cd576101e290611810565b610a0e906110da60405190565b63118cdaa760e01b815291829160048301610597565b6101f890611784565b979695949392919061110e6109e060006109c8565b611117336103d3565b036109fc576101f89861130e565b6101f89061042a565b6101f89054611125565b634e487b7160e01b600052602160045260246000fd5b6002111561115857565b611138565b906101e28261114e565b356101f88161061f565b356101f88161063f565b356101f8816101c7565b356101f8816103df565b6101f861020061060b565b9061024b9061115d565b9061024b906103d3565b9061024b90610636565b90610eed6101f8610b2a9290565b6000198114610aa85760010190565b6101f89061115d565b61024b906111d5565b61024b906104de565b906101e0806101e29361120b600082015160008601906111de565b61121a60208201516020860152565b61122960408201516040860152565b61123b6060820151606086019061058e565b61124d6080820151608086019061058e565b61125f60a082015160a08601906111e7565b61127160c082015160c08601906111e7565b61128060e082015160e0860152565b61129461010082015161010086019061058e565b6112a5610120820151610120860152565b6112b6610140820151610140860152565b6112c7610160820151610160860152565b610180818101511515908501526112e56101a08201516101a0860152565b6112f66101c08201516101c0860152565b0151910152565b610200810192916101e291906111f0565b50979694959192916113296113248a6006610208565b61112e565b61160657611337600461112e565b611567575b831580611555575b61151c578380611543575b8061152e575b61151c57889661136760408801611167565b9660a081019261137960c08301611171565b936040016113869061117b565b9361010083019161139683611171565b926020016113a39061117b565b610160909401946113b386611185565b956020016113c09061117b565b966113cb6003610a24565b9c6113d461118f565b9e8f916113e1908361119a565b6020820152604001526113f79060608e016111a4565b6114049060808d016111a4565b6114119060a08c016111ae565b61141e9060c08b016111ae565b60e08901526114319061010089016111a4565b61012087015261014086015261016085015215156101808401526101a083015261145d426101c0840152565b6101e082015261146d6002610a24565b61147b600182016002610edd565b9261148582611784565b61148f6002610a24565b61149a906005610208565b906114a4916111b8565b6114af906006610208565b60016114ba91610efd565b6114c46002610a24565b6114cd816111c6565b6114d8906002610edd565b6114e1906101fb565b906114eb60405190565b6114f68192826112fd565b037ff689ac390301aed9c1cf10f3c8dd4bf55a902b4d9386c0a491605573142932dd91a2565b60405163e803a88360e01b8152600490fd5b5061153c6101f860006101fb565b8314611355565b5061154e60006101fb565b851461134f565b5061156060006101fb565b8511611344565b6040860161157481611167565b611587611581600161115d565b9161115d565b14806115ef575b6115dd5761159b90611167565b6115a8611581600061115d565b14806115c6575b1561133c57604051637c5e0f3b60e01b8152600490fd5b506115d8610db66113248960086104e7565b6115af565b604051630175613f60e51b8152600490fd5b50611601610db66113248460076104e7565b61158e565b60405163039b9e3f60e61b8152600490fd5b6101f8979695949392919060006110f9565b6101f860007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b016109c8565b6101e29061166361182d565b6101e2906003610edd565b6101e290611657565b6101e29061168361182d565b6101e2906000610f84565b6101e290611677565b6101f8600061165161184b565b6101e2906116b061182d565b6101e2906004610efd565b6101e2906116a4565b6101e2906116d061182d565b6116e48160006116de61184b565b01610f84565b6116f86116f2610fd761162a565b916104de565b907f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700610c2b60405190565b6101e2906116c4565b906101e29161173961182d565b610bfa61174f91610b5484610fd2836006610208565b907fa1d716b435381dee582b1b1ac7415a66045f57a26ff62b779b9051ba7afc5735610c2b60405190565b906101e29161172c565b6117ac61179060405190565b80926117a06020830191826112fd565b908103825203826105e4565b6117be6117b7825190565b9160200190565b2090565b6101e261186f565b6101e26117c2565b916001600160a01b0360089290920291821b911b610b09565b91906117fc6101f8610b2a936104de565b9083546117d2565b6101e2916000916117eb565b6101e29061182860008061182261184b565b01611804565b611892565b61183561162a565b33906118436110b9836103d3565b036110cd5750565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0090565b61187a610db66118f7565b61188057565b604051631afcd79f60e31b8152600490fd5b6118cc6116f27f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300610fd7846118c6836109c8565b92610f84565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610c2b60405190565b6101f87ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610cd456fea2646970667358221220018457b5d9a0c8727e47ba96f5e8c391db933a01e3061a0215dcae56fe65d4df64736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12F52EE EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x13569CFD EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x2811E6BB EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x36CEDE41 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x40D30854 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x490B4846 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x4B4687B5 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x4BF1B68D EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x53AE9739 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x55D8525E EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x6BA2700E EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x7C6E610D EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x85B81116 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x89D8B82D EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xAE04D45D EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xB7840369 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xC22E54A1 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xEA05A8C6 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xF4BE779C EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xF8B963B1 EQ PUSH2 0x145 JUMPI PUSH4 0xFD91D7CD SUB PUSH2 0x1D0 JUMPI PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH2 0x952 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST PUSH2 0x86D JUMP JUMPDEST PUSH2 0x848 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH2 0x24F JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x1D0 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x1C7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP2 PUSH2 0x1D5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F8 PUSH2 0x1F8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x212 SWAP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1F8 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x1F8 SWAP2 SLOAD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 PUSH2 0x1F8 SWAP3 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4 JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x1D0 JUMPI JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH1 0x3 PUSH2 0x22B JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x26A PUSH2 0x289 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x200 SWAP2 SUB SLT PUSH2 0x1D0 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x220 DUP4 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP1 PUSH1 0x20 PUSH2 0x2DC DUP3 DUP7 PUSH2 0x1D5 JUMP JUMPDEST SWAP5 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BF JUMP JUMPDEST SWAP1 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH1 0x2 PUSH2 0x22B JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x26A PUSH2 0x301 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x1C9 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x328 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x240 DUP3 DUP5 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 PUSH2 0x357 DUP5 DUP5 PUSH2 0x1D5 JUMP JUMPDEST SWAP4 PUSH2 0x220 PUSH2 0x368 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x2B0 JUMP JUMPDEST SWAP5 ADD PUSH2 0x330 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D JUMP JUMPDEST SWAP2 PUSH2 0xC31 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x240 DUP3 DUP5 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 PUSH2 0x3A2 DUP5 DUP5 PUSH2 0x1D5 JUMP JUMPDEST SWAP4 PUSH2 0x220 PUSH2 0x3B3 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x2B0 JUMP JUMPDEST SWAP5 ADD PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST SWAP2 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1C9 DUP2 PUSH2 0x3D3 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x3DF JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP2 PUSH2 0x3E8 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x41C CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x1F8 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1F8 SWAP2 SLOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH1 0x4 PUSH2 0x430 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x462 PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xFA6 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP1 PUSH1 0x20 PUSH2 0x368 DUP3 DUP7 PUSH2 0x3E8 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x4BB CALLDATASIZE PUSH1 0x4 PUSH2 0x48C JUMP JUMPDEST SWAP1 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x3D3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x4D5 JUMP JUMPDEST SWAP1 PUSH2 0x212 SWAP1 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 PUSH2 0x1F8 SWAP3 PUSH1 0x8 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x462 PUSH2 0x51C CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x534 CALLDATASIZE PUSH1 0x4 PUSH2 0x48C JUMP JUMPDEST SWAP1 PUSH2 0x105F JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x54A CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x109C JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x1F8 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x3D3 JUMP JUMPDEST SWAP1 PUSH2 0x1F8 SWAP2 SLOAD PUSH2 0x56A JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH1 0x1 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x24B SWAP1 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x5B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x5C2 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x597 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x606 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST SWAP1 PUSH2 0x1E2 PUSH2 0x618 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0x1D0 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x1C9 DUP2 PUSH2 0x636 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x63F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x200 DUP2 DUP5 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x78C PUSH2 0x671 PUSH2 0x200 PUSH2 0x60B JUMP JUMPDEST SWAP4 PUSH2 0x67C DUP2 DUP5 PUSH2 0x629 JUMP JUMPDEST DUP6 MSTORE PUSH2 0x68B DUP2 PUSH1 0x20 DUP6 ADD PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x69D DUP2 PUSH1 0x40 DUP6 ADD PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x6AF DUP2 PUSH1 0x60 DUP6 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x6C1 DUP2 PUSH1 0x80 DUP6 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x6D3 DUP2 PUSH1 0xA0 DUP6 ADD PUSH2 0x648 JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x6E5 DUP2 PUSH1 0xC0 DUP6 ADD PUSH2 0x648 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x6F7 DUP2 PUSH1 0xE0 DUP6 ADD PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 PUSH2 0x70B DUP3 DUP3 DUP7 ADD PUSH2 0x3E8 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x120 PUSH2 0x71E DUP3 DUP3 DUP7 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x140 PUSH2 0x731 DUP3 DUP3 DUP7 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x160 PUSH2 0x744 DUP3 DUP3 DUP7 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x180 PUSH2 0x757 DUP3 DUP3 DUP7 ADD PUSH2 0x330 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x1A0 PUSH2 0x76A DUP3 DUP3 DUP7 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x1C0 PUSH2 0x77D DUP3 DUP3 DUP7 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x1E0 DUP1 SWAP4 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x200 DUP3 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP2 PUSH2 0x655 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x26A PUSH2 0x7BD CALLDATASIZE PUSH1 0x4 PUSH2 0x792 JUMP JUMPDEST PUSH2 0x10F0 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1E0 SWAP2 SUB SLT PUSH2 0x1D0 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2C0 DUP4 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x7E8 DUP2 DUP5 PUSH2 0x1D5 JUMP JUMPDEST SWAP3 PUSH2 0x7F6 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP3 PUSH2 0x804 DUP4 PUSH1 0x40 DUP5 ADD PUSH2 0x330 JUMP JUMPDEST SWAP3 PUSH2 0x812 DUP2 PUSH1 0x60 DUP6 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP3 PUSH2 0x820 DUP3 PUSH1 0x80 DUP4 ADD PUSH2 0x1D5 JUMP JUMPDEST SWAP3 PUSH2 0x1F8 PUSH2 0x831 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0x3E8 JUMP JUMPDEST SWAP4 PUSH1 0xE0 PUSH2 0x841 DUP3 PUSH1 0xC0 DUP8 ADD PUSH2 0x3E8 JUMP JUMPDEST SWAP5 ADD PUSH2 0x7C2 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x26A PUSH2 0x85E CALLDATASIZE PUSH1 0x4 PUSH2 0x7D1 JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x1618 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x87D CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x5C2 PUSH2 0x162A JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x89B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4 JUMP JUMPDEST PUSH2 0x166E JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x8B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x168E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 PUSH2 0x1F8 SWAP3 PUSH1 0x7 PUSH2 0x4E7 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x462 PUSH2 0x8DE CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x8F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x5C2 PUSH2 0x1697 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP2 PUSH2 0x330 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x925 CALLDATASIZE PUSH1 0x4 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x16BB JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x93D CALLDATASIZE PUSH1 0x4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 PUSH2 0x1F8 SWAP3 PUSH1 0x6 PUSH2 0x208 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x27A PUSH2 0x462 PUSH2 0x968 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4 JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x1D0 JUMPI PUSH2 0x1F8 SWAP1 PUSH1 0x20 PUSH2 0x368 DUP3 DUP7 PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x2FC PUSH2 0x99C CALLDATASIZE PUSH1 0x4 PUSH2 0x96D JUMP JUMPDEST SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 DUP1 PUSH2 0x577 JUMP JUMPDEST CALLVALUE PUSH2 0x1D0 JUMPI PUSH2 0x9BD CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x27A PUSH2 0x5C2 PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 SLOAD PUSH2 0x636 JUMP JUMPDEST SWAP1 PUSH2 0x9E5 PUSH2 0x9E0 PUSH1 0x0 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x9EE CALLER PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x9FC JUMPI PUSH2 0x1E2 SWAP2 PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E60F985 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F8 SWAP1 CALLDATASIZE SWAP1 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 SLOAD PUSH2 0xA1D JUMP JUMPDEST SWAP1 PUSH2 0xA66 PUSH2 0xA3B DUP3 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xA61 PUSH2 0xA5D PUSH2 0x1F8 PUSH2 0xA57 PUSH2 0xA52 DUP9 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST SWAP4 PUSH2 0x1784 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xA73 JUMPI PUSH2 0x1E2 SWAP2 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC4C3834B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xAA8 JUMPI JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST SWAP1 PUSH2 0xAD8 PUSH2 0xABA DUP3 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xAD2 PUSH2 0x1E0 PUSH2 0xACC PUSH2 0x1C0 DUP5 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA9B JUMP JUMPDEST TIMESTAMP LT PUSH2 0xAE7 JUMPI PUSH2 0x1E2 SWAP2 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20FD4DFF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB22 PUSH2 0x1F8 PUSH2 0xB2A SWAP4 SWAP1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xAF9 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0xB59 SWAP2 POP PUSH2 0xB54 PUSH1 0x0 PUSH2 0xB4F DUP4 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST PUSH32 0xC16EC4190AFC7DD9E0B0C866BD421D7EA070F2395FCEE05567614D63FAC17940 PUSH2 0xB83 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0x9D2 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xBA2 PUSH2 0x9E0 PUSH1 0x0 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0xBAB CALLER PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x9FC JUMPI PUSH2 0x1E2 SWAP3 SWAP2 SWAP1 PUSH2 0xBD9 PUSH2 0xBC2 DUP3 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xA61 PUSH2 0xA5D PUSH2 0x1F8 PUSH2 0xA57 PUSH2 0xA52 DUP10 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST PUSH2 0xA73 JUMPI PUSH2 0x1E2 SWAP3 PUSH2 0xC00 SWAP2 POP PUSH2 0xBFA SWAP1 PUSH2 0xB54 PUSH1 0x0 PUSH2 0xB4F DUP4 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST SWAP2 ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH32 0x36D81B3901A7AF2FB3E1C438BB2A725BA9B55DDF607A668ABF262B0C41885679 PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP3 SWAP2 PUSH2 0xB93 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xC4B PUSH2 0x9E0 PUSH1 0x0 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0xC54 CALLER PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x9FC JUMPI PUSH2 0x1E2 SWAP3 SWAP2 SWAP1 PUSH2 0xC6B PUSH2 0xBC2 DUP3 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xA73 JUMPI PUSH2 0x1E2 SWAP3 PUSH2 0xC92 SWAP2 POP PUSH2 0xC8C SWAP1 PUSH2 0xB54 PUSH1 0x0 PUSH2 0xB4F DUP4 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST SWAP2 PUSH2 0x1FB JUMP JUMPDEST SWAP1 PUSH32 0xA465A1FEE99EB9FB08A22B000DCDBB13D227AEA872015D53C785FA44F2350E9D PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP3 SWAP2 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH1 0x40 SHR PUSH2 0x42A JUMP JUMPDEST PUSH2 0x1F8 SWAP1 SLOAD PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 SLOAD PUSH2 0xCDE JUMP JUMPDEST PUSH2 0xCE3 PUSH2 0x1F8 PUSH2 0x1F8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH2 0xCE3 PUSH2 0x1F8 PUSH2 0x1F8 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD3E PUSH2 0x1F8 PUSH2 0xB2A SWAP3 PUSH2 0xD17 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xD07 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x40 SHL SWAP1 PUSH1 0x40 SHL PUSH2 0xB09 JUMP JUMPDEST SWAP1 PUSH2 0xD64 PUSH2 0x1F8 PUSH2 0xB2A SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x24B SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 PUSH2 0xDC0 PUSH2 0xDBA PUSH2 0xDB6 DUP4 PUSH2 0xCD4 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xCF0 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0xDCD DUP5 PUSH2 0xCFA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND EQ DUP1 PUSH2 0xECC JUMPI JUMPDEST PUSH1 0x1 SWAP4 PUSH2 0xDFC PUSH2 0xDEE DUP7 PUSH2 0xCFA JUMP JUMPDEST SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST EQ SWAP1 DUP2 PUSH2 0xEA8 JUMPI JUMPDEST ISZERO JUMPDEST SWAP1 DUP2 PUSH2 0xE9F JUMPI JUMPDEST POP PUSH2 0xE8D JUMPI PUSH2 0xE36 SWAP1 DUP3 PUSH2 0xE2D DUP7 PUSH2 0xE24 DUP8 PUSH2 0xCFA JUMP JUMPDEST SWAP9 ADD SWAP8 DUP9 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0xE7E JUMPI PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xE3F JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xE6D PUSH2 0xE79 SWAP3 PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP5 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD74 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xE88 DUP5 DUP8 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO SWAP1 POP CODESIZE PUSH2 0xE0D JUMP JUMPDEST SWAP1 POP PUSH2 0xE06 PUSH2 0xEB6 ADDRESS PUSH2 0x4DE JUMP JUMPDEST EXTCODESIZE PUSH2 0xEC3 PUSH2 0xA5D DUP9 PUSH2 0x1FB JUMP JUMPDEST EQ SWAP2 SWAP1 POP PUSH2 0xE04 JUMP JUMPDEST POP DUP2 PUSH2 0xDDF JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xB09 JUMP JUMPDEST SWAP1 PUSH2 0xEED PUSH2 0x1F8 PUSH2 0xB2A SWAP3 PUSH2 0x1FB JUMP JUMPDEST DUP3 SLOAD PUSH2 0xED3 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0xB09 JUMP JUMPDEST SWAP1 PUSH2 0xF0D PUSH2 0x1F8 PUSH2 0xB2A SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0xF20 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0xF34 PUSH2 0xF2D PUSH1 0x1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x2 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0xF4A PUSH2 0xF43 PUSH3 0x278D00 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x3 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0xF56 PUSH1 0x1 PUSH1 0x4 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0xF70 PUSH2 0x182D JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xB09 JUMP JUMPDEST SWAP1 PUSH2 0xF94 PUSH2 0x1F8 PUSH2 0xB2A SWAP3 PUSH2 0x4DE JUMP JUMPDEST DUP3 SLOAD PUSH2 0xF75 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH1 0x1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0xF64 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0xFBC PUSH2 0x182D JUMP JUMPDEST PUSH2 0xBFA PUSH2 0xFDC SWAP2 PUSH2 0xFD7 DUP5 PUSH2 0xFD2 DUP4 PUSH1 0x7 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST SWAP1 PUSH32 0xA4ACC8FB2FCB25932C29564E69D31A4AF2363811E49E9619345A7404744AB8D PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0xFAF JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0x101E PUSH2 0x182D JUMP JUMPDEST PUSH2 0xBFA PUSH2 0x1034 SWAP2 PUSH2 0xFD7 DUP5 PUSH2 0xFD2 DUP4 PUSH1 0x8 PUSH2 0x4E7 JUMP JUMPDEST SWAP1 PUSH32 0x98B64277BBFAD703C35B1FFC6D48D78E3394E496B498C2B3278CE4D06756971D PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x1071 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x1F8 PUSH2 0x1F8 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0xF56 PUSH1 0x0 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x1069 JUMP JUMPDEST CALLER PUSH2 0x10AD PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x10BF PUSH2 0x10B9 DUP4 PUSH2 0x3D3 JUMP JUMPDEST SWAP2 PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x10CD JUMPI PUSH2 0x1E2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH2 0xA0E SWAP1 PUSH2 0x10DA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x597 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x1784 JUMP JUMPDEST SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x110E PUSH2 0x9E0 PUSH1 0x0 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x1117 CALLER PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x9FC JUMPI PUSH2 0x1F8 SWAP9 PUSH2 0x130E JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x42A JUMP JUMPDEST PUSH2 0x1F8 SWAP1 SLOAD PUSH2 0x1125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0x1158 JUMPI JUMP JUMPDEST PUSH2 0x1138 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 DUP3 PUSH2 0x114E JUMP JUMPDEST CALLDATALOAD PUSH2 0x1F8 DUP2 PUSH2 0x61F JUMP JUMPDEST CALLDATALOAD PUSH2 0x1F8 DUP2 PUSH2 0x63F JUMP JUMPDEST CALLDATALOAD PUSH2 0x1F8 DUP2 PUSH2 0x1C7 JUMP JUMPDEST CALLDATALOAD PUSH2 0x1F8 DUP2 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x200 PUSH2 0x60B JUMP JUMPDEST SWAP1 PUSH2 0x24B SWAP1 PUSH2 0x115D JUMP JUMPDEST SWAP1 PUSH2 0x24B SWAP1 PUSH2 0x3D3 JUMP JUMPDEST SWAP1 PUSH2 0x24B SWAP1 PUSH2 0x636 JUMP JUMPDEST SWAP1 PUSH2 0xEED PUSH2 0x1F8 PUSH2 0xB2A SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xAA8 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH2 0x24B SWAP1 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x24B SWAP1 PUSH2 0x4DE JUMP JUMPDEST SWAP1 PUSH2 0x1E0 DUP1 PUSH2 0x1E2 SWAP4 PUSH2 0x120B PUSH1 0x0 DUP3 ADD MLOAD PUSH1 0x0 DUP7 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0x121A PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x1229 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x123B PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x124D PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x125F PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x1271 PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x1280 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x1294 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x12A5 PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x120 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x12B6 PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x140 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x12C7 PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x160 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x180 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x12E5 PUSH2 0x1A0 DUP3 ADD MLOAD PUSH2 0x1A0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x12F6 PUSH2 0x1C0 DUP3 ADD MLOAD PUSH2 0x1C0 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x200 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x11F0 JUMP JUMPDEST POP SWAP8 SWAP7 SWAP5 SWAP6 SWAP2 SWAP3 SWAP2 PUSH2 0x1329 PUSH2 0x1324 DUP11 PUSH1 0x6 PUSH2 0x208 JUMP JUMPDEST PUSH2 0x112E JUMP JUMPDEST PUSH2 0x1606 JUMPI PUSH2 0x1337 PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x1567 JUMPI JUMPDEST DUP4 ISZERO DUP1 PUSH2 0x1555 JUMPI JUMPDEST PUSH2 0x151C JUMPI DUP4 DUP1 PUSH2 0x1543 JUMPI JUMPDEST DUP1 PUSH2 0x152E JUMPI JUMPDEST PUSH2 0x151C JUMPI DUP9 SWAP7 PUSH2 0x1367 PUSH1 0x40 DUP9 ADD PUSH2 0x1167 JUMP JUMPDEST SWAP7 PUSH1 0xA0 DUP2 ADD SWAP3 PUSH2 0x1379 PUSH1 0xC0 DUP4 ADD PUSH2 0x1171 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1386 SWAP1 PUSH2 0x117B JUMP JUMPDEST SWAP4 PUSH2 0x100 DUP4 ADD SWAP2 PUSH2 0x1396 DUP4 PUSH2 0x1171 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD PUSH2 0x13A3 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH2 0x160 SWAP1 SWAP5 ADD SWAP5 PUSH2 0x13B3 DUP7 PUSH2 0x1185 JUMP JUMPDEST SWAP6 PUSH1 0x20 ADD PUSH2 0x13C0 SWAP1 PUSH2 0x117B JUMP JUMPDEST SWAP7 PUSH2 0x13CB PUSH1 0x3 PUSH2 0xA24 JUMP JUMPDEST SWAP13 PUSH2 0x13D4 PUSH2 0x118F JUMP JUMPDEST SWAP15 DUP16 SWAP2 PUSH2 0x13E1 SWAP1 DUP4 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD MSTORE PUSH2 0x13F7 SWAP1 PUSH1 0x60 DUP15 ADD PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x1404 SWAP1 PUSH1 0x80 DUP14 ADD PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x1411 SWAP1 PUSH1 0xA0 DUP13 ADD PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x141E SWAP1 PUSH1 0xC0 DUP12 ADD PUSH2 0x11AE JUMP JUMPDEST PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x1431 SWAP1 PUSH2 0x100 DUP10 ADD PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE ISZERO ISZERO PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x1A0 DUP4 ADD MSTORE PUSH2 0x145D TIMESTAMP PUSH2 0x1C0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E0 DUP3 ADD MSTORE PUSH2 0x146D PUSH1 0x2 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x147B PUSH1 0x1 DUP3 ADD PUSH1 0x2 PUSH2 0xEDD JUMP JUMPDEST SWAP3 PUSH2 0x1485 DUP3 PUSH2 0x1784 JUMP JUMPDEST PUSH2 0x148F PUSH1 0x2 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x149A SWAP1 PUSH1 0x5 PUSH2 0x208 JUMP JUMPDEST SWAP1 PUSH2 0x14A4 SWAP2 PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x14AF SWAP1 PUSH1 0x6 PUSH2 0x208 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x14BA SWAP2 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x14C4 PUSH1 0x2 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x14CD DUP2 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0x14D8 SWAP1 PUSH1 0x2 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x14E1 SWAP1 PUSH2 0x1FB JUMP JUMPDEST SWAP1 PUSH2 0x14EB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14F6 DUP2 SWAP3 DUP3 PUSH2 0x12FD JUMP JUMPDEST SUB PUSH32 0xF689AC390301AED9C1CF10F3C8DD4BF55A902B4D9386C0A491605573142932DD SWAP2 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE803A883 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x153C PUSH2 0x1F8 PUSH1 0x0 PUSH2 0x1FB JUMP JUMPDEST DUP4 EQ PUSH2 0x1355 JUMP JUMPDEST POP PUSH2 0x154E PUSH1 0x0 PUSH2 0x1FB JUMP JUMPDEST DUP6 EQ PUSH2 0x134F JUMP JUMPDEST POP PUSH2 0x1560 PUSH1 0x0 PUSH2 0x1FB JUMP JUMPDEST DUP6 GT PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD PUSH2 0x1574 DUP2 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x1587 PUSH2 0x1581 PUSH1 0x1 PUSH2 0x115D JUMP JUMPDEST SWAP2 PUSH2 0x115D JUMP JUMPDEST EQ DUP1 PUSH2 0x15EF JUMPI JUMPDEST PUSH2 0x15DD JUMPI PUSH2 0x159B SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x15A8 PUSH2 0x1581 PUSH1 0x0 PUSH2 0x115D JUMP JUMPDEST EQ DUP1 PUSH2 0x15C6 JUMPI JUMPDEST ISZERO PUSH2 0x133C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C5E0F3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x15D8 PUSH2 0xDB6 PUSH2 0x1324 DUP10 PUSH1 0x8 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x175613F PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x1601 PUSH2 0xDB6 PUSH2 0x1324 DUP5 PUSH1 0x7 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39B9E3F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1F8 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x10F9 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 JUMPDEST ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x1663 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH1 0x3 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x1683 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH1 0x0 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x0 PUSH2 0x1651 PUSH2 0x184B JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x16B0 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH1 0x4 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x16D0 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x16E4 DUP2 PUSH1 0x0 PUSH2 0x16DE PUSH2 0x184B JUMP JUMPDEST ADD PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x16F8 PUSH2 0x16F2 PUSH2 0xFD7 PUSH2 0x162A JUMP JUMPDEST SWAP2 PUSH2 0x4DE JUMP JUMPDEST SWAP1 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0x1739 PUSH2 0x182D JUMP JUMPDEST PUSH2 0xBFA PUSH2 0x174F SWAP2 PUSH2 0xB54 DUP5 PUSH2 0xFD2 DUP4 PUSH1 0x6 PUSH2 0x208 JUMP JUMPDEST SWAP1 PUSH32 0xA1D716B435381DEE582B1B1AC7415A66045F57A26FF62B779B9051BA7AFC5735 PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E2 SWAP2 PUSH2 0x172C JUMP JUMPDEST PUSH2 0x17AC PUSH2 0x1790 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x17A0 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 PUSH2 0x12FD JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x17BE PUSH2 0x17B7 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x17C2 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xB09 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x17FC PUSH2 0x1F8 PUSH2 0xB2A SWAP4 PUSH2 0x4DE JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0x1E2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x17EB JUMP JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x1828 PUSH1 0x0 DUP1 PUSH2 0x1822 PUSH2 0x184B JUMP JUMPDEST ADD PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x1892 JUMP JUMPDEST PUSH2 0x1835 PUSH2 0x162A JUMP JUMPDEST CALLER SWAP1 PUSH2 0x1843 PUSH2 0x10B9 DUP4 PUSH2 0x3D3 JUMP JUMPDEST SUB PUSH2 0x10CD JUMPI POP JUMP JUMPDEST PUSH32 0x237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00 SWAP1 JUMP JUMPDEST PUSH2 0x187A PUSH2 0xDB6 PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0x1880 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x18CC PUSH2 0x16F2 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 PUSH2 0xFD7 DUP5 PUSH2 0x18C6 DUP4 PUSH2 0x9C8 JUMP JUMPDEST SWAP3 PUSH2 0xF84 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xC2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0xCD4 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP5 JUMPI 0xB5 0xD9 LOG0 0xC8 PUSH19 0x7E47BA96F5E8C391DB933A01E3061A0215DCAE JUMP INVALID PUSH6 0xD4DF64736F6C PUSH4 0x43000818 STOP CALLER ",
              "sourceMap": "347:5208:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;583:42::-;;;;;;;:::i;:::-;;:::i;347:5208::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;522:23::-;;;;;:::i;347:5208::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;490:26:8;;;;;:::i;347:5208::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;347:5208:8;;:::o;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;551:25::-;;;;;:::i;347:5208::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;347:5208:8;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;741:52::-;;;;;;;:::i;:::-;;:::i;347:5208::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;454:29::-;;;;;:::i;347:5208::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;347:5208:8;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;347:5208:8;;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;683:52::-;;;;;;;:::i;347:5208::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;631:46::-;;;;;;;:::i;347:5208::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;219:21:9:-;;;;;:::i;347:5208:8:-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;341:119:9:-;;377:20;391:6;;;:::i;:::-;377:20;:::i;:::-;;:10;:20;:::i;:::-;;373:70;;452:1;;;:::i;373:70::-;347:5208:8;;-1:-1:-1;;;420:12:9;;;;;;;;;347:5208:8;;;;;;:::i;:::-;;;;;;;;;;:::i;5235:160::-;;5310:43;4357:6;;;:::i;:::-;5312:40;;5333:19;5312:17;;;:7;:17;:::i;:::-;;:::i;:::-;5333:19;;:::i;5312:40::-;;347:5208;;5312:40;;5310:43;;347:5208;5310:43;5306:71;;5387:1;;;:::i;5306:71::-;347:5208;;-1:-1:-1;;;5362:15:8;;;;420:12:9;347:5208:8;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;5401:152::-;;5460:34;4380:6;;;:::i;:::-;5479:15;;5460:16;;;;347:5208;;;5460:16;5479:15;;347:5208;;;5479:15;5460:34;;:::i;:::-;5497:15;-1:-1:-1;5457:78:8;;5545:1;;;:::i;5457:78::-;347:5208;;-1:-1:-1;;;5521:14:8;;;;420:12:9;347:5208:8;;-1:-1:-1;;347:5208:8;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;4252:229::-;4437:37;4252:229;;4398:24;;4405:17;;:7;:17;:::i;:::-;4398:24;:::i;:::-;4437:37;:::i;:::-;;;347:5208;;;;4437:37;;;;4252:229::o;:::-;;;;;:::i;341:119:9:-;;;377:20;391:6;;;:::i;377:20::-;;:10;:20;:::i;:::-;;373:70;;452:1;;5235:160:8;;5310:43;4612:6;;;:::i;:::-;5312:40;;5333:19;5312:17;;;:7;:17;:::i;5310:43::-;5306:71;;5387:1;;4669:68;4487:257;;4669:68;4487:257;4630:24;;4637:17;;:7;:17;:::i;4669:68::-;;347:5208;;;;4669:68;;;;347:5208;;;;4669:68;;;;4487:257::o;:::-;;;;;;:::i;341:119:9:-;;;377:20;391:6;;;:::i;377:20::-;;:10;:20;:::i;:::-;;373:70;;452:1;;5235:160:8;;5310:43;4127:6;;;:::i;5310:43::-;5306:71;;5387:1;;4184:55;4004:242;;4184:55;4004:242;4145:24;;4152:17;;:7;:17;:::i;4184:55::-;;;:::i;:::-;;;;347:5208;;;;4004:242;;;;;;:::i;347:5208::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;347:5208:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;4069:1104:2:-;8837:64;4302:15;;4348:14;4301:16;4302:15;;;:::i;:::-;4301:16;;347:5208:8;4301:16:2;4348:14;;:::i;:::-;4741:1;;4726:16;;;;:::i;:::-;347:5208:8;;;4726:16:2;:34;;;4069:1104;4805:1;4790:16;;;;;:::i;:::-;;347:5208:8;;;;4790:16:2;;:50;;;;4069:1104;4855:13;;:30;;;;4069:1104;4851:91;;;5055:1;4951:18;;;;;;;:::i;:::-;:14;;:18;;;:::i;:::-;4979:67;;5055:1;:::i;:::-;5066:101;;4069:1104;;;:::o;5066:101::-;5100:23;5142:14;5100:23;5142:14;5100:23;;:::i;:::-;347:5208:8;;5142:14:2;;;;;:::i;:::-;;;;4069:1104::o;4979:67::-;5013:22;;;;:::i;:::-;5055:1;:::i;4851:91::-;347:5208:8;;-1:-1:-1;;;4908:23:2;;;;420:12:9;4855:30:2;4872:13;;-1:-1:-1;4855:30:2;;;4790:50;4818:4;;4855:13;4810;4818:4;4810:13;:::i;:::-;:25;:30;;;;:::i;:::-;;4790:50;;;;;4726:34;;;;;347:5208:8;;-1:-1:-1;;347:5208:8;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;831:225::-;1043:5;831:225;;;:::i;:::-;940:15;;954:1;940:15;:::i;:::-;;;:::i;:::-;965:18;;976:7;965:18;:::i;:::-;;;:::i;:::-;993:20;954:1;993:20;;:::i;:::-;1043:5;:::i;831:225::-;;;;:::i;2303:62:1:-;2357:1;2303:62;;;:::i;:::-;2357:1;:::i;347:5208:8:-;;-1:-1:-1;;;;;347:5208:8;;;;;;;;;;:::i;:::-;;;;:::i;1168:117::-;1247:31;1168:117;1247:31;;:::i;1168:117::-;;;;:::i;2303:62:1:-;;2357:1;2303:62;;;:::i;:::-;1647:38:8;;1502:190;1592:40;:26;;;:20;:26;:::i;:::-;:40;:::i;:::-;1647:38;:::i;:::-;;;;347:5208;;;;1502:190;;;;;:::i;2303:62:1:-;;2357:1;2303:62;;;:::i;:::-;1841:38:8;;1698:188;1786:40;:26;;;:20;:26;:::i;1841:38::-;;;;347:5208;;;;1698:188;;;;;:::i;2303:62:1:-;;;:::i;:::-;2357:1;;:::i;347:5208:8:-;;;;;;;;;;;:::i;3155:101:1:-;3238:10;;3246:1;3238:10;:::i;3155:101::-;;;:::i;2774:229:0:-;966:10:3;2869:14:0;;:::i;:::-;:24;;;;:::i;:::-;;;:::i;:::-;;2865:96;;2989:6;;;:::i;2865:96::-;2916:34;;;347:5208:8;;;;2916:34:0;-1:-1:-1;;;2916:34:0;;;;;;;;;:::i;4750:124:8:-;4848:19;;;:::i;341:119:9:-;;;;;;;;;377:20;391:6;;;:::i;377:20::-;;:10;:20;:::i;:::-;;373:70;;452:1;;;:::i;347:5208:8:-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;347:5208:8;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;347:5208:8;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2201:1797::-;-1:-1:-1;2201:1797:8;;;;;;;2519:27;;2201:1797;2519:14;:27;:::i;:::-;;:::i;:::-;2515:68;;2598:13;;;:::i;:::-;2594:243;;2201:1797;2851:15;;:39;;;2201:1797;2847:77;;2938:39;;;;2201:1797;2938:71;;;2201:1797;2934:109;;3104:10;;;;;;;:::i;:::-;3232:16;;;;;:27;;;;;:::i;:::-;3285;;;;;;:::i;:::-;3336:11;;;;;:20;:11;:20;:::i;:::-;3378:18;;;;;;:::i;:::-;3421:9;;;;;:19;:9;:19;:::i;:::-;3459:14;;;;;;:::i;:::-;3701:8;;;;:::i;:::-;3077:643;;;:::i;:::-;;;;;;;;:::i;:::-;;;;347:5208;3077:643;;347:5208;3077:643;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;347:5208;3077:643;;;;;;:::i;:::-;;;;347:5208;3077:643;;;347:5208;3077:643;;;347:5208;;;3077:643;;;347:5208;3077:643;;;347:5208;3077:643;3662:15;3077:643;;;347:5208;;3077:643;;;;347:5208;3766:13;;;:::i;:::-;;347:5208;;;3766:13;;:::i;:::-;3823:19;;;;:::i;:::-;3808:11;;;:::i;:::-;3800:20;;:7;:20;:::i;:::-;:42;;;;:::i;:::-;3852:27;;2519:14;3852:27;:::i;:::-;3882:4;3852:34;;;:::i;:::-;3939:13;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;3902:89;;;:::i;:::-;;;347:5208;;;;3902:89;;;;;;:::i;:::-;;;;;2201:1797::o;2934:109::-;347:5208;;-1:-1:-1;;;3018:25:8;;;;420:12:9;2938:71:8;2999:10;2981:28;2999:10;3007:1;2999:10;:::i;2981:28::-;;;2938:71;;:39;2956:21;;2976:1;2956:21;:::i;:::-;;;2938:39;;2851;2870:20;;2889:1;2870:20;:::i;:::-;;;2851:39;;2594:243;2631:10;;;;;;:::i;:::-;:22;;2645:8;2631:22;:::i;:::-;;;:::i;:::-;;:55;;;2594:243;2627:93;;2738:10;;;:::i;:::-;:22;;2752:8;2738:22;:::i;:::-;;:54;;;2594:243;2734:92;2594:243;2734:92;347:5208;;-1:-1:-1;;;2801:25:8;;;;420:12:9;2738:54:8;2765:27;2764:28;2765:27;;;:20;:27;:::i;2764:28::-;2738:54;;2627:93;347:5208;;-1:-1:-1;;;2695:25:8;;;;420:12:9;2631:55:8;2658:28;2657:29;2658:28;;;:20;:28;:::i;2657:29::-;2631:55;;2515:68;347:5208;;-1:-1:-1;;;2555:28:8;;;;420:12:9;2201:1797:8;2487:16;;2201:1797;;;;;;;347:5208;2487:16;:::i;2441:144:1:-;2570:8;;1280:65;2533:20;2570:8;;:::i;2303:62::-;2357:1;2303:62;;;:::i;:::-;1355:15:8;1291:86;1355:15;;:::i;1291:86::-;;;;:::i;2303:62:1:-;2357:1;2303:62;;;:::i;:::-;312:16:9;247:88;312:16;;:::i;247:88::-;;;;:::i;1680:168:0:-;1826:15;;1784:25;;:::i;2303:62:1:-;2357:1;2303:62;;;:::i;:::-;1459:30:8;1383:113;1459:30;;:::i;1383:113::-;;;;:::i;2303:62:1:-;2357:1;2303:62;;;:::i;:::-;2197:26:0;2162:25;2197:15;2162:25;;:::i;:::-;2197:15;:26;:::i;:::-;2238:43;;2263:7;;:::i;2238:43::-;;;:::i;:::-;;;;347:5208:8;;;;2041:247:0;;;;:::i;2303:62:1:-;;2357:1;2303:62;;;:::i;:::-;2036:42:8;;1892:193;1983:38;:27;;;:14;:27;:::i;2036:42::-;;;;347:5208;;;;1892:193;;;;;:::i;4986:135::-;5095:18;;347:5208;;;;5095:18;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;5085:29;;;347:5208;;;5085:29;;347:5208;;;;5085:29;;4986:135;:::o;6893:76:2:-;;;:::i;1461:64:0:-;;;:::i;347:5208:8:-;;-1:-1:-1;;;;;347:5208:8;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;2472:222:0:-;2678:8;2472:222;2621:22;;2586:25;;;:::i;:::-;2628:15;2621:22;:::i;:::-;2678:8;:::i;2658:162:1:-;2717:7;;:::i;:::-;966:10:3;2717:23:1;;;;;:::i;:::-;;2713:101;;2658:162;:::o;1187:174:0:-;1285:70;1187:174;:::o;7084:141:2:-;7150:18;7151:17;;:::i;7150:18::-;7146:73;;7084:141::o;7146:73::-;347:5208:8;;-1:-1:-1;;;7191:17:2;;;;420:12:9;3774:248:1;3975:40;;1280:65;3941:19;3923:8;;1280:65;3923:8;:::i;:::-;3941:19;;:::i;3975:40::-;;;;347:5208:8;;;;8487:120:2;8560:40;8837:64;8560:40;:::i"
            },
            "methodIdentifiers": {
              "TOKEN_SUPPLIER()": "7c6e610d",
              "__EscrowController_init(address)": "490b4846",
              "acceptOwnership()": "79ba5097",
              "claimEscrow(uint256,(uint8,uint256,uint256,address,address,address,address,uint256,address,uint256,uint256,bytes32,bool,uint256,uint256,uint256))": "13569cfd",
              "escrowIndex()": "2811e6bb",
              "escrowedTokens(uint256)": "f4be779c",
              "escrows(uint256)": "012f52ee",
              "hashEscrow((uint8,uint256,uint256,address,address,address,address,uint256,address,uint256,uint256,bytes32,bool,uint256,uint256,uint256))": "85b81116",
              "kettle()": "fd91d7cd",
              "lockTime()": "0d668087",
              "openEscrow(uint256,uint256,bool,bytes32,uint256,address,address,(uint8,bool,uint8,address,address,(uint8,address,uint256),(address,uint256,uint256),(address,uint256),uint256,uint256))": "89d8b82d",
              "owner()": "8da5cb5b",
              "pendingOwner()": "e30c3978",
              "rejectEscrow(uint256,(uint8,uint256,uint256,address,address,address,address,uint256,address,uint256,uint256,bytes32,bool,uint256,uint256,uint256),bool)": "36cede41",
              "renounceOwnership()": "715018a6",
              "setEscrowedToken(uint256,bool)": "f8b963b1",
              "setKettle(address)": "b7840369",
              "setLockTime(uint256)": "ae04d45d",
              "setTokenSupplier(address)": "4bf1b68d",
              "setWhitelistOnly(bool)": "ea05a8c6",
              "settleEscrow(uint256,(uint8,uint256,uint256,address,address,address,address,uint256,address,uint256,uint256,bytes32,bool,uint256,uint256,uint256),uint256)": "40d30854",
              "transferOwnership(address)": "f2fde38b",
              "whitelistBidTaker(address,bool)": "6ba2700e",
              "whitelistOnly()": "4b4687b5",
              "whitelistedAskMaker(address,bool)": "53ae9739",
              "whitelistedAskMakers(address)": "c22e54a1",
              "whitelistedBidTakers(address)": "55d8525e"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EscrowLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEscrow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRedemptionCharge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyKettle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PlaceholderAlreadyEscrowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SellerNotAskWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SellerNotBidWhitelisted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"AskMakerWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"BidTakerWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"}],\"name\":\"EscrowClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"redemptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"withRedemption\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"redemptionCharge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Escrow\",\"name\":\"escrow\",\"type\":\"tuple\"}],\"name\":\"EscrowOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"rebateReturned\",\"type\":\"bool\"}],\"name\":\"EscrowRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"EscrowSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"escrowed\",\"type\":\"bool\"}],\"name\":\"PlaceholderEscrowed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_SUPPLIER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"__EscrowController_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"redemptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"withRedemption\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"redemptionCharge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Escrow\",\"name\":\"escrow\",\"type\":\"tuple\"}],\"name\":\"claimEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escrowIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"escrowedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"escrows\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"redemptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"withRedemption\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"redemptionCharge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Escrow\",\"name\":\"escrow\",\"type\":\"tuple\"}],\"name\":\"hashEscrow\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kettle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withRedemption\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"redemptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"redemptionCharge\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum OfferKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"soft\",\"type\":\"bool\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum Criteria\",\"name\":\"criteria\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"}],\"internalType\":\"struct Collateral\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketOfferTerms\",\"name\":\"terms\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"internalType\":\"struct FeeTerms\",\"name\":\"fee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketOffer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"openEscrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"redemptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"withRedemption\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"redemptionCharge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Escrow\",\"name\":\"escrow\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"returnRebate\",\"type\":\"bool\"}],\"name\":\"rejectEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"escrowed\",\"type\":\"bool\"}],\"name\":\"setEscrowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kettle\",\"type\":\"address\"}],\"name\":\"setKettle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setLockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenSupplier\",\"type\":\"address\"}],\"name\":\"setTokenSupplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_whitelistOnly\",\"type\":\"bool\"}],\"name\":\"setWhitelistOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"redemptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"withRedemption\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"redemptionCharge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Escrow\",\"name\":\"escrow\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"settleEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"whitelistBidTaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistOnly\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"whitelistedAskMaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedAskMakers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedBidTakers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EscrowController.sol\":\"EscrowController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x9e7af066bf68d0db720a4f175c1a6bc7bd07d64f32b645c67f628715203d724b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271ff2599b4c3fca6fad4878732af77ac0970beb2dd5bc6a10f2c4c44ba12036\",\"dweb:/ipfs/QmYqdfzPgbJRDz9vsmHDAikiCTSXataKNthun2bH15hgBH\"]},\"contracts/EscrowController.sol\":{\"keccak256\":\"0x859b6d4c7db6f474a8cfd3d3c48a906717d8943fcc58f937b7905c0a00f4f30a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c123a062a07edb466e2fcf40ef2ab81da271659af05fb5e3f0b0032524fe44e3\",\"dweb:/ipfs/QmP8os85tZErZHa87bZS2ttW89vNMg3uLuHPUQLKxbyWzF\"]},\"contracts/KettleAccess.sol\":{\"keccak256\":\"0xe182e61576a2aeda73409d65e82687cdc1bfd39aeebd25155804b58e7100ca34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f37fddae4844e4070e63dc5444db884daca5c2ed8b61805eef6b6c5592fcbbe\",\"dweb:/ipfs/QmamvC4V9aQcnm3f2AaKqQA1fAAJd2JoihyuxGoiDkFGa2\"]},\"contracts/Structs.sol\":{\"keccak256\":\"0xc28854062cd2ad222d7df08d37524ce709a6abafb66461c166048f6756c2e4ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb7fa5e8858d8ac66a9fb0b51871ad12286c3e1243f511d8b7fe213846391177\",\"dweb:/ipfs/Qmcq8yaPAu91UEZ7i77RcNgLA22Lgpfz7tnpq9gWyifNwp\"]},\"contracts/interfaces/IEscrowController.sol\":{\"keccak256\":\"0x27e1d89ee5593cbfe40ac6f95c8db198cef0e6330e9221619f362af1141b1d28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48d5e5a0dfa3f5766b8a81a59cec178c8bea5d84d53968a9d3ba17993e1cacf2\",\"dweb:/ipfs/QmaLgdF6zYebW77p8C8MHwm2ME4g931xVCbfTvP3tJdMdU\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1413,
                "contract": "contracts/EscrowController.sol:EscrowController",
                "label": "kettle",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 946,
                "contract": "contracts/EscrowController.sol:EscrowController",
                "label": "TOKEN_SUPPLIER",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 948,
                "contract": "contracts/EscrowController.sol:EscrowController",
                "label": "escrowIndex",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 950,
                "contract": "contracts/EscrowController.sol:EscrowController",
                "label": "lockTime",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
              },
              {
                "astId": 952,
                "contract": "contracts/EscrowController.sol:EscrowController",
                "label": "whitelistOnly",
                "offset": 0,
                "slot": "4",
                "type": "t_bool"
              },
              {
                "astId": 956,
                "contract": "contracts/EscrowController.sol:EscrowController",
                "label": "escrows",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "astId": 960,
                "contract": "contracts/EscrowController.sol:EscrowController",
                "label": "escrowedTokens",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "astId": 964,
                "contract": "contracts/EscrowController.sol:EscrowController",
                "label": "whitelistedAskMakers",
                "offset": 0,
                "slot": "7",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 968,
                "contract": "contracts/EscrowController.sol:EscrowController",
                "label": "whitelistedBidTakers",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 972,
                "contract": "contracts/EscrowController.sol:EscrowController",
                "label": "_gap",
                "offset": 0,
                "slot": "9",
                "type": "t_array(t_uint256)50_storage"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_uint256)50_storage": {
                "base": "t_uint256",
                "encoding": "inplace",
                "label": "uint256[50]",
                "numberOfBytes": "1600"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_uint256,t_bool)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_uint256,t_bytes32)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => bytes32)",
                "numberOfBytes": "32",
                "value": "t_bytes32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          }
        }
      },
      "contracts/KettleAccess.sol": {
        "KettleAccess": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "kettle",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pendingOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_kettle",
                  "type": "address"
                }
              ],
              "name": "setKettle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461001a576040516104e661002082396104e690f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063715018a61461008257806379ba50971461007d5780638da5cb5b14610078578063b784036914610073578063e30c39781461006e578063f2fde38b146100695763fd91d7cd03610092576101c2565b610180565b610165565b61014d565b6100f4565b6100b8565b610097565b600091031261009257565b600080fd5b34610092576100a7366004610087565b6100af610215565b604051005b0390f35b34610092576100c8366004610087565b6100af61021d565b6001600160a01b031690565b90565b6001600160a01b03909116815260200190565b565b3461009257610104366004610087565b6100b461010f610289565b604051918291826100df565b6001600160a01b0381160361009257565b905035906100f28261011b565b90602082820312610092576100dc9161012c565b34610092576100af610160366004610139565b610328565b3461009257610175366004610087565b6100b461010f610331565b34610092576100af610193366004610139565b6103a8565b6100dc916008021c6001600160a01b031690565b906100dc9154610198565b6100dc6000806101ac565b34610092576101d2366004610087565b6100b461010f6101b7565b6101e56103b1565b6100f2610203565b6100d06100dc6100dc9290565b6100dc906101ed565b6100f261021060006101fa565b61040a565b6100f26101dd565b33610226610331565b6102416001600160a01b0383165b916001600160a01b031690565b0361024f576100f29061040a565b6102729061025c60405190565b63118cdaa760e01b8152918291600483016100df565b0390fd5b6100dc906100d0565b6100dc9054610276565b6100dc60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b0161027f565b6100f2906102c26103b1565b61031d565b906001600160a01b03905b9181191691161790565b6100dc906100d0906001600160a01b031682565b6100dc906102dc565b6100dc906102f0565b906103126100dc610319926102f9565b82546102c7565b9055565b6100f2906000610302565b6100f2906102b6565b6100dc60006102b0610427565b6100f29061034a6103b1565b61035e816000610358610427565b01610302565b61037761037161036c610289565b6102f9565b916102f9565b907f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227006103a260405190565b600090a3565b6100f29061033e565b6103b9610289565b33906103c482610234565b0361024f5750565b916001600160a01b0360089290920291821b911b6102d2565b91906103f66100dc610319936102f9565b9083546103cc565b6100f2916000916103e5565b6100f29061042260008061041c610427565b016103fe565b61044b565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0090565b6104856103717f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930061036c8461047f8361027f565b92610302565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06103a26040519056fea2646970667358221220b25aff73f7e17d675d6475b8d301384865ecdf023ba108583acc170123d4b65664736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1A JUMPI PUSH1 0x40 MLOAD PUSH2 0x4E6 PUSH2 0x20 DUP3 CODECOPY PUSH2 0x4E6 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xB7840369 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x69 JUMPI PUSH4 0xFD91D7CD SUB PUSH2 0x92 JUMPI PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x180 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x97 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x92 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x87 JUMP JUMPDEST PUSH2 0xAF PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x87 JUMP JUMPDEST PUSH2 0xAF PUSH2 0x21D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x87 JUMP JUMPDEST PUSH2 0xB4 PUSH2 0x10F PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x92 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0x11B JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x92 JUMPI PUSH2 0xDC SWAP2 PUSH2 0x12C JUMP JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0xAF PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x139 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x87 JUMP JUMPDEST PUSH2 0xB4 PUSH2 0x10F PUSH2 0x331 JUMP JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0xAF PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x139 JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0xDC SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDC SWAP2 SLOAD PUSH2 0x198 JUMP JUMPDEST PUSH2 0xDC PUSH1 0x0 DUP1 PUSH2 0x1AC JUMP JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x87 JUMP JUMPDEST PUSH2 0xB4 PUSH2 0x10F PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x203 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0xDC PUSH2 0xDC SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0x1ED JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x210 PUSH1 0x0 PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x1DD JUMP JUMPDEST CALLER PUSH2 0x226 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x241 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x24F JUMPI PUSH2 0xF2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH2 0x272 SWAP1 PUSH2 0x25C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0xDF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0xD0 JUMP JUMPDEST PUSH2 0xDC SWAP1 SLOAD PUSH2 0x276 JUMP JUMPDEST PUSH2 0xDC PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 JUMPDEST ADD PUSH2 0x27F JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x2C2 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0xD0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0x2F0 JUMP JUMPDEST SWAP1 PUSH2 0x312 PUSH2 0xDC PUSH2 0x319 SWAP3 PUSH2 0x2F9 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2C7 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH1 0x0 PUSH2 0x302 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0xDC PUSH1 0x0 PUSH2 0x2B0 PUSH2 0x427 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x34A PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x35E DUP2 PUSH1 0x0 PUSH2 0x358 PUSH2 0x427 JUMP JUMPDEST ADD PUSH2 0x302 JUMP JUMPDEST PUSH2 0x377 PUSH2 0x371 PUSH2 0x36C PUSH2 0x289 JUMP JUMPDEST PUSH2 0x2F9 JUMP JUMPDEST SWAP2 PUSH2 0x2F9 JUMP JUMPDEST SWAP1 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH2 0x3A2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x33E JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x289 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x3C4 DUP3 PUSH2 0x234 JUMP JUMPDEST SUB PUSH2 0x24F JUMPI POP JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x2D2 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3F6 PUSH2 0xDC PUSH2 0x319 SWAP4 PUSH2 0x2F9 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0xF2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x422 PUSH1 0x0 DUP1 PUSH2 0x41C PUSH2 0x427 JUMP JUMPDEST ADD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH32 0x237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00 SWAP1 JUMP JUMPDEST PUSH2 0x485 PUSH2 0x371 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 PUSH2 0x36C DUP5 PUSH2 0x47F DUP4 PUSH2 0x27F JUMP JUMPDEST SWAP3 PUSH2 0x302 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x3A2 PUSH1 0x40 MLOAD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 GAS SELFDESTRUCT PUSH20 0xF7E17D675D6475B8D301384865ECDF023BA10858 GASPRICE 0xCC OR ADD 0x23 0xD4 0xB6 JUMP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "163:299:9:-:0;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 135,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 300,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 313,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 223,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 208,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 761,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 506,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 493,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 752,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 732,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_acceptOwnership": {
                  "entryPoint": 184,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_kettle": {
                  "entryPoint": 450,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 244,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_pendingOwner": {
                  "entryPoint": 357,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_renounceOwnership": {
                  "entryPoint": 151,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setKettle": {
                  "entryPoint": 333,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferOwnership": {
                  "entryPoint": 384,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_dynamict_address": {
                  "entryPoint": 408,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_address": {
                  "entryPoint": 630,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun__transferOwnership": {
                  "entryPoint": 1099,
                  "id": 330,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_acceptOwnership": {
                  "entryPoint": 541,
                  "id": 135,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 945,
                  "id": 259,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getOwnable2StepStorage": {
                  "entryPoint": 1063,
                  "id": 25,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_getOwnableStorage": {
                  "entryPoint": null,
                  "id": 162,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_msgSender": {
                  "entryPoint": null,
                  "id": 613,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_owner": {
                  "entryPoint": 649,
                  "id": 242,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_pendingOwner": {
                  "entryPoint": 817,
                  "id": 59,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_renounceOwnership": {
                  "entryPoint": 533,
                  "id": 273,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_renounceOwnership_inner": {
                  "entryPoint": 515,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_setKettle": {
                  "entryPoint": 808,
                  "id": 1425,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setKettle_inner": {
                  "entryPoint": 797,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership": {
                  "entryPoint": 936,
                  "id": 87,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership_111": {
                  "entryPoint": 1034,
                  "id": 111,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "getter_fun_kettle": {
                  "entryPoint": 439,
                  "id": 1413,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "modifier_onlyOwner": {
                  "entryPoint": 830,
                  "id": 226,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1418": {
                  "entryPoint": 694,
                  "id": 226,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_263": {
                  "entryPoint": 477,
                  "id": 226,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_address": {
                  "entryPoint": 428,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 639,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "shift_left": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_set_to_zero_address": {
                  "entryPoint": 1022,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic20": {
                  "entryPoint": 972,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 711,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_address_to_address": {
                  "entryPoint": 997,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_address_to_address": {
                  "entryPoint": 770,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 283,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "zero_value_for_split_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c8063715018a61461008257806379ba50971461007d5780638da5cb5b14610078578063b784036914610073578063e30c39781461006e578063f2fde38b146100695763fd91d7cd03610092576101c2565b610180565b610165565b61014d565b6100f4565b6100b8565b610097565b600091031261009257565b600080fd5b34610092576100a7366004610087565b6100af610215565b604051005b0390f35b34610092576100c8366004610087565b6100af61021d565b6001600160a01b031690565b90565b6001600160a01b03909116815260200190565b565b3461009257610104366004610087565b6100b461010f610289565b604051918291826100df565b6001600160a01b0381160361009257565b905035906100f28261011b565b90602082820312610092576100dc9161012c565b34610092576100af610160366004610139565b610328565b3461009257610175366004610087565b6100b461010f610331565b34610092576100af610193366004610139565b6103a8565b6100dc916008021c6001600160a01b031690565b906100dc9154610198565b6100dc6000806101ac565b34610092576101d2366004610087565b6100b461010f6101b7565b6101e56103b1565b6100f2610203565b6100d06100dc6100dc9290565b6100dc906101ed565b6100f261021060006101fa565b61040a565b6100f26101dd565b33610226610331565b6102416001600160a01b0383165b916001600160a01b031690565b0361024f576100f29061040a565b6102729061025c60405190565b63118cdaa760e01b8152918291600483016100df565b0390fd5b6100dc906100d0565b6100dc9054610276565b6100dc60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b0161027f565b6100f2906102c26103b1565b61031d565b906001600160a01b03905b9181191691161790565b6100dc906100d0906001600160a01b031682565b6100dc906102dc565b6100dc906102f0565b906103126100dc610319926102f9565b82546102c7565b9055565b6100f2906000610302565b6100f2906102b6565b6100dc60006102b0610427565b6100f29061034a6103b1565b61035e816000610358610427565b01610302565b61037761037161036c610289565b6102f9565b916102f9565b907f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227006103a260405190565b600090a3565b6100f29061033e565b6103b9610289565b33906103c482610234565b0361024f5750565b916001600160a01b0360089290920291821b911b6102d2565b91906103f66100dc610319936102f9565b9083546103cc565b6100f2916000916103e5565b6100f29061042260008061041c610427565b016103fe565b61044b565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0090565b6104856103717f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930061036c8461047f8361027f565b92610302565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06103a26040519056fea2646970667358221220b25aff73f7e17d675d6475b8d301384865ecdf023ba108583acc170123d4b65664736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xB7840369 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x69 JUMPI PUSH4 0xFD91D7CD SUB PUSH2 0x92 JUMPI PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x180 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x97 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x92 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x87 JUMP JUMPDEST PUSH2 0xAF PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x87 JUMP JUMPDEST PUSH2 0xAF PUSH2 0x21D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x87 JUMP JUMPDEST PUSH2 0xB4 PUSH2 0x10F PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x92 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0x11B JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x92 JUMPI PUSH2 0xDC SWAP2 PUSH2 0x12C JUMP JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0xAF PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x139 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x87 JUMP JUMPDEST PUSH2 0xB4 PUSH2 0x10F PUSH2 0x331 JUMP JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0xAF PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x139 JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0xDC SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDC SWAP2 SLOAD PUSH2 0x198 JUMP JUMPDEST PUSH2 0xDC PUSH1 0x0 DUP1 PUSH2 0x1AC JUMP JUMPDEST CALLVALUE PUSH2 0x92 JUMPI PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x87 JUMP JUMPDEST PUSH2 0xB4 PUSH2 0x10F PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x203 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0xDC PUSH2 0xDC SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0x1ED JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x210 PUSH1 0x0 PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x1DD JUMP JUMPDEST CALLER PUSH2 0x226 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x241 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x24F JUMPI PUSH2 0xF2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH2 0x272 SWAP1 PUSH2 0x25C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0xDF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0xD0 JUMP JUMPDEST PUSH2 0xDC SWAP1 SLOAD PUSH2 0x276 JUMP JUMPDEST PUSH2 0xDC PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 JUMPDEST ADD PUSH2 0x27F JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x2C2 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0xD0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0x2F0 JUMP JUMPDEST SWAP1 PUSH2 0x312 PUSH2 0xDC PUSH2 0x319 SWAP3 PUSH2 0x2F9 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2C7 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH1 0x0 PUSH2 0x302 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0xDC PUSH1 0x0 PUSH2 0x2B0 PUSH2 0x427 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x34A PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x35E DUP2 PUSH1 0x0 PUSH2 0x358 PUSH2 0x427 JUMP JUMPDEST ADD PUSH2 0x302 JUMP JUMPDEST PUSH2 0x377 PUSH2 0x371 PUSH2 0x36C PUSH2 0x289 JUMP JUMPDEST PUSH2 0x2F9 JUMP JUMPDEST SWAP2 PUSH2 0x2F9 JUMP JUMPDEST SWAP1 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH2 0x3A2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x33E JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x289 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x3C4 DUP3 PUSH2 0x234 JUMP JUMPDEST SUB PUSH2 0x24F JUMPI POP JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x2D2 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3F6 PUSH2 0xDC PUSH2 0x319 SWAP4 PUSH2 0x2F9 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0xF2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x422 PUSH1 0x0 DUP1 PUSH2 0x41C PUSH2 0x427 JUMP JUMPDEST ADD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH32 0x237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00 SWAP1 JUMP JUMPDEST PUSH2 0x485 PUSH2 0x371 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 PUSH2 0x36C DUP5 PUSH2 0x47F DUP4 PUSH2 0x27F JUMP JUMPDEST SWAP3 PUSH2 0x302 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x3A2 PUSH1 0x40 MLOAD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 GAS SELFDESTRUCT PUSH20 0xF7E17D675D6475B8D301384865ECDF023BA10858 GASPRICE 0xCC OR ADD 0x23 0xD4 0xB6 JUMP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "163:299:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;163:299:9;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;163:299:9;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;163:299:9;;;;;;;;:::o;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;-1:-1:-1;;;;;163:299:9;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;;;;163:299:9;;;;;;;;;:::i;219:21::-;;;;;:::i;163:299::-;;;;;;;;:::i;:::-;;;;:::i;2303:62:1:-;;;:::i;:::-;2357:1;;:::i;163:299:9:-;;;;;;;;;;;:::i;3155:101:1:-;3238:10;;3246:1;3238:10;:::i;:::-;;:::i;3155:101::-;;;:::i;2774:229:0:-;966:10:3;2869:14:0;;:::i;:::-;:24;-1:-1:-1;;;;;163:299:9;;2869:24:0;;-1:-1:-1;;;;;163:299:9;;;2869:24:0;;2865:96;;2989:6;;;:::i;2865:96::-;2916:34;;;163:299:9;;;;2916:34:0;-1:-1:-1;;;2916:34:0;;;;;;;;;:::i;:::-;;;;163:299:9;;;;;;;;;;:::i;2441:144:1:-;2570:8;;1280:65;2533:20;2570:8;;:::i;2303:62::-;2357:1;2303:62;;;:::i;:::-;2357:1;:::i;163:299:9:-;;-1:-1:-1;;;;;163:299:9;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;163:299:9;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;247:88::-;312:16;247:88;312:16;;:::i;247:88::-;;;;:::i;1680:168:0:-;1826:15;;1784:25;;:::i;2303:62:1:-;2357:1;2303:62;;;:::i;:::-;2197:26:0;2162:25;2197:15;2162:25;;:::i;:::-;2197:15;:26;:::i;:::-;2238:43;;2263:7;;:::i;:::-;2238:43;:::i;:::-;;;:::i;:::-;;;;163:299:9;;;;2238:43:0;;;;2041:247::o;:::-;;;;:::i;2658:162:1:-;2717:7;;:::i;:::-;966:10:3;;2717:23:1;966:10:3;2717:23:1;163:299:9;2717:23:1;;2713:101;;2658:162;:::o;163:299:9:-;;-1:-1:-1;;;;;163:299:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;2472:222:0:-;2678:8;2472:222;2621:22;;2586:25;;;:::i;:::-;2628:15;2621:22;:::i;:::-;2678:8;:::i;1187:174::-;1285:70;1187:174;:::o;3774:248:1:-;3975:40;;1280:65;3941:19;3923:8;;1280:65;3923:8;:::i;:::-;3941:19;;:::i;3975:40::-;;;;163:299:9;;;"
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "kettle()": "fd91d7cd",
              "owner()": "8da5cb5b",
              "pendingOwner()": "e30c3978",
              "renounceOwnership()": "715018a6",
              "setKettle(address)": "b7840369",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kettle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kettle\",\"type\":\"address\"}],\"name\":\"setKettle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KettleAccess.sol\":\"KettleAccess\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x9e7af066bf68d0db720a4f175c1a6bc7bd07d64f32b645c67f628715203d724b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271ff2599b4c3fca6fad4878732af77ac0970beb2dd5bc6a10f2c4c44ba12036\",\"dweb:/ipfs/QmYqdfzPgbJRDz9vsmHDAikiCTSXataKNthun2bH15hgBH\"]},\"contracts/KettleAccess.sol\":{\"keccak256\":\"0xe182e61576a2aeda73409d65e82687cdc1bfd39aeebd25155804b58e7100ca34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f37fddae4844e4070e63dc5444db884daca5c2ed8b61805eef6b6c5592fcbbe\",\"dweb:/ipfs/QmamvC4V9aQcnm3f2AaKqQA1fAAJd2JoihyuxGoiDkFGa2\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1413,
                "contract": "contracts/KettleAccess.sol:KettleAccess",
                "label": "kettle",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          }
        }
      },
      "contracts/interfaces/IEscrowController.sol": {
        "IEscrowController": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "bool",
                  "name": "whitelisted",
                  "type": "bool"
                }
              ],
              "name": "AskMakerWhitelisted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "bool",
                  "name": "whitelisted",
                  "type": "bool"
                }
              ],
              "name": "BidTakerWhitelisted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                }
              ],
              "name": "EscrowClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "placeholder",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "buyer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "seller",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC721",
                      "name": "collection",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rebate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "redemptionHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bool",
                      "name": "withRedemption",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "redemptionCharge",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lockTime",
                      "type": "uint256"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Escrow",
                  "name": "escrow",
                  "type": "tuple"
                }
              ],
              "name": "EscrowOpened",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bool",
                  "name": "rebateReturned",
                  "type": "bool"
                }
              ],
              "name": "EscrowRejected",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "EscrowSettled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "placeholder",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bool",
                  "name": "escrowed",
                  "type": "bool"
                }
              ],
              "name": "PlaceholderEscrowed",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "TOKEN_SUPPLIER",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "placeholder",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "buyer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "seller",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC721",
                      "name": "collection",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rebate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "redemptionHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bool",
                      "name": "withRedemption",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "redemptionCharge",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lockTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Escrow",
                  "name": "escrow",
                  "type": "tuple"
                }
              ],
              "name": "claimEscrow",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "placeholder",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rebate",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "withRedemption",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "redemptionHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "redemptionCharge",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "buyer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum OfferKind",
                      "name": "kind",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "soft",
                      "type": "bool"
                    },
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "maker",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "taker",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "enum Criteria",
                          "name": "criteria",
                          "type": "uint8"
                        },
                        {
                          "internalType": "contract IERC721",
                          "name": "collection",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "identifier",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Collateral",
                      "name": "collateral",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IERC20",
                          "name": "currency",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rebate",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct MarketOfferTerms",
                      "name": "terms",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "recipient",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct FeeTerms",
                      "name": "fee",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expiration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MarketOffer",
                  "name": "offer",
                  "type": "tuple"
                }
              ],
              "name": "openEscrow",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "placeholder",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "buyer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "seller",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC721",
                      "name": "collection",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rebate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "redemptionHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bool",
                      "name": "withRedemption",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "redemptionCharge",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lockTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Escrow",
                  "name": "escrow",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "returnRebate",
                  "type": "bool"
                }
              ],
              "name": "rejectEscrow",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "escrowId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "enum Side",
                      "name": "side",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "placeholder",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "buyer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "seller",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC721",
                      "name": "collection",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rebate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "redemptionHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bool",
                      "name": "withRedemption",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "redemptionCharge",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lockTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Escrow",
                  "name": "escrow",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "settleEscrow",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "TOKEN_SUPPLIER()": "7c6e610d",
              "claimEscrow(uint256,(uint8,uint256,uint256,address,address,address,address,uint256,address,uint256,uint256,bytes32,bool,uint256,uint256,uint256))": "13569cfd",
              "openEscrow(uint256,uint256,bool,bytes32,uint256,address,address,(uint8,bool,uint8,address,address,(uint8,address,uint256),(address,uint256,uint256),(address,uint256),uint256,uint256))": "89d8b82d",
              "rejectEscrow(uint256,(uint8,uint256,uint256,address,address,address,address,uint256,address,uint256,uint256,bytes32,bool,uint256,uint256,uint256),bool)": "36cede41",
              "settleEscrow(uint256,(uint8,uint256,uint256,address,address,address,address,uint256,address,uint256,uint256,bytes32,bool,uint256,uint256,uint256),uint256)": "40d30854"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"AskMakerWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"BidTakerWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"}],\"name\":\"EscrowClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"redemptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"withRedemption\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"redemptionCharge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Escrow\",\"name\":\"escrow\",\"type\":\"tuple\"}],\"name\":\"EscrowOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"rebateReturned\",\"type\":\"bool\"}],\"name\":\"EscrowRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"EscrowSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"escrowed\",\"type\":\"bool\"}],\"name\":\"PlaceholderEscrowed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_SUPPLIER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"redemptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"withRedemption\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"redemptionCharge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Escrow\",\"name\":\"escrow\",\"type\":\"tuple\"}],\"name\":\"claimEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withRedemption\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"redemptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"redemptionCharge\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum OfferKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"soft\",\"type\":\"bool\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum Criteria\",\"name\":\"criteria\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"}],\"internalType\":\"struct Collateral\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketOfferTerms\",\"name\":\"terms\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"internalType\":\"struct FeeTerms\",\"name\":\"fee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketOffer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"openEscrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"redemptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"withRedemption\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"redemptionCharge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Escrow\",\"name\":\"escrow\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"returnRebate\",\"type\":\"bool\"}],\"name\":\"rejectEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebate\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"redemptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"withRedemption\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"redemptionCharge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Escrow\",\"name\":\"escrow\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"settleEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEscrowController.sol\":\"IEscrowController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/Structs.sol\":{\"keccak256\":\"0xc28854062cd2ad222d7df08d37524ce709a6abafb66461c166048f6756c2e4ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb7fa5e8858d8ac66a9fb0b51871ad12286c3e1243f511d8b7fe213846391177\",\"dweb:/ipfs/Qmcq8yaPAu91UEZ7i77RcNgLA22Lgpfz7tnpq9gWyifNwp\"]},\"contracts/interfaces/IEscrowController.sol\":{\"keccak256\":\"0x27e1d89ee5593cbfe40ac6f95c8db198cef0e6330e9221619f362af1141b1d28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48d5e5a0dfa3f5766b8a81a59cec178c8bea5d84d53968a9d3ba17993e1cacf2\",\"dweb:/ipfs/QmaLgdF6zYebW77p8C8MHwm2ME4g931xVCbfTvP3tJdMdU\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      }
    }
  }
}